{"version":3,"sources":["../../libs/theme-alain-ms/layout/src/lib/ms/ms.service.ts","../../../../node_modules/tslib/tslib.es6.js","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.service.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/langs/langs.component.ts","../libs/theme-alain-ms/layout/src/lib/ms/services/topbar.service.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/notice/notice.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.service.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/search/search.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.ts","../../libs/theme-alain-ms/layout/src/lib/services/routes.processor.ts","../../libs/theme-alain-ms/layout/src/lib/services/layout-state.service.ts","../libs/theme-alain-ms/layout/src/lib/ms/services/product.service.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/components/sidebar/sidebar.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/components/topbar/topbar.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/help/help.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/link-to/link-to.directive.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/page-bar/page-bar.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/page-nav/page-nav.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/page-single/page-single.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/panel/panel.component.ts","../esm2015/libs/theme-alain-ms/layout/src/lib/ms/shared/service-layout/service-layout.component.ts","../libs/theme-alain-ms/layout/src/lib/ms/shared/shared.module.ts","../../libs/theme-alain-ms/layout/src/lib/ms/ms.component.ts","../../libs/theme-alain-ms/layout/src/lib/providers/init.provider.ts","../layout/src/lib/layout.module.ts"],"names":["BrandService","bm","settings","_this","this","notify$","BehaviorSubject","_isMobile","topHeight","hideNav","setLayout","Object","assign","layout","hasTopbar","hasSidebar","hasFixed","mobileMedia","observe","subscribe","state","checkMedia","matches","isMatched","defineProperty","prototype","asObservable","value","collapsed","next","name","setTopbar","status","setSidebar","setFixed","triggerNotify","type","ngOnDestroy","unsubscribe","Injectable","args","providedIn","BreakpointObserver","SettingsService","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","done","push","error","__spread","concat","MSAllNavService","http","arrSrv","_data","nav","filter","w","children","reduce","p","getData","of","getByHttp","fixData","data","splitColumn","item","left","leftColumn","columns","Array","fill","map","_","idx","list","count","forEach","category","sort","a","b","_left","p1","level","p2","parent","get","pipe","res","refreshActive","visitTree","active","_HttpClient","ArrayService","MSAllNavComponent","srv","brandSrv","cdr","doc","unsubscribe$","Subject","loading","$mouse","open","allL2","allPanel","handleOpen","body","classList","markForCheck","updateHeight","load","height","window","innerHeight","dropdownEl","nativeElement","style","_enter","validOpen","_leave","mouseHandle","handleMouse","detectChanges","ngOnInit","takeUntil","auditTime","complete","Component","selector","template","host","[class.alain-ms__an-active]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Inject","DOCUMENT","ViewChild","static","HostListener","MSLangsComponent","configState","sessionState","languages$","getDeep$","languages","lang","snq","find","language","cultureName","selectedLangCulture","displayName","flagIcon","getLanguage","change","setLanguage","[class.alain-ms__topbar-item]","[class.alain-ms__topbar-dd]","ConfigStateService","SessionStateService","MSTopbarService","messagess","getNav","navLinks","tap","MSNoticeComponent","router","tokenService","msg","messages","link","l","messageUrl","id","logout","clear","navigateByUrl","login_url","[class.alain-ms__notice]","Router","DA_SERVICE_TOKEN","NzMessageService","MSRegionService","platList","selected","setSelected","MSRegionComponent","inited","[class.alain-ms__region]","MSSearchComponent","show","q","search$","debounceTime","distinctUntilChanged","switchMap","no","pi","ps","_click","ipt","focus","[class.mr-md]","MSUserComponent","authService","configStateService","currentUser$","getOne$","initLogin","navigate","redirectUrl","url","[class.alain-ms__user]","AuthService","RoutesProcessor","injector","AbpRoutesService","LocalizationPipe","current_url","RouterState","split","decodeURI","routesService","x","formatParams","path","CurrentUrl","result","node","CurrentRoute","pushNode","parentName","stack","NavConfigs","pop","visible$","y","hide","localizationPipe","transform","icon","iconClass","products","productId","GetPageNavs","routerState","pageNavs","tree","searchRoute","apply","transMenu","element","hasChildren","specifyParent","isSpecifyParent","first","second","text","_a","regexp","match","parameter","substr","itemId","getParamKeyValue","replace","paramKey","targetRouter","searchRouter","root","params","property","LayoutStateService","store","InternalStore","isFetching","hasAllNav","categories","navConfig","title","hasPageNav","routesProcessor","listenRoutes","getStore$","sliceState","getFetching$","getCategories","getCategories$","getShortcuts","getShortcuts$","getNavConfig","getNavConfig$","getPageNavs$","getPageNavs","setStore","patch","setFetching","fetchPageNavs","CurrentNavConfig","Category$","Injector","MSProductService","layoutSateService","showAll","keywords","allProduct","hasResult","noResult","recent","search","oldList","deepCopy","includes","MockID","_id","findIndex","MSSidebarComponent","layoutStateService","brand","showProduct","searchCategories","i18n","scroll","searchList","setTimeout","categoryEl","scrollTop","ngAfterViewInit","[class.alain-ms__sidebar]","[class.alain-ms__sidebar-showproduct]","MSTopbarComponent","environment","allNav","getEnvironment","application","mergeLinks","links","finance","workorder","support","className","undefined","[class.alain-ms__topbar]","[class.alain-ms__topbar-single]","EnvironmentService","Input","[class.ms-help]","MSLinkToDirective","linkToChanged","EventEmitter","location","href","emit","then","Directive","Output","MSPageBarComponent","menuSrv","_menus","autoTitle","recursiveBreadcrumb","getPathByUrl","setTitle","menus","router$","merge","events","NavigationEnd","notify","[class.ms-page-bar]","MenuService","InputBoolean","MSPageNavComponent","titSrv","_config","val","backHref","titleI18n","docI18n","add","visit","to","preventDefault","toggle","ngOnChanges","TitleService","MSPageSingleComponent","wide","fixed","[class.ms-page-single]","[class.ms-panel]","MSServiceLayoutComponent","navList","COMPONENTS","MSHelpComponent","MSPanelComponent","NgModule","imports","CommonModule","RouterModule","FormsModule","AlainThemeModule","forChild","NzPopoverModule","NzIconModule","NzOutletModule","declarations","exports","MSLayoutComponent","mediaMatcher","route","reuseTabSrv","el","renderer","routerData","snapshot","evt","RouteConfigLoadStart","scrollToTop","NavigationError","nzDuration","exists","query","screen-xs","screen-sm","screen-md","screen-lg","screen-xl","queryCls","keys","matchMedia","setClass","isMobile","querySelector","_b","updateHostClass","setBodyClass","colorWeak","color-weak","remove","MediaMatcher","ActivatedRoute","ReuseTabService","ElementRef","Renderer2","LAYOUT_INIT_PROVIDERS","provide","APP_INITIALIZER","useFactory","init","deps","multi","event","ResolveEnd","listenRouter","MS_WIDGETS","MS_COMPONENTS","MS_SHARED_COMPONENTS","LayoutModule","forRoot","ngModule","providers","CoreModule","DragDropModule","MSSharedModule","NzSpinModule","NzAnchorModule","NzAutocompleteModule","NzAvatarModule","NzDividerModule","NzInputModule","ThemeBtnModule"],"mappings":"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","sourcesContent":["import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Layout, SettingsService, _HttpClient } from '@delon/theme';\r\n//import { environment } from '@env/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MSLayout } from '../models/layout';\r\n\r\n/**\r\n * 用于维护布局数据\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class BrandService implements OnDestroy {\r\n  private notify$ = new BehaviorSubject<string | null>(null);\r\n  private _isMobile = false;\r\n\r\n  /** 顶部高度，若变更需要同时重新指定 LESS 变量：`@alain-ms-topbar-height` 值 */\r\n  readonly topHeight = 50;\r\n\r\n  // #region fields\r\n\r\n  get notify(): Observable<string | null> {\r\n    return this.notify$.asObservable();\r\n  }\r\n\r\n  get isMobile(): boolean {\r\n    return this._isMobile;\r\n  }\r\n\r\n  get layout(): MSLayout {\r\n    return this.settings.layout as MSLayout;\r\n  }\r\n\r\n  hideNav = false;\r\n\r\n  // #endregion\r\n\r\n  constructor(bm: BreakpointObserver, private settings: SettingsService) {\r\n    // fix layout data\r\n    settings.setLayout({\r\n      //...(environment as any).ay,\r\n      ...settings.layout,\r\n      hasTopbar: true,\r\n      hasSidebar: false,\r\n      hasFixed: false,\r\n    });\r\n\r\n    const mobileMedia = 'only screen and (max-width: 767.99px)';\r\n    bm.observe(mobileMedia).subscribe((state) => this.checkMedia(state.matches));\r\n    this.checkMedia(bm.isMatched(mobileMedia));\r\n  }\r\n\r\n  private checkMedia(value: boolean): void {\r\n    this._isMobile = value;\r\n    this.layout.collapsed = this._isMobile;\r\n    this.notify$.next('mobile');\r\n  }\r\n\r\n  setLayout(name: string | Layout, value?: any): void {\r\n    this.settings.setLayout(name, value);\r\n    this.notify$.next('layout');\r\n  }\r\n\r\n  setTopbar(status: boolean): void {\r\n    this.setLayout('hasTopbar', status);\r\n  }\r\n\r\n  setSidebar(status: boolean): void {\r\n    this.setLayout('hasSidebar', status);\r\n  }\r\n\r\n  setFixed(status: boolean): void {\r\n    this.setLayout('hasFixed', status);\r\n  }\r\n\r\n  triggerNotify(type: string = 'custom'): void {\r\n    this.notify$.next(type);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ArrayService } from '@delon/util';\r\nimport { MSLink } from '../../../models/layout';\r\n\r\nexport interface MSAllNavData {\r\n  nav?: MSAllNav[];\r\n  navBottom?: MSAllNavItem[];\r\n  bottomText?: string;\r\n}\r\n\r\n// tslint:disable-next-line: no-use-before-declare\r\nexport interface MSAllNav extends MSAllNavItem {\r\n  /**\r\n   * 二级菜单\r\n   * - 若指定则 `left`、`right` 失效\r\n   * - 最多只支持一层\r\n   */\r\n  children?: MSAllNav[];\r\n  /**\r\n   * 左边分类\r\n   */\r\n  left?: MSAllNavCategory[];\r\n  /**\r\n   * 左边分类栏数，默认：`4`\r\n   */\r\n  leftColumn?: number;\r\n  /**\r\n   * 分栏后的左边分类，用于渲染\r\n   */\r\n  _left?: MSAllNavCategoryColumn[];\r\n  /**\r\n   * 右边分类\r\n   */\r\n  right?: MSAllNavCategory[];\r\n\r\n  level?: number;\r\n  parent?: MSAllNav;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface MSAllNavCategory {\r\n  text: string;\r\n  list?: MSAllNavItem[];\r\n}\r\n\r\nexport interface MSAllNavCategoryColumn {\r\n  list: MSAllNavCategory[];\r\n  count: number;\r\n  idx: number;\r\n}\r\n\r\nexport interface MSAllNavItem extends MSLink {\r\n  /** 提醒标识，红色字眼，例如：HOT,NEW */\r\n  tip?: string;\r\n}\r\n\r\n/**\r\n * 顶部菜单所有菜单数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/all-nav-en-US.json`\r\n * - 最终处理数据以 `all-nav.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSAllNavService {\r\n  private _data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this._data.nav!.filter((w) => w.children && w.children.length > 0);\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this._data.nav!.reduce((p: MSAllNav[], c: MSAllNav) => (p = p.concat(c.children ? c.children : c)), []);\r\n  }\r\n\r\n  getData(): Observable<MSAllNavData> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n     private arrSrv: ArrayService,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private fixData(data: MSAllNavData): MSAllNavData {\r\n    const splitColumn = (item: MSAllNav) => {\r\n      if (!item.left) {\r\n        return;\r\n      }\r\n      item.leftColumn = item.leftColumn || 4;\r\n      const columns: MSAllNavCategoryColumn[] = new Array(item.leftColumn).fill({}).map((_, idx) => ({\r\n        list: [],\r\n        count: 0,\r\n        idx,\r\n      }));\r\n      item.left\r\n        .filter((w) => w.list)\r\n        .forEach((category) => {\r\n          const idx = [...columns].sort((a, b) => a.count - b.count)[0].idx;\r\n          columns[idx].list.push(category);\r\n          columns[idx].count += category.list!.length;\r\n        });\r\n      item._left = columns;\r\n    };\r\n    data.nav!.forEach((p1) => {\r\n      p1.level = 1;\r\n      if (p1.children) {\r\n        p1.children.forEach((p2) => {\r\n          p2.parent = p1;\r\n          p2.level = 2;\r\n          splitColumn(p2);\r\n        });\r\n      } else {\r\n        splitColumn(p1);\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n  private getByHttp(): Observable<MSAllNavData> {\r\n    return this.http.get(`./assets/tmp/all-nav-zh-TW.json`).pipe(\r\n      map((res: any) => {\r\n        this._data = this.fixData(res);\r\n        return this._data;\r\n      }),\r\n    );\r\n  }\r\n\r\n  refreshActive(i: MSAllNav): void {\r\n    this.arrSrv.visitTree(this._data.nav!, (item: MSAllNav) => {\r\n      item.active = false;\r\n    });\r\n    while (i) {\r\n      i.active = true;\r\n      i = i.parent!;\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { auditTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSAllNav, MSAllNavData, MSAllNavService } from './all-nav.service';\r\n\r\nconst ANT_TIMEOUT = 150;\r\n\r\n/**\r\n * 顶部所有菜单组件，当单页布局模式时渲染\r\n */\r\n@Component({\r\n  selector: 'ms-all-nav',\r\n  templateUrl: './all-nav.component.html',\r\n  host: {\r\n    '[class.alain-ms__an-active]': 'validOpen',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSAllNavComponent implements OnInit, OnDestroy {\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @ViewChild('dropdown', { static: true })\r\n  private dropdownEl!: ElementRef;\r\n  private loading = false;\r\n\r\n  $mouse = new Subject<{ i: MSAllNav; status: boolean }>();\r\n  open = false;\r\n  data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this.srv.allL2;\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this.srv.allPanel;\r\n  }\r\n\r\n  get validOpen(): boolean {\r\n    return this.data && this.open;\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSAllNavService,\r\n    private brandSrv: BrandService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Inject(DOCUMENT) private doc?: any,\r\n  ) {}\r\n\r\n  private handleOpen(status: boolean): void {\r\n    this.doc.body.classList[status ? 'add' : 'remove']('alain-ms__an-body');\r\n    this.open = status;\r\n    this.cdr.markForCheck();\r\n    this.updateHeight().load();\r\n  }\r\n\r\n  private load(): void {\r\n    if (this.loading || this.data) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.srv.getData().subscribe((res) => {\r\n      this.data = res;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private updateHeight(): this {\r\n    const height = window.innerHeight - this.brandSrv.topHeight;\r\n    (this.dropdownEl.nativeElement as HTMLElement).style.height = `${height}px`;\r\n    return this;\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  _enter(): void {\r\n    if (!this.validOpen) {\r\n      this.handleOpen(true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  _leave(): void {\r\n    this.handleOpen(false);\r\n  }\r\n\r\n  mouseHandle(i: MSAllNav, status: boolean): void {\r\n    this.$mouse.next({ i, status });\r\n  }\r\n\r\n  private handleMouse(i: MSAllNav): void {\r\n    this.srv.refreshActive(i);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this._enter();\r\n    const { $mouse, unsubscribe$ } = this;\r\n    $mouse\r\n      .asObservable()\r\n      .pipe(takeUntil(unsubscribe$), auditTime(ANT_TIMEOUT))\r\n      .subscribe((res) => this.handleMouse(res.i));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    const { unsubscribe$ } = this;\r\n    unsubscribe$.next();\r\n    unsubscribe$.complete();\r\n  }\r\n}\r\n","import { ConfigStateService, SessionStateService, ApplicationConfiguration } from '@abp/ng.core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport snq from 'snq';\r\n\r\n@Component({\r\n  selector: 'ms-langs',\r\n  templateUrl: './langs.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSLangsComponent {\r\n\r\n  languages$ = this.configState.getDeep$('localization.languages');\r\n\r\n  get defaultLanguage$(): Observable<{ displayName: string; flagIcon: string }> {\r\n    return this.languages$.pipe(\r\n      map(languages => {\r\n        const lang: Partial<ApplicationConfiguration.Language> = snq(\r\n          () => languages.find(language => language.cultureName === this.selectedLangCulture),\r\n          {} as Partial<ApplicationConfiguration.Language>,\r\n        );\r\n        return {\r\n          displayName: lang.displayName || '',\r\n          flagIcon: lang.flagIcon,\r\n        };\r\n      }),\r\n    );\r\n  }\r\n\r\n  get dropdownLanguages$(): Observable<ApplicationConfiguration.Language[]> {\r\n    return this.languages$.pipe(\r\n      map(\r\n        languages =>\r\n          snq(() => languages.filter(lang => lang.cultureName !== this.selectedLangCulture)),\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n\r\n  get selectedLangCulture(): string {\r\n    return this.sessionState.getLanguage();\r\n  }\r\n\r\n  constructor(\r\n    private configState: ConfigStateService,\r\n    private sessionState: SessionStateService\r\n  ) {\r\n  }\r\n\r\n\r\n  change(cultureName: string): void {\r\n    this.sessionState.setLanguage(cultureName);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MSLink } from '../../models/layout';\r\n\r\nexport interface MSTopbar {\r\n  [key: string]: any;\r\n\r\n  messagess?: MSTopbarMessage[];\r\n\r\n  navLinks?: { [key: string]: MSTopbarNavLink };\r\n}\r\n\r\nexport interface MSTopbarMessage extends MSLink {\r\n  [key: string]: any;\r\n\r\n  className?: string;\r\n\r\n  title?: string;\r\n\r\n  createdTime?: string;\r\n}\r\n\r\nexport interface MSTopbarNavLink extends MSLink {\r\n  [key: string]: any;\r\n\r\n  id?: string;\r\n\r\n  text?: string;\r\n\r\n  className?: string;\r\n  /** 二级菜单，只支持一层 */\r\n  links?: MSTopbarNavLink[];\r\n}\r\n\r\n/**\r\n * 顶部菜单所有数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/topbar-en-US.json`\r\n * - 最终处理数据以 `topbar.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSTopbarService {\r\n  private _data!: MSTopbar;\r\n\r\n  get data(): MSTopbar {\r\n    return this._data;\r\n  }\r\n\r\n  get messages(): MSTopbarMessage[] {\r\n    return this._data.messagess!;\r\n  }\r\n\r\n  getData(): Observable<MSTopbar> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  getNav(key: string): MSTopbarNavLink {\r\n    return this._data.navLinks![key] || {};\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<any> {\r\n    return this.http.get(`./assets/tmp/topbar-zh-TW.json`).pipe(\r\n      tap((res: any) => {\r\n        this._data = res;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { MSTopbarMessage, MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-notice',\r\n  templateUrl: './notice.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__notice]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSNoticeComponent {\r\n  get list(): MSTopbarMessage[] {\r\n    return this.srv.messages.map((i) => {\r\n      i.link = this.l.messageUrl + i.id;\r\n      return i;\r\n    });\r\n  }\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('message');\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    private router: Router,\r\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\r\n    public settings: SettingsService,\r\n    public msg: NzMessageService,\r\n  ) {}\r\n\r\n  logout(): void {\r\n    this.tokenService.clear();\r\n    this.router.navigateByUrl(this.tokenService.login_url!);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport interface MSRegionDistrict {\r\n  name?: string;\r\n  list?: MSRegionItem[];\r\n}\r\n\r\nexport interface MSRegionItem {\r\n  id?: string;\r\n  country?: string;\r\n  name?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSRegionService {\r\n  private _data!: MSRegionDistrict[];\r\n\r\n  private get platList(): MSRegionItem[] {\r\n    return this._data.reduce((p, c) => p.concat(c.list!), [] as MSRegionItem[]);\r\n  }\r\n\r\n  get item(): MSRegionItem {\r\n    return this.platList.find((w) => w.selected)!;\r\n  }\r\n\r\n  get list(): MSRegionDistrict[] {\r\n    return this._data;\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<NzSafeAny[]> {\r\n    return this.http.get(`/region`).pipe(\r\n      tap((list: any[]) => {\r\n        //const zone = this.i18nSrv.zone;\r\n        //const key = `${list[0][`${zone}Name`] ? zone : 'cn'}Name`;\r\n        // const res = list.reduce((p: MSRegionDistrict[], c) => {\r\n        //   const districtName = `district_${key}`;\r\n        //   let item = p.find((w) => w.name === c[districtName]);\r\n        //   if (!item) {\r\n        //     item = { name: c[districtName], list: [] };\r\n        //     p.push(item);\r\n        //   }\r\n        //   item.list?.push({ id: c.id, country: c.country, name: c[key], selected: c.id === 'cn-shanghai' });\r\n        //   return p;\r\n        // }, []);\r\n        // this._data = res;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getData(): Observable<NzSafeAny[] | null> {\r\n    return this._data ? of(null) : this.getByHttp();\r\n  }\r\n\r\n  setSelected(item: MSRegionItem): void {\r\n    this.platList.find((w) => w.selected)!.selected = false;\r\n    item.selected = true;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MSRegionItem, MSRegionService } from './region.service';\r\n\r\n@Component({\r\n  selector: 'ms-region',\r\n  templateUrl: './region.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__region]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSRegionComponent implements OnInit {\r\n  inited = false;\r\n\r\n  constructor(public srv: MSRegionService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  selected(item: MSRegionItem): void {\r\n    this.srv.setSelected(item);\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, OnDestroy, ViewChild } from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-search',\r\n  templateUrl: './search.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.mr-md]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSearchComponent implements OnDestroy {\r\n  @ViewChild('ipt', { static: true }) private ipt!: ElementRef<any>;\r\n  show = false;\r\n  q = '';\r\n  search$ = new Subject<string>();\r\n  list: any[] = [];\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('search');\r\n  }\r\n\r\n  constructor(http: _HttpClient, private srv: MSTopbarService, private cdr: ChangeDetectorRef) {\r\n    this.search$\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        switchMap((q: string) => http.get('/user', { no: q, pi: 1, ps: 5 })),\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.list = res.list;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('click')\r\n  _click(): void {\r\n    this.ipt.nativeElement.focus();\r\n    this.show = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.search$.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { UserService } from '@core';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { MSTopbarService } from '../../services/topbar.service';\r\nimport { AuthService } from '@fs-tw/account';\r\nimport { ConfigStateService,CurrentUserDto } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ms-user',\r\n  templateUrl: './user.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__user]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSUserComponent {\r\n  currentUser$: Observable<CurrentUserDto> = this.configStateService.getOne$('currentUser');\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    srv: MSTopbarService,\r\n    public settings: SettingsService\r\n  ) {\r\n  }\r\n\r\n  initLogin() {\r\n    this.authService.initLogin();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/'], { state: { redirectUrl: this.router.url } });\r\n    });\r\n  }\r\n}\r\n","import {\r\n  RoutesService as AbpRoutesService,\r\n  LocalizationPipe,\r\n  ABP,\r\n  TreeNode,\r\n} from '@abp/ng.core';\r\n\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport {\r\n  MSMenu,\r\n  MSProduct,\r\n  MSProductCategory,\r\n  MSServiceNavConfig,\r\n} from '../models';\r\nimport { Observable } from 'rxjs';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\n\r\nexport class RoutesProcessor {\r\n  private get routesService(): AbpRoutesService {\r\n    return this.injector.get(AbpRoutesService);\r\n  }\r\n\r\n  private get localizationPipe(): LocalizationPipe {\r\n    return this.injector.get(LocalizationPipe);\r\n  }\r\n\r\n  public RouterState: RouterStateSnapshot;\r\n\r\n  get CurrentUrl(): string {\r\n    var current_url = this.RouterState.url.split('?')[0];\r\n    return decodeURI(current_url);\r\n  }\r\n\r\n  get CurrentRoute(): TreeNode<ABP.Route> {\r\n    return this.routesService.find(\r\n      (x) => this.formatParams(x.path) === this.CurrentUrl\r\n    );\r\n  }\r\n\r\n  get NavConfigs(): TreeNode<ABP.Route>[] {\r\n    let result = [];\r\n    let node = this.CurrentRoute;\r\n    if (!node) return [];\r\n    pushNode(node);\r\n    while (!!node.parent) {\r\n      node = node.parent;\r\n      pushNode(node);\r\n    }\r\n    return result;\r\n\r\n    function pushNode(node) {\r\n      if (!!node && !!node['navConfig']) {\r\n        result.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  get CurrentNavConfig(): MSServiceNavConfig {\r\n    let result = {\r\n      parentName: null,\r\n      name: this.CurrentRoute.parentName,\r\n    } as MSServiceNavConfig;\r\n    let stack = this.NavConfigs;\r\n    while (stack.length !== 0) {\r\n      let node = stack.pop();\r\n      result = { ...result, ...node['navConfig'] };\r\n    }\r\n    return result;\r\n  }\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  public get Category$(): Observable<MSProductCategory[]> {\r\n    return this.routesService.visible$.pipe(\r\n      map((x) => {\r\n        if (x.length === 0) return;\r\n        return x\r\n          .filter(\r\n            (y) =>\r\n              y.name === eThemeSharedRouteNames.Administration &&\r\n              !this.routesService.hide(y)\r\n          )\r\n          .map((r) => r.children)\r\n          .reduce((a, b) => a.concat(b))\r\n          .map((r) => {\r\n            let category: MSProductCategory = {\r\n              id: r.name,\r\n              name: this.localizationPipe.transform(r.name),\r\n              icon: r.iconClass,\r\n              products: [],\r\n              link: r.path,\r\n            };\r\n\r\n            category.products = r.children\r\n              .filter((c) => !this.routesService.hide(c))\r\n              .map((c) => {\r\n                let product: MSProduct = {\r\n                  productId: c.name,\r\n                  name: this.localizationPipe.transform(c.name),\r\n                  link: c.path,\r\n                  icon: c.iconClass,\r\n                  id: c.name,\r\n                };\r\n                return product;\r\n              });\r\n            return category;\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  public GetPageNavs(\r\n    routerState: RouterStateSnapshot,\r\n    nav: MSServiceNavConfig\r\n  ) {\r\n    if (!this.CurrentRoute) return [];\r\n    let pageNavs: MSMenu[] = [];\r\n    this.RouterState = routerState;\r\n    let target;\r\n    this.routesService.tree\r\n      .filter((x) => !this.routesService.hide(x))\r\n      .find((x) => {\r\n        let result = this.searchRoute(x, nav);\r\n        if (!!result) target = result;\r\n      });\r\n    if (!!target) {\r\n      pageNavs.push(...this.transMenu(target));\r\n    }\r\n\r\n    return pageNavs;\r\n  }\r\n  private searchRoute(element: TreeNode<ABP.Route>, nav: MSServiceNavConfig) {\r\n    let hasChildren = !!element.children && element.children.length > 0;\r\n    let specifyParent = this.formatParams(nav.parentName);\r\n    let isSpecifyParent = !!specifyParent;\r\n    if (!isSpecifyParent && element.name == nav.name) {\r\n      return element;\r\n    }\r\n    if (isSpecifyParent && element.name === specifyParent && hasChildren) {\r\n      let target = element.children.find((x) => x.name === nav.name);\r\n      if (!!target) return target;\r\n    }\r\n    if (element.children != null) {\r\n      var i;\r\n      var result = null;\r\n      for (i = 0; result == null && i < element.children.length; i++) {\r\n        result = this.searchRoute(element.children[i], nav);\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n  private transMenu(first: any) {\r\n    let result = [];\r\n    first.children\r\n      .filter((r) => !this.routesService.hide(r))\r\n      .forEach((second) => {\r\n        let left: MSMenu = {\r\n          text:\r\n            second.displayName || this.localizationPipe.transform(second.name),\r\n          link: this.formatParams(second.path), //(third.url || third.path),\r\n          icon: second.iconClass,\r\n          children: [],\r\n        };\r\n        if (second?.children?.length > 0) {\r\n          left.children = this.transMenu(second);\r\n        }\r\n        result.push(left);\r\n      });\r\n    return result;\r\n  }\r\n\r\n  public formatParams(text: string) {\r\n    if (!text) return '';\r\n    let regexp = /:([^(:\\/\\-\\ )]+)/g;\r\n    let result = text;\r\n    let match = text.match(regexp);\r\n    if (!!match) {\r\n      text.match(regexp).forEach((i) => {\r\n        let parameter = i.substr(1);\r\n        let itemId = this.getParamKeyValue(parameter);\r\n        result = result.replace(':' + parameter, itemId);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  private getParamKeyValue(paramKey: string) {\r\n    //let usedRouterState = routerState ? routerState : this.routerState;\r\n    let targetRouter = this.searchRouter(this.RouterState.root, paramKey);\r\n    if (targetRouter) return targetRouter.params[paramKey];\r\n    return null;\r\n  }\r\n  private searchRouter(router, property) {\r\n    if (property in router.params) {\r\n      return router;\r\n    } else if (router.children != null) {\r\n      var i;\r\n      var result = null;\r\n      for (i = 0; result == null && i < router.children.length; i++) {\r\n        result = this.searchRouter(router.children[i], property);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { InternalStore, LocalizationPipe } from '@abp/ng.core';\r\nimport { Layout, MSProduct, MSServiceNavConfig } from '../models';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router, RouterStateSnapshot } from '@angular/router';\r\nimport { RoutesProcessor } from './routes.processor';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutStateService {\r\n  private store = new InternalStore({\r\n    routerState: null,\r\n    isFetching: false,\r\n\r\n    hasSidebar: true,\r\n    hasAllNav: false,\r\n    categories: [],\r\n\r\n    navConfig: {\r\n      nav: '',\r\n      title: '系統管理',\r\n      doc: '系統管理',\r\n    },\r\n    hasPageNav: true,\r\n    pageNavs: [],\r\n  } as Layout.State);\r\n  //private routerState: RouterStateSnapshot;\r\n  ///必須等待Rouer完成後才能使用，需要當前路徑\r\n  public routesProcessor: RoutesProcessor;\r\n\r\n  getStore$() {\r\n    return this.store.sliceState((state) => state);\r\n  }\r\n\r\n  getFetching$() {\r\n    return this.store.sliceState(({ isFetching }) => isFetching);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.store.state.categories;\r\n  }\r\n\r\n  getCategories$() {\r\n    return this.store.sliceState((state) => state.categories);\r\n  }\r\n  getShortcuts() {\r\n    const categories = this.getCategories();\r\n    const result: MSProduct[] = [];\r\n    categories.forEach((p) => {\r\n      result.push(p as any);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getShortcuts$() {\r\n    return this.getCategories$().pipe(\r\n      map((x) => {\r\n        const result: MSProduct[] = [];\r\n        x.forEach((p) => {\r\n          result.push(p as any);\r\n        });\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  getNavConfig() {\r\n    return this.store.state.navConfig;\r\n  }\r\n\r\n  getNavConfig$() {\r\n    return this.store.sliceState((state) => state.navConfig);\r\n  }\r\n\r\n  getPageNavs$() {\r\n    return this.store.sliceState((state) => state.pageNavs);\r\n  }\r\n  getPageNavs() {\r\n    return this.store.state.pageNavs;\r\n  }\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    public localizationPipe: LocalizationPipe\r\n  ) {\r\n    this.routesProcessor = new RoutesProcessor(this.injector);\r\n    this.listenRoutes();\r\n  }\r\n\r\n  setStore(state: Partial<Layout.State>) {\r\n    this.store.patch({ ...state });\r\n  }\r\n\r\n  setFetching(isFetching: boolean) {\r\n    this.store.patch({ isFetching });\r\n  }\r\n\r\n  fetchPageNavs(routerState: RouterStateSnapshot) {\r\n    //this.store.patch({ routerState });\r\n    this.routesProcessor.RouterState = routerState;\r\n\r\n    let navConfig:MSServiceNavConfig=this.routesProcessor.CurrentNavConfig;\r\n    this.store.patch({navConfig});\r\n    \r\n    let pageNavs = this.routesProcessor.GetPageNavs(routerState, navConfig);\r\n    this.store.patch({ pageNavs });\r\n  }\r\n\r\n  private listenRoutes() {\r\n    this.routesProcessor.Category$.subscribe((categories) => {\r\n      this.store.patch({\r\n        categories,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, MenuIcon, _HttpClient } from '@delon/theme';\r\nimport { deepCopy } from '@delon/util';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { MSLink } from '../../models/layout';\r\n\r\nimport {\r\n  RoutesService,\r\n  PermissionService,\r\n  LocalizationPipe,\r\n} from '@abp/ng.core';\r\nimport { MSProduct, MSProductCategory, MSProductI18n } from '../../models';\r\nimport { LayoutStateService } from '../../services/layout-state.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSProductService {\r\n  private _data!: MSProductCategory[];\r\n\r\n  get data(): MSProductCategory[] {\r\n    return this._data;\r\n  }\r\n\r\n  get i18n(): MSProductI18n {\r\n    return {\r\n      showAll: true,\r\n      keywords: '請輸入關鍵詞',\r\n      allProduct: '查詢全部産品',\r\n      show: true,\r\n      hasResult: '以下是與“<strong>{filterTxt}</strong>”相關的産品：',\r\n      noResult: '未找到與“<strong>{filterTxt}</strong>”相關的産品。',\r\n      text: '産品與服務',\r\n      recent: '最近訪問',\r\n    };\r\n  }\r\n\r\n  getData(): Observable<MSProductCategory[]> {\r\n    return this.layoutSateService.getCategories$().pipe(\r\n      tap((x) => {\r\n        this._data = x;\r\n      })\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private layoutSateService: LayoutStateService\r\n  ) {}\r\n\r\n  search(\r\n    q: string\r\n  ): { list: MSProductCategory[][]; categories: MSProductCategory[] } {\r\n    const column = 3;\r\n    const list: MSProductCategory[][] = [[], [], []];\r\n\r\n    // Process search key\r\n    let oldList: MSProductCategory[] = deepCopy(this._data);\r\n    if (q) {\r\n      oldList = oldList.map((p) => {\r\n        p.products = p.products?.filter((w) => {\r\n          return w.name.includes(q) || w.id.includes(q);\r\n        });\r\n        return p;\r\n      });\r\n    }\r\n\r\n    // Clean empty children category\r\n    const categories: MSProductCategory[] = [];\r\n    let MockID = 0;\r\n    oldList\r\n      .filter((w) => w.products!.length > 0)\r\n      .forEach((i, idx) => {\r\n        i._id = ++MockID;\r\n        list[idx % column].push(i);\r\n        // Collecting category data\r\n        if (categories.findIndex((w) => w.name === i.name) === -1) {\r\n          categories.push({ _id: i._id, name: i.name });\r\n        }\r\n      });\r\n\r\n    return { list, categories };\r\n  }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Observable } from 'rxjs';\r\nimport { MSProduct, MSProductCategory, MSProductI18n } from '../../../models';\r\nimport { LayoutStateService } from '../../../services/layout-state.service';\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSProductService } from '../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'ms-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  host: {\r\n    '[class.alain-ms__sidebar]': 'true',\r\n    '[class.alain-ms__sidebar-showproduct]': 'showProduct',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSidebarComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('categoryEl', { static: false })\r\n  private categoryEl!: ElementRef;\r\n\r\n  showProduct = false;\r\n  inited = false;\r\n\r\n  get shortcuts$(): Observable<MSProduct[]> {\r\n    return this.layoutStateService.getShortcuts$();\r\n  }\r\n\r\n  get l(): MSProductI18n {\r\n    return this.srv.i18n;\r\n  }\r\n\r\n  q = '';\r\n  searchList?: MSProductCategory[][];\r\n  searchCategories: MSProductCategory[] = [];\r\n\r\n  constructor(\r\n    private layoutStateService:LayoutStateService,\r\n    private brand: BrandService,\r\n    private srv: MSProductService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    brand.setSidebar(true);\r\n  }\r\n\r\n  search(scroll: boolean = true): void {\r\n    const res = this.srv.search(this.q);\r\n    this.searchList = res.list;\r\n    this.searchCategories = res.categories;\r\n\r\n    this.cdr.detectChanges();\r\n\r\n    if (scroll) {\r\n      // wait angular render\r\n      setTimeout(() => {\r\n        // 滚动至顶部\r\n        this.categoryEl.nativeElement.scrollTop = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.srv.getData().subscribe((x) => {\r\n      this.inited = true;\r\n      this.search();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setSidebar(false);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\n// import { UserService } from '@core';\r\nimport { _HttpClient } from '@delon/theme';\r\n\r\nimport {\r\n  MSTopbarNavLink,\r\n  MSTopbarService,\r\n} from '../../services/topbar.service';\r\nimport { ApplicationInfo, EnvironmentService } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'ms-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar]': 'true',\r\n    '[class.alain-ms__topbar-single]': 'allNav',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSTopbarComponent implements OnInit {\r\n  get appInfo(): ApplicationInfo {\r\n    return this.environment.getEnvironment().application;\r\n  }\r\n  inited = false;\r\n\r\n  links!: MSTopbarNavLink[];\r\n\r\n  @Input() allNav = false;\r\n  userSrv: any;\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    //  public userSrv: UserService,\r\n    private cdr: ChangeDetectorRef,\r\n    private environment: EnvironmentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.mergeLinks();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private mergeLinks(): void {\r\n    const res = this.srv.data.navLinks!;\r\n    this.links = [res.finance, res.workorder, res.support].map((i) => {\r\n      if (i.className == null) {\r\n        i.className = '';\r\n      }\r\n      if (!i.links || i.links.length === 0) {\r\n        i.links = undefined;\r\n      } else {\r\n        i.className += ' alain-ms__topbar-dd';\r\n      }\r\n      return i;\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'help',\r\n  templateUrl: './help.component.html',\r\n  host: {\r\n    '[class.ms-help]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSHelpComponent {}\r\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MSLink } from '../../../models/layout';\r\n\r\n@Directive({ selector: '[link-to]' })\r\nexport class MSLinkToDirective {\r\n  constructor(private router: Router) {}\r\n\r\n  @Input('link-to') i!: MSLink;\r\n\r\n  @Output() linkToChanged = new EventEmitter<MouseEvent>();\r\n\r\n  @HostListener('click', ['$event'])\r\n  _click(e: MouseEvent): void {\r\n    const { link, target } = this.i;\r\n    if (target != null) {\r\n      if (target === '_blank') {\r\n        window.open(link);\r\n      } else {\r\n        window.location.href = link!;\r\n      }\r\n      this.linkToChanged.emit(e);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(link!).then(() => this.linkToChanged.emit(e));\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Menu, MenuService } from '@delon/theme';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-bar',\r\n  templateUrl: './page-bar.component.html',\r\n  host: {\r\n    '[class.ms-page-bar]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageBarComponent implements AfterViewInit, OnDestroy {\r\n  private router$!: Subscription;\r\n  private _menus: Menu[] | null = null;\r\n  private get menus(): Menu[] {\r\n    if (this._menus) {\r\n      return this._menus;\r\n    }\r\n    this._menus = this.menuSrv.getPathByUrl(this.router.url.split('?')[0], this.recursiveBreadcrumb);\r\n\r\n    return this._menus;\r\n  }\r\n\r\n  // #region fields\r\n\r\n  /**\r\n   * 自动生成标题，以当前路由从主菜单中定位\r\n   */\r\n  @Input() @InputBoolean() autoTitle = true;\r\n  @Input() @InputBoolean() recursiveBreadcrumb = true;\r\n  @Input() title?: string | TemplateRef<any>;\r\n  @Input() subTitle?: string | TemplateRef<any>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private router: Router, private srv: BrandService, private menuSrv: MenuService, private cdr: ChangeDetectorRef) {}\r\n\r\n  private setTitle(): void {\r\n    if (typeof this.title === 'undefined' && this.autoTitle && this.menus.length > 0) {\r\n      const item = this.menus[this.menus.length - 1];\r\n      this.title = item.text;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router$ = merge(\r\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd)),\r\n      this.srv.notify,\r\n      this.menuSrv.change,\r\n    ).subscribe(() => {\r\n      this._menus = null;\r\n      this.setTitle();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.router$.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, OnChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ALAIN_I18N_TOKEN, MenuService, TitleService } from '@delon/theme';\r\n\r\n// import { I18NService } from '@core';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from '../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-nav',\r\n  templateUrl: './page-nav.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageNavComponent implements OnChanges {\r\n  private _config: MSServiceNavConfig = {};\r\n  @Input()\r\n  set config(val: MSServiceNavConfig) {\r\n    const { title, titleI18n, backHref, doc, docI18n } = val;\r\n    // this.titSrv.setTitle(docI18n ? this.i18n.fanyi(docI18n) : doc);\r\n    // this._config.title = titleI18n ? this.i18n.fanyi(titleI18n) : title;\r\n    this._config.title=title;\r\n    this._config.backHref = backHref || '';\r\n  }\r\n  get config(): MSServiceNavConfig {\r\n    return this._config;\r\n  }\r\n\r\n  private _menus: MSMenu[] = [];\r\n  @Input()\r\n  set list(list: MSMenu[]) {\r\n    this.menuSrv.add(list);\r\n    this.menuSrv.visit(list, (i) => (i.active = true));\r\n    this._menus = this.menuSrv.menus;\r\n  }\r\n  get list(): MSMenu[] {\r\n    return this._menus;\r\n  }\r\n\r\n  constructor(\r\n    private srv: BrandService,\r\n    private router: Router,\r\n    private titSrv: TitleService,\r\n    private menuSrv: MenuService,\r\n    //@Inject(ALAIN_I18N_TOKEN) private i18n: I18NService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  to(url: string, e: MouseEvent): void {\r\n    e.preventDefault();\r\n    if (!url) {\r\n      return;\r\n    }\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  toggle(): void {\r\n    this.srv.hideNav = !this.srv.hideNav;\r\n    this.srv.triggerNotify('page-nav');\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-single',\r\n  templateUrl: './page-single.component.html',\r\n  host: {\r\n    '[class.ms-page-single]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageSingleComponent implements OnInit, OnChanges, OnDestroy {\r\n  // #region fileds\r\n\r\n  @Input() @InputBoolean() wide = true;\r\n  @Input() @InputBoolean() fixed = false;\r\n  @Input() title?: string | TemplateRef<void>;\r\n  @Input() subTitle?: string | TemplateRef<void>;\r\n  @Input() extra?: string | TemplateRef<void>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private brand: BrandService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {\r\n    this.brand.setFixed(this.fixed);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setFixed(false);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  host: {\r\n    '[class.ms-panel]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPanelComponent {\r\n  // #region fields\r\n\r\n  @Input() title?: string | TemplateRef<any>;\r\n  @Input() extra?: string | TemplateRef<any>;\r\n\r\n  // #endregion\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from './../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'service-layout',\r\n  templateUrl: './service-layout.component.html',\r\n})\r\nexport class MSServiceLayoutComponent {\r\n  @Input() @InputBoolean() nav = false;\r\n  @Input() navConfig: MSServiceNavConfig = {};\r\n  @Input() navList: MSMenu[] = [];\r\n\r\n  get hideNav(): boolean {\r\n    return this.srv.hideNav;\r\n  }\r\n\r\n  constructor(private srv: BrandService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AlainThemeModule } from '@delon/theme';\r\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\nimport { MSHelpComponent } from './help/help.component';\r\nimport { MSLinkToDirective } from './link-to/link-to.directive';\r\nimport { MSPageBarComponent } from './page-bar/page-bar.component';\r\nimport { MSPageNavComponent } from './page-nav/page-nav.component';\r\nimport { MSPageSingleComponent } from './page-single/page-single.component';\r\nimport { MSPanelComponent } from './panel/panel.component';\r\nimport { MSServiceLayoutComponent } from './service-layout/service-layout.component';\r\n\r\nconst COMPONENTS = [\r\n  MSHelpComponent,\r\n  MSLinkToDirective,\r\n  MSPageBarComponent,\r\n  MSPageNavComponent,\r\n  MSPageSingleComponent,\r\n  MSPanelComponent,\r\n  MSServiceLayoutComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, FormsModule, AlainThemeModule.forChild(), NzPopoverModule, NzIconModule, NzOutletModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class MSSharedModule {}\r\n","import { BreakpointObserver, MediaMatcher } from '@angular/cdk/layout';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Component, ElementRef, Inject, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationError, RouteConfigLoadStart, Router } from '@angular/router';\r\nimport { ReuseTabService } from '@delon/abc/reuse-tab';\r\nimport { updateHostClass } from '@delon/util';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BrandService } from './ms.service';\r\n\r\n@Component({\r\n  selector: 'layout-ms',\r\n  templateUrl: './ms.component.html',\r\n})\r\nexport class MSLayoutComponent implements OnInit, OnDestroy {\r\n  private notify$!: Subscription;\r\n  private queryCls?: string;\r\n  isFetching = false;\r\n  // 是否单页，单页不显示侧边栏\r\n  hasAllNav = false;\r\n  hasSidebar = true;\r\n\r\n  get isMobile(): boolean {\r\n    return this.srv.isMobile;\r\n  }\r\n\r\n  private get body(): HTMLElement {\r\n    return this.doc.body;\r\n  }\r\n\r\n  constructor(\r\n    bm: BreakpointObserver,\r\n    mediaMatcher: MediaMatcher,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    msg: NzMessageService,\r\n    reuseTabSrv: ReuseTabService,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private srv: BrandService,\r\n    @Inject(DOCUMENT) private doc: any,\r\n  ) {\r\n    const routerData = {\r\n      hasAllNav: false,\r\n      hasSidebar: true,\r\n      ...route.snapshot.data,\r\n    };\r\n    this.hasAllNav = routerData.hasAllNav === true;\r\n    this.hasSidebar = routerData.hasSidebar === true;\r\n\r\n    // scroll to top in change page\r\n    router.events.subscribe((evt) => {\r\n      if (!this.isFetching && evt instanceof RouteConfigLoadStart) {\r\n        this.isFetching = true;\r\n        this.scrollToTop();\r\n      }\r\n      if (evt instanceof NavigationError) {\r\n        this.isFetching = false;\r\n        msg.error(`无法加载${evt.url}路由`, { nzDuration: 1000 * 3 });\r\n        return;\r\n      }\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n\r\n      this.isFetching = false;\r\n      // If have already cached router, should be don't need scroll to top\r\n      if (reuseTabSrv.exists(evt.url)) {\r\n        return;\r\n      }\r\n\r\n      this.scrollToTop();\r\n    });\r\n\r\n    // media\r\n    const query: { [key: string]: string } = {\r\n      'screen-xs': '(max-width: 575px)',\r\n      'screen-sm': '(min-width: 576px) and (max-width: 767px)',\r\n      'screen-md': '(min-width: 768px) and (max-width: 991px)',\r\n      'screen-lg': '(min-width: 992px) and (max-width: 1199px)',\r\n      'screen-xl': '(min-width: 1200px)',\r\n    };\r\n    bm.observe([\r\n      '(min-width: 1200px)',\r\n      '(min-width: 992px) and (max-width: 1199px)',\r\n      '(min-width: 768px) and (max-width: 991px)',\r\n      '(min-width: 576px) and (max-width: 767px)',\r\n      '(max-width: 575px)',\r\n    ]).subscribe(() => {\r\n      this.queryCls = Object.keys(query).find((key) => mediaMatcher.matchMedia(query[key]).matches);\r\n      this.setClass();\r\n    });\r\n  }\r\n\r\n  private scrollToTop(): void {\r\n    const el: HTMLElement = this.doc.querySelector('.alain-ms__product-body');\r\n    if (!el) {\r\n      return;\r\n    }\r\n    el.scrollTop = 0;\r\n  }\r\n\r\n  private setClass(): void {\r\n    const { el, renderer, queryCls } = this;\r\n    updateHostClass(\r\n      el.nativeElement,\r\n      renderer,\r\n      {\r\n        ['alain-ms']: true,\r\n        [queryCls!]: true,\r\n      },\r\n      true,\r\n    );\r\n  }\r\n\r\n  private setBodyClass(): void {\r\n    const { hasTopbar, hasSidebar, hasFixed, colorWeak } = this.srv.layout;\r\n    updateHostClass(this.body, this.renderer, {\r\n      'color-weak': colorWeak,\r\n      ['alain-ms__has-topbar']: hasTopbar,\r\n      ['alain-ms__has-sidebar']: hasSidebar,\r\n      ['alain-ms__has-fixed']: hasFixed,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notify$ = this.srv.notify.subscribe(() => {\r\n      this.setClass();\r\n      this.setBodyClass();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n    this.body.classList.remove('alain-ms__has-topbar', 'alain-ms__has-sidebar', 'alain-ms__has-fixed');\r\n  }\r\n}\r\n","import {\r\n  RoutesService,\r\n  LocalizationPipe,\r\n  PermissionService,\r\n} from '@abp/ng.core';\r\nimport { APP_INITIALIZER, inject, Injector } from '@angular/core';\r\nimport {\r\n  ResolveEnd,\r\n  Router\r\n} from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../services/layout-state.service';\r\n\r\nexport const LAYOUT_INIT_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: init,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function init(injector: Injector) {\r\n  return () => {\r\n    listenRouter(injector);\r\n  };\r\n}\r\n\r\nexport function listenRouter(injector: Injector) {\r\n  const router = injector.get(Router);\r\n  const layoutStateService = injector.get(LayoutStateService);\r\n\r\n  router.events\r\n    .pipe(filter((event): event is ResolveEnd => event instanceof ResolveEnd))\r\n    .subscribe((event) => {\r\n      //const currentUrl = decodeURI(event.state.url.split('?')[0]);\r\n      //layoutStateService.setStore({ currentUrl });\r\n      layoutStateService.fetchPageNavs(event.state);\r\n\r\n    });\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CoreModule } from '@abp/ng.core';\nimport { Inject, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n// import { I18NService } from '@core';\nimport { AlainThemeModule, ALAIN_I18N_TOKEN } from '@delon/theme';\nimport { ThemeBtnModule } from '@delon/theme/theme-btn';\nimport { NzAnchorModule } from 'ng-zorro-antd/anchor';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n//import { MS_COMPONENTS, MS_SHARED_COMPONENTS } from './ms/index';\nimport { MSSharedModule } from './ms/shared/shared.module';\nimport { LAYOUT_INIT_PROVIDERS } from './providers/init.provider';\nimport { MSAllNavComponent } from './ms/_widgets/all-nav/all-nav.component';\nimport { MSSearchComponent } from './ms/_widgets/search/search.component';\nimport { MSLangsComponent } from './ms/_widgets/langs/langs.component';\nimport { MSUserComponent } from './ms/_widgets/user/user.component';\nimport { MSNoticeComponent } from './ms/_widgets/notice/notice.component';\nimport { MSRegionComponent } from './ms/_widgets/region/region.component';\nimport { MSLayoutComponent } from './ms/ms.component';\nimport { MSSidebarComponent } from './ms/components/sidebar/sidebar.component';\nimport { MSTopbarComponent } from './ms/components/topbar/topbar.component';\nimport { MSHelpComponent } from './ms/shared/help/help.component';\nimport { MSPageNavComponent } from './ms/shared/page-nav/page-nav.component';\nimport { MSPageBarComponent } from './ms/shared/page-bar/page-bar.component';\nimport { MSPageSingleComponent } from './ms/shared/page-single/page-single.component';\nimport { MSPanelComponent } from './ms/shared/panel/panel.component';\nimport { MSServiceLayoutComponent } from './ms/shared/service-layout/service-layout.component';\nimport { MSLinkToDirective } from './ms/shared/link-to/link-to.directive';\n// import { default as en_US } from './ms/_i18n/en-US';\n// import { default as zh_CN } from './ms/_i18n/zh-CN';\n// import { default as zh_TW } from './ms/_i18n/zh-TW';\n\n\nexport const MS_WIDGETS = [MSAllNavComponent, MSSearchComponent, MSLangsComponent, MSUserComponent, MSNoticeComponent, MSRegionComponent];\nexport const MS_COMPONENTS = [MSLayoutComponent, MSSidebarComponent, MSTopbarComponent, ...MS_WIDGETS];\nexport const MS_SHARED_COMPONENTS = [\n  MSHelpComponent,\n  MSPageNavComponent,\n  MSPageBarComponent,\n  MSPageSingleComponent,\n  MSPanelComponent,\n  MSServiceLayoutComponent,\n  MSLinkToDirective,\n];\n//const MS_COMPONENTS=[]\n\n@NgModule({\n  imports: [\n    CoreModule,\n    RouterModule,\n    FormsModule,\n    DragDropModule,\n    MSSharedModule,\n    NzSpinModule,\n    NzAnchorModule,\n    NzAutocompleteModule,\n    NzAvatarModule,\n    NzDividerModule,\n    NzInputModule,\n    NzIconModule,\n    AlainThemeModule.forChild(),\n    ThemeBtnModule,\n  ],\n  declarations: [...MS_COMPONENTS],\n  exports: [...MS_COMPONENTS,MS_SHARED_COMPONENTS]\n})\nexport class LayoutModule {\n  static forRoot(): ModuleWithProviders<LayoutModule> {\n    return {\n      ngModule: LayoutModule,\n      providers: [\n        LAYOUT_INIT_PROVIDERS\n        //LAYOUT_MENU_PROVIDERS\n      ]\n    };\n  }\n  constructor(\n    //@Inject(ALAIN_I18N_TOKEN) i18n: I18NService\n    ) {\n    // i18n.load('zh-CN', zh_CN);\n    // i18n.load('zh-TW', zh_TW);\n    // i18n.load('en-US', en_US);\n  }\n}\n"]}