{"version":3,"file":"routes.processor.js","sourceRoot":"../../../../../libs/theme-alain-ms/layout/src/","sources":["lib/services/routes.processor.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,aAAa,IAAI,gBAAgB,EACjC,gBAAgB,GAGjB,MAAM,cAAc,CAAC;AAGtB,OAAO,EAAU,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAW7C,MAAM,OAAO,eAAe;IAqD1B,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IApD1C,IAAY,aAAa;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAED,IAAY,gBAAgB;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAID,IAAI,UAAU;QACZ,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAC5B,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,CACrD,CAAC;IACJ,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QACrB,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChB;QACD,OAAO,MAAM,CAAC;QAEd,SAAS,QAAQ,CAAC,IAAI;YACpB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;QACH,CAAC;IACH,CAAC;IAED,IAAI,gBAAgB;QAClB,IAAI,MAAM,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU;SACb,CAAC;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACvB,MAAM,mCAAQ,MAAM,GAAK,IAAI,CAAC,WAAW,CAAC,CAAE,CAAC;SAC9C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAID,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CACrC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO;YAC3B,OAAO,CAAC;iBACL,MAAM,CACL,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,IAAI,gEAA0C;gBAChD,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAC9B;iBACA,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;iBACtB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC7B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBACT,IAAI,QAAQ,GAAsB;oBAChC,EAAE,EAAE,CAAC,CAAC,IAAI;oBACV,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC7C,IAAI,EAAE,CAAC,CAAC,SAAS;oBACjB,QAAQ,EAAE,EAAE;oBACZ,IAAI,EAAE,CAAC,CAAC,IAAI;iBACb,CAAC;gBAEF,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ;qBAC3B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAC1C,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBACT,IAAI,OAAO,GAAc;wBACvB,SAAS,EAAE,CAAC,CAAC,IAAI;wBACjB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;wBAC7C,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,IAAI,EAAE,CAAC,CAAC,SAAS;wBACjB,EAAE,EAAE,CAAC,CAAC,IAAI;qBACX,CAAC;oBACF,OAAO,OAAO,CAAC;gBACjB,CAAC,CAAC,CAAC;gBACL,OAAO,QAAQ,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEM,WAAW,CAChB,WAAgC,EAChC,GAAuB;QAEvB,IAAI,CAAC,IAAI,CAAC,YAAY;YAAE,OAAO,EAAE,CAAC;QAClC,IAAI,QAAQ,GAAa,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,aAAa,CAAC,IAAI;aACpB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1C,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACV,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,MAAM;gBAAE,MAAM,GAAG,MAAM,CAAC;QAChC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;SAC1C;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IACO,WAAW,CAAC,OAA4B,EAAE,GAAuB;QACvE,IAAI,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACpE,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,eAAe,GAAG,CAAC,CAAC,aAAa,CAAC;QACtC,IAAI,CAAC,eAAe,IAAI,OAAO,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE;YAChD,OAAO,OAAO,CAAC;SAChB;QACD,IAAI,eAAe,IAAI,OAAO,CAAC,IAAI,KAAK,aAAa,IAAI,WAAW,EAAE;YACpE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,CAAC,MAAM;gBAAE,OAAO,MAAM,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,CAAC;YACN,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9D,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aACrD;YACD,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IACO,SAAS,CAAC,KAAU;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,QAAQ;aACX,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1C,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;;YAClB,IAAI,IAAI,GAAW;gBACjB,IAAI,EACF,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;gBACpE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;gBACpC,IAAI,EAAE,MAAM,CAAC,SAAS;gBACtB,QAAQ,EAAE,EAAE;aACb,CAAC;YACF,IAAI,OAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,0CAAE,MAAM,IAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACxC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QACL,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,YAAY,CAAC,IAAY;QAC9B,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QACrB,IAAI,MAAM,GAAG,mBAAmB,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,CAAC,KAAK,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC/B,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC9C,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IACO,gBAAgB,CAAC,QAAgB;QACvC,qEAAqE;QACrE,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,YAAY;YAAE,OAAO,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;IACd,CAAC;IACO,YAAY,CAAC,MAAM,EAAE,QAAQ;QACnC,IAAI,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE;YAC7B,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,EAAE;YAClC,IAAI,CAAC,CAAC;YACN,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7D,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;aAC1D;YACD,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import {\r\n  RoutesService as AbpRoutesService,\r\n  LocalizationPipe,\r\n  ABP,\r\n  TreeNode,\r\n} from '@abp/ng.core';\r\n\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport {\r\n  MSMenu,\r\n  MSProduct,\r\n  MSProductCategory,\r\n  MSServiceNavConfig,\r\n} from '../models';\r\nimport { Observable } from 'rxjs';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\n\r\nexport class RoutesProcessor {\r\n  private get routesService(): AbpRoutesService {\r\n    return this.injector.get(AbpRoutesService);\r\n  }\r\n\r\n  private get localizationPipe(): LocalizationPipe {\r\n    return this.injector.get(LocalizationPipe);\r\n  }\r\n\r\n  public RouterState: RouterStateSnapshot;\r\n\r\n  get CurrentUrl(): string {\r\n    var current_url = this.RouterState.url.split('?')[0];\r\n    return decodeURI(current_url);\r\n  }\r\n\r\n  get CurrentRoute(): TreeNode<ABP.Route> {\r\n    return this.routesService.find(\r\n      (x) => this.formatParams(x.path) === this.CurrentUrl\r\n    );\r\n  }\r\n\r\n  get NavConfigs(): TreeNode<ABP.Route>[] {\r\n    let result = [];\r\n    let node = this.CurrentRoute;\r\n    if (!node) return [];\r\n    pushNode(node);\r\n    while (!!node.parent) {\r\n      node = node.parent;\r\n      pushNode(node);\r\n    }\r\n    return result;\r\n\r\n    function pushNode(node) {\r\n      if (!!node && !!node['navConfig']) {\r\n        result.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  get CurrentNavConfig(): MSServiceNavConfig {\r\n    let result = {\r\n      parentName: null,\r\n      name: this.CurrentRoute.parentName,\r\n    } as MSServiceNavConfig;\r\n    let stack = this.NavConfigs;\r\n    while (stack.length !== 0) {\r\n      let node = stack.pop();\r\n      result = { ...result, ...node['navConfig'] };\r\n    }\r\n    return result;\r\n  }\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  public get Category$(): Observable<MSProductCategory[]> {\r\n    return this.routesService.visible$.pipe(\r\n      map((x) => {\r\n        if (x.length === 0) return;\r\n        return x\r\n          .filter(\r\n            (y) =>\r\n              y.name === eThemeSharedRouteNames.Administration &&\r\n              !this.routesService.hide(y)\r\n          )\r\n          .map((r) => r.children)\r\n          .reduce((a, b) => a.concat(b))\r\n          .map((r) => {\r\n            let category: MSProductCategory = {\r\n              id: r.name,\r\n              name: this.localizationPipe.transform(r.name),\r\n              icon: r.iconClass,\r\n              products: [],\r\n              link: r.path,\r\n            };\r\n\r\n            category.products = r.children\r\n              .filter((c) => !this.routesService.hide(c))\r\n              .map((c) => {\r\n                let product: MSProduct = {\r\n                  productId: c.name,\r\n                  name: this.localizationPipe.transform(c.name),\r\n                  link: c.path,\r\n                  icon: c.iconClass,\r\n                  id: c.name,\r\n                };\r\n                return product;\r\n              });\r\n            return category;\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  public GetPageNavs(\r\n    routerState: RouterStateSnapshot,\r\n    nav: MSServiceNavConfig\r\n  ) {\r\n    if (!this.CurrentRoute) return [];\r\n    let pageNavs: MSMenu[] = [];\r\n    this.RouterState = routerState;\r\n    let target;\r\n    this.routesService.tree\r\n      .filter((x) => !this.routesService.hide(x))\r\n      .find((x) => {\r\n        let result = this.searchRoute(x, nav);\r\n        if (!!result) target = result;\r\n      });\r\n    if (!!target) {\r\n      pageNavs.push(...this.transMenu(target));\r\n    }\r\n\r\n    return pageNavs;\r\n  }\r\n  private searchRoute(element: TreeNode<ABP.Route>, nav: MSServiceNavConfig) {\r\n    let hasChildren = !!element.children && element.children.length > 0;\r\n    let specifyParent = this.formatParams(nav.parentName);\r\n    let isSpecifyParent = !!specifyParent;\r\n    if (!isSpecifyParent && element.name == nav.name) {\r\n      return element;\r\n    }\r\n    if (isSpecifyParent && element.name === specifyParent && hasChildren) {\r\n      let target = element.children.find((x) => x.name === nav.name);\r\n      if (!!target) return target;\r\n    }\r\n    if (element.children != null) {\r\n      var i;\r\n      var result = null;\r\n      for (i = 0; result == null && i < element.children.length; i++) {\r\n        result = this.searchRoute(element.children[i], nav);\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n  private transMenu(first: any) {\r\n    let result = [];\r\n    first.children\r\n      .filter((r) => !this.routesService.hide(r))\r\n      .forEach((second) => {\r\n        let left: MSMenu = {\r\n          text:\r\n            second.displayName || this.localizationPipe.transform(second.name),\r\n          link: this.formatParams(second.path), //(third.url || third.path),\r\n          icon: second.iconClass,\r\n          children: [],\r\n        };\r\n        if (second?.children?.length > 0) {\r\n          left.children = this.transMenu(second);\r\n        }\r\n        result.push(left);\r\n      });\r\n    return result;\r\n  }\r\n\r\n  public formatParams(text: string) {\r\n    if (!text) return '';\r\n    let regexp = /:([^(:\\/\\-\\ )]+)/g;\r\n    let result = text;\r\n    let match = text.match(regexp);\r\n    if (!!match) {\r\n      text.match(regexp).forEach((i) => {\r\n        let parameter = i.substr(1);\r\n        let itemId = this.getParamKeyValue(parameter);\r\n        result = result.replace(':' + parameter, itemId);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  private getParamKeyValue(paramKey: string) {\r\n    //let usedRouterState = routerState ? routerState : this.routerState;\r\n    let targetRouter = this.searchRouter(this.RouterState.root, paramKey);\r\n    if (targetRouter) return targetRouter.params[paramKey];\r\n    return null;\r\n  }\r\n  private searchRouter(router, property) {\r\n    if (property in router.params) {\r\n      return router;\r\n    } else if (router.children != null) {\r\n      var i;\r\n      var result = null;\r\n      for (i = 0; result == null && i < router.children.length; i++) {\r\n        result = this.searchRouter(router.children[i], property);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"]}