{"version":3,"file":"search.component.js","sourceRoot":"../../../../../libs/theme-alain-ms/layout/src/","sources":["lib/ms/_widgets/search/search.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAa,SAAS,EAAE,MAAM,eAAe,CAAC;AACtI,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,oBAAoB,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC/E,OAAO,EAAmB,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAWjF,MAAM,OAAO,iBAAiB;IAW5B,YAAY,IAAiB,EAAU,GAAoB,EAAU,GAAsB;QAApD,QAAG,GAAH,GAAG,CAAiB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAT3F,SAAI,GAAG,KAAK,CAAC;QACb,MAAC,GAAG,EAAE,CAAC;QACP,YAAO,GAAG,IAAI,OAAO,EAAU,CAAC;QAChC,SAAI,GAAU,EAAE,CAAC;QAOf,IAAI,CAAC,OAAO;aACT,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,oBAAoB,EAAE,EACtB,SAAS,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CACrE;aACA,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAfD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAgBD,MAAM;QACJ,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;;;YAzCF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,4rBAAsC;gBACtC,IAAI,EAAE;oBACJ,+BAA+B,EAAE,MAAM;oBACvC,eAAe,EAAE,MAAM;iBACxB;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAbQ,WAAW;YAGM,eAAe;YAJP,iBAAiB;;;kBAgBhD,SAAS,SAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;qBAuBjC,YAAY,SAAC,OAAO","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, OnDestroy, ViewChild } from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-search',\r\n  templateUrl: './search.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.mr-md]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSearchComponent implements OnDestroy {\r\n  @ViewChild('ipt', { static: true }) private ipt!: ElementRef<any>;\r\n  show = false;\r\n  q = '';\r\n  search$ = new Subject<string>();\r\n  list: any[] = [];\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('search');\r\n  }\r\n\r\n  constructor(http: _HttpClient, private srv: MSTopbarService, private cdr: ChangeDetectorRef) {\r\n    this.search$\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        switchMap((q: string) => http.get('/user', { no: q, pi: 1, ps: 5 })),\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.list = res.list;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('click')\r\n  _click(): void {\r\n    this.ipt.nativeElement.focus();\r\n    this.show = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.search$.unsubscribe();\r\n  }\r\n}\r\n"]}