{"version":3,"file":"layout-state.service.js","sourceRoot":"../../../../../libs/theme-alain-ms/layout/src/","sources":["lib/services/layout-state.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { InternalStore, LocalizationPipe } from '@abp/ng.core';\r\nimport { Layout, MSProduct, MSServiceNavConfig } from '../models';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router, RouterStateSnapshot } from '@angular/router';\r\nimport { RoutesProcessor } from './routes.processor';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutStateService {\r\n  private store = new InternalStore({\r\n    routerState: null,\r\n    isFetching: false,\r\n\r\n    hasSidebar: true,\r\n    hasAllNav: false,\r\n    categories: [],\r\n\r\n    navConfig: {\r\n      nav: '',\r\n      title: '系統管理',\r\n      doc: '系統管理',\r\n    },\r\n    hasPageNav: true,\r\n    pageNavs: [],\r\n  } as Layout.State);\r\n  //private routerState: RouterStateSnapshot;\r\n  ///必須等待Rouer完成後才能使用，需要當前路徑\r\n  public routesProcessor: RoutesProcessor;\r\n\r\n  getStore$() {\r\n    return this.store.sliceState((state) => state);\r\n  }\r\n\r\n  getFetching$() {\r\n    return this.store.sliceState(({ isFetching }) => isFetching);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.store.state.categories;\r\n  }\r\n\r\n  getCategories$() {\r\n    return this.store.sliceState((state) => state.categories);\r\n  }\r\n  getShortcuts() {\r\n    const categories = this.getCategories();\r\n    const result: MSProduct[] = [];\r\n    categories.forEach((p) => {\r\n      result.push(p as any);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getShortcuts$() {\r\n    return this.getCategories$().pipe(\r\n      map((x) => {\r\n        const result: MSProduct[] = [];\r\n        x.forEach((p) => {\r\n          result.push(p as any);\r\n        });\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  getNavConfig() {\r\n    return this.store.state.navConfig;\r\n  }\r\n\r\n  getNavConfig$() {\r\n    return this.store.sliceState((state) => state.navConfig);\r\n  }\r\n\r\n  getPageNavs$() {\r\n    return this.store.sliceState((state) => state.pageNavs);\r\n  }\r\n  getPageNavs() {\r\n    return this.store.state.pageNavs;\r\n  }\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    public localizationPipe: LocalizationPipe\r\n  ) {\r\n    this.routesProcessor = new RoutesProcessor(this.injector);\r\n    this.listenRoutes();\r\n  }\r\n\r\n  setStore(state: Partial<Layout.State>) {\r\n    this.store.patch({ ...state });\r\n  }\r\n\r\n  setFetching(isFetching: boolean) {\r\n    this.store.patch({ isFetching });\r\n  }\r\n\r\n  fetchPageNavs(routerState: RouterStateSnapshot) {\r\n    //this.store.patch({ routerState });\r\n    this.routesProcessor.RouterState = routerState;\r\n\r\n    let navConfig:MSServiceNavConfig=this.routesProcessor.CurrentNavConfig;\r\n    this.store.patch({navConfig});\r\n    \r\n    let pageNavs = this.routesProcessor.GetPageNavs(routerState, navConfig);\r\n    this.store.patch({ pageNavs });\r\n  }\r\n\r\n  private listenRoutes() {\r\n    this.routesProcessor.Category$.subscribe((categories) => {\r\n      this.store.patch({\r\n        categories,\r\n      });\r\n    });\r\n  }\r\n}\r\n"]}