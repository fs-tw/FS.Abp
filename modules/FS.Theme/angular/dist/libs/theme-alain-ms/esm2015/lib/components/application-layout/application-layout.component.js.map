{"version":3,"file":"application-layout.component.js","sourceRoot":"../../../../libs/theme-alain-ms/src/","sources":["lib/components/application-layout/application-layout.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  NavigationEnd,\n  NavigationError,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\nimport { BreakpointObserver, MediaMatcher } from '@angular/cdk/layout';\nimport {\n  LayoutStateService,\n  MSMenu,\n  MSServiceNavConfig,\n} from '@fs-tw/theme-alain-ms/layout';\nimport { ReuseTabService } from '@delon/abc/reuse-tab';\nimport { updateHostClass } from '@delon/util';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { Observable, Subscription } from 'rxjs';\nimport { BrandService } from '@fs-tw/theme-alain-ms/layout';\nimport { Layout } from '@fs-tw/theme-alain-ms/layout';\n\n@Component({\n  selector: 'abp-application-layout',\n  templateUrl: './application-layout.component.html',\n  //styleUrls: ['./application-layout.component.less'],\n})\nexport class ApplicationLayoutComponent implements OnInit, OnDestroy {\n  private notify$!: Subscription;\n  private queryCls?: string;\n  //nav = false;\n\n  store$: Observable<Layout.State>;\n\n  //hasAllNav = false;\n  //hasSidebar = true;\n  isFetching = false;\n\n  get isMobile(): boolean {\n    return this.srv.isMobile;\n  }\n\n  private get body(): HTMLElement {\n    return this.doc.body;\n  }\n\n  constructor(\n    public layoutStateService: LayoutStateService,\n    bm: BreakpointObserver,\n    mediaMatcher: MediaMatcher,\n    router: Router,\n    route: ActivatedRoute,\n    public msg: NzMessageService,\n    reuseTabSrv: ReuseTabService,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private srv: BrandService,\n    @Inject(DOCUMENT) private doc: any\n  ) {\n    this.store$ = this.layoutStateService.getStore$();\n    const routerData = {\n      hasAllNav: false,\n      hasSidebar: true,\n      ...route.snapshot.data,\n    };\n    //this.hasAllNav = routerData.hasAllNav === true;\n    //this.hasSidebar = routerData.hasSidebar === true;\n\n    // scroll to top in change page\n    router.events.subscribe((evt) => {\n      if (!this.isFetching && evt instanceof RouteConfigLoadStart) {\n        this.isFetching = true;\n        this.scrollToTop();\n      }\n      if (evt instanceof NavigationError) {\n        this.isFetching = false;\n        msg.error(`无法加载${evt.url}路由`, { nzDuration: 1000 * 3 });\n        return;\n      }\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n\n      this.isFetching = false;\n      // If have already cached router, should be don't need scroll to top\n      if (reuseTabSrv.exists(evt.url)) {\n        return;\n      }\n\n      this.scrollToTop();\n    });\n\n    // media\n    const query: { [key: string]: string } = {\n      'screen-xs': '(max-width: 575px)',\n      'screen-sm': '(min-width: 576px) and (max-width: 767px)',\n      'screen-md': '(min-width: 768px) and (max-width: 991px)',\n      'screen-lg': '(min-width: 992px) and (max-width: 1199px)',\n      'screen-xl': '(min-width: 1200px)',\n    };\n    bm.observe([\n      '(min-width: 1200px)',\n      '(min-width: 992px) and (max-width: 1199px)',\n      '(min-width: 768px) and (max-width: 991px)',\n      '(min-width: 576px) and (max-width: 767px)',\n      '(max-width: 575px)',\n    ]).subscribe(() => {\n      this.queryCls = Object.keys(query).find(\n        (key) => mediaMatcher.matchMedia(query[key]).matches\n      );\n      this.setClass();\n    });\n  }\n\n  private scrollToTop(): void {\n    const el: HTMLElement = this.doc.querySelector('.alain-ms__product-body');\n    if (!el) {\n      return;\n    }\n    el.scrollTop = 0;\n  }\n\n  private setClass(): void {\n    const { el, renderer, queryCls } = this;\n    updateHostClass(\n      el.nativeElement,\n      renderer,\n      {\n        ['alain-ms']: true,\n        [queryCls!]: true,\n      },\n      true\n    );\n  }\n\n  private setBodyClass(): void {\n    const { hasTopbar, hasSidebar, hasFixed, colorWeak } = this.srv.layout;\n    updateHostClass(this.body, this.renderer, {\n      'color-weak': colorWeak,\n      ['alain-ms__has-topbar']: hasTopbar,\n      ['alain-ms__has-sidebar']: hasSidebar,\n      ['alain-ms__has-fixed']: hasFixed,\n    });\n  }\n\n  ngOnInit(): void {\n    this.notify$ = this.srv.notify.subscribe(() => {\n      this.setClass();\n      this.setBodyClass();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.notify$.unsubscribe();\n    this.body.classList.remove(\n      'alain-ms__has-topbar',\n      'alain-ms__has-sidebar',\n      'alain-ms__has-fixed'\n    );\n  }\n}\n"]}