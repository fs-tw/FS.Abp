{
  "generated": [
    "theme",
    "theme-the-project"
  ],
  "modules": {
    "theme-the-project": {
      "rootPath": "theme-the-project",
      "remoteServiceName": "theme-the-project",
      "controllers": {
        "FS.Theme.TheProject.TheProjectThemeSettingsController": {
          "controllerName": "TheProjectThemeSettings",
          "type": "FS.Theme.TheProject.TheProjectThemeSettingsController",
          "interfaces": [
            {
              "type": "FS.Theme.TheProject.ITheProjectThemeSettingsAppService"
            }
          ],
          "actions": {
            "Get": {
              "uniqueName": "Get",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/theme-the-project/settings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "FS.Theme.TheProject.TheProjectThemeSettingsDto",
                "typeSimple": "FS.Theme.TheProject.TheProjectThemeSettingsDto"
              }
            },
            "UpdateByInput": {
              "uniqueName": "UpdateByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/theme-the-project/settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto, FS.Theme.TheProject.Application.Contracts",
                  "type": "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto",
                  "typeSimple": "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto",
                  "typeSimple": "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "theme": {
      "rootPath": "theme",
      "remoteServiceName": "Default",
      "controllers": {
        "FS.Theme.Routes.RoutesApi": {
          "controllerName": "RoutesApi",
          "type": "FS.Theme.Routes.RoutesApi",
          "interfaces": [
            {
              "type": "FS.Theme.Routes.IRoutesApi"
            },
            {
              "type": "FS.Theme.Routes.IRouteDefinitionCrudAppService"
            },
            {
              "type": "FS.Theme.Routes.IRouteCrudAppService"
            }
          ],
          "actions": {
            "GetListByRouteGetList": {
              "uniqueName": "GetListByRouteGetList",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/theme/routes/route",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "RouteGetList",
                  "typeAsString": "FS.Theme.Routes.Dtos.RouteGetListDto, FS.Theme.Application.Contracts",
                  "type": "FS.Theme.Routes.Dtos.RouteGetListDto",
                  "typeSimple": "FS.Theme.Routes.Dtos.RouteGetListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "RouteGetList",
                  "name": "Fields",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteGetList"
                },
                {
                  "nameOnMethod": "RouteGetList",
                  "name": "Value",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteGetList"
                },
                {
                  "nameOnMethod": "RouteGetList",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteGetList"
                },
                {
                  "nameOnMethod": "RouteGetList",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteGetList"
                },
                {
                  "nameOnMethod": "RouteGetList",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteGetList"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Routes.Dtos.RouteWithDetailsDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Routes.Dtos.RouteWithDetailsDto>"
              }
            },
            "GetListByRouteDefinitionGetList": {
              "uniqueName": "GetListByRouteDefinitionGetList",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/theme/routes/route-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "RouteDefinitionGetList",
                  "typeAsString": "FS.Theme.Routes.Dtos.RouteDefinitionGetListDto, FS.Theme.Application.Contracts",
                  "type": "FS.Theme.Routes.Dtos.RouteDefinitionGetListDto",
                  "typeSimple": "FS.Theme.Routes.Dtos.RouteDefinitionGetListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "RouteDefinitionGetList",
                  "name": "Fields",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteDefinitionGetList"
                },
                {
                  "nameOnMethod": "RouteDefinitionGetList",
                  "name": "Value",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteDefinitionGetList"
                },
                {
                  "nameOnMethod": "RouteDefinitionGetList",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteDefinitionGetList"
                },
                {
                  "nameOnMethod": "RouteDefinitionGetList",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteDefinitionGetList"
                },
                {
                  "nameOnMethod": "RouteDefinitionGetList",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "RouteDefinitionGetList"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Routes.Dtos.RouteDefinitionWithDetailsDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Routes.Dtos.RouteDefinitionWithDetailsDto>"
              }
            }
          }
        },
        "FS.Theme.Banners.BannersApi": {
          "controllerName": "BannersApi",
          "type": "FS.Theme.Banners.BannersApi",
          "interfaces": [
            {
              "type": "FS.Theme.Banners.IBannerCrudAppService"
            },
            {
              "type": "FS.Theme.Banners.IBannerDefinitionCrudAppService"
            },
            {
              "type": "FS.Theme.Banners.IBannersApi"
            }
          ],
          "actions": {
            "GetListByBannerGetList": {
              "uniqueName": "GetListByBannerGetList",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/theme/banners/banner",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "BannerGetList",
                  "typeAsString": "FS.Theme.Banners.Dtos.BannerGetListDto, FS.Theme.Application.Contracts",
                  "type": "FS.Theme.Banners.Dtos.BannerGetListDto",
                  "typeSimple": "FS.Theme.Banners.Dtos.BannerGetListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "BannerGetList",
                  "name": "Fields",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerGetList"
                },
                {
                  "nameOnMethod": "BannerGetList",
                  "name": "Value",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerGetList"
                },
                {
                  "nameOnMethod": "BannerGetList",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerGetList"
                },
                {
                  "nameOnMethod": "BannerGetList",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerGetList"
                },
                {
                  "nameOnMethod": "BannerGetList",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerGetList"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Banners.Dtos.BannerWithDetailsDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Banners.Dtos.BannerWithDetailsDto>"
              }
            },
            "GetListByBannerDefinitionGetList": {
              "uniqueName": "GetListByBannerDefinitionGetList",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/theme/banners/banner-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "BannerDefinitionGetList",
                  "typeAsString": "FS.Theme.Banners.Dtos.BannerDefinitionGetListDto, FS.Theme.Application.Contracts",
                  "type": "FS.Theme.Banners.Dtos.BannerDefinitionGetListDto",
                  "typeSimple": "FS.Theme.Banners.Dtos.BannerDefinitionGetListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "BannerDefinitionGetList",
                  "name": "Fields",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerDefinitionGetList"
                },
                {
                  "nameOnMethod": "BannerDefinitionGetList",
                  "name": "Value",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerDefinitionGetList"
                },
                {
                  "nameOnMethod": "BannerDefinitionGetList",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerDefinitionGetList"
                },
                {
                  "nameOnMethod": "BannerDefinitionGetList",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerDefinitionGetList"
                },
                {
                  "nameOnMethod": "BannerDefinitionGetList",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "BannerDefinitionGetList"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Banners.Dtos.BannerDefinitionWithDetailsDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<FS.Theme.Banners.Dtos.BannerDefinitionWithDetailsDto>"
              }
            }
          }
        }
      }
    },
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "Default",
      "controllers": {
        "FS.Abp.Emailing.EmailingApi": {
          "controllerName": "EmailingApi",
          "type": "FS.Abp.Emailing.EmailingApi",
          "interfaces": [
            {
              "type": "FS.Abp.Emailing.IEmailSettingsAppService"
            },
            {
              "type": "FS.Abp.Emailing.IEmailingApi"
            }
          ],
          "actions": {
            "GetByEmailSettingsGetAndFallback": {
              "uniqueName": "GetByEmailSettingsGetAndFallback",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/emailing/email-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "EmailSettingsGet",
                  "typeAsString": "FS.Abp.Emailing.Dtos.EmailSettingsGetDto, FS.Abp.Application.Contracts",
                  "type": "FS.Abp.Emailing.Dtos.EmailSettingsGetDto",
                  "typeSimple": "FS.Abp.Emailing.Dtos.EmailSettingsGetDto",
                  "isOptional": true,
                  "defaultValue": null
                },
                {
                  "name": "fallback",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": true,
                  "defaultValue": true
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "EmailSettingsGet",
                  "name": "ProviderName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "EmailSettingsGet"
                },
                {
                  "nameOnMethod": "EmailSettingsGet",
                  "name": "ProviderKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "EmailSettingsGet"
                },
                {
                  "nameOnMethod": "fallback",
                  "name": "fallback",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "FS.Abp.Emailing.Dtos.EmailSettingsDto",
                "typeSimple": "FS.Abp.Emailing.Dtos.EmailSettingsDto"
              }
            },
            "UpdateByEmailSettingsAndProviderNameAndProviderKey": {
              "uniqueName": "UpdateByEmailSettingsAndProviderNameAndProviderKey",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/abp/emailing/email-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "EmailSettings",
                  "typeAsString": "FS.Abp.Emailing.Dtos.EmailSettingsDto, FS.Abp.Application.Contracts",
                  "type": "FS.Abp.Emailing.Dtos.EmailSettingsDto",
                  "typeSimple": "FS.Abp.Emailing.Dtos.EmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "EmailSettings",
                  "name": "EmailSettings",
                  "type": "FS.Abp.Emailing.Dtos.EmailSettingsDto",
                  "typeSimple": "FS.Abp.Emailing.Dtos.EmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "actions": {
            "FindTenantByNameByName": {
              "uniqueName": "FindTenantByNameByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            },
            "FindTenantByIdById": {
              "uniqueName": "FindTenantByIdById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "actions": {
            "Get": {
              "uniqueName": "Get",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              }
            }
          }
        }
      }
    }
  },
  "types": {
    "FS.Abp.Emailing.Dtos.EmailSettingsGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ProviderKey",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "FS.Abp.Emailing.Dtos.EmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultFromAddress",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DefaultFromDisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Smtp",
          "type": "FS.Abp.Emailing.Dtos.SmtpDto",
          "typeSimple": "FS.Abp.Emailing.Dtos.SmtpDto",
          "isRequired": false
        }
      ]
    },
    "FS.Abp.Emailing.Dtos.SmtpDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Host",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Port",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Domain",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EnableSsl",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "UseDefaultCredentials",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.TheProject.TheProjectThemeSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Skin",
          "type": "FS.Theme.TheProject.Settings.TheProjectSkin",
          "typeSimple": "FS.Theme.TheProject.Settings.TheProjectSkin",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.TheProject.Settings.TheProjectSkin": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "blue",
        "brown",
        "cool_green",
        "dark_cyan",
        "dark_red",
        "gold",
        "gray",
        "green",
        "light_blue",
        "orange",
        "pink",
        "purple",
        "red",
        "vivid_red"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13
      ],
      "genericArguments": null,
      "properties": null
    },
    "FS.Theme.TheProject.UpdateTheProjectThemeSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Skin",
          "type": "FS.Theme.TheProject.Settings.TheProjectSkin",
          "typeSimple": "FS.Theme.TheProject.Settings.TheProjectSkin",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Routes.Dtos.RouteGetListDto": {
      "baseType": "FS.Abp.Application.Dtos.SearchResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "FS.Abp.Application.Dtos.SearchResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Routes.Dtos.RouteWithDetailsDto": {
      "baseType": "FS.Theme.Routes.Dtos.RouteDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RouteDefinition",
          "type": "FS.Theme.Routes.Dtos.RouteDefinitionDto",
          "typeSimple": "FS.Theme.Routes.Dtos.RouteDefinitionDto",
          "isRequired": false
        },
        {
          "name": "Children",
          "type": "[FS.Theme.Routes.Dtos.RouteDto]",
          "typeSimple": "[FS.Theme.Routes.Dtos.RouteDto]",
          "isRequired": false
        },
        {
          "name": "Parent",
          "type": "FS.Theme.Routes.Dtos.RouteDto",
          "typeSimple": "FS.Theme.Routes.Dtos.RouteDto",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Routes.Dtos.RouteDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "No",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Code",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Level",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "ParentId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Enable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "RouteConfig",
          "type": "FS.Theme.Routes.Dtos.RouteConfigDto",
          "typeSimple": "FS.Theme.Routes.Dtos.RouteConfigDto",
          "isRequired": false
        },
        {
          "name": "RouteDefinitionId",
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "FS.Theme.Routes.Dtos.RouteConfigDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Icon",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Sequence",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "OpenAnotherWindow",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Routes.Dtos.RouteDefinitionDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "No",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Enable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Routes.Dtos.RouteDefinitionGetListDto": {
      "baseType": "FS.Abp.Application.Dtos.SearchResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "FS.Theme.Routes.Dtos.RouteDefinitionWithDetailsDto": {
      "baseType": "FS.Theme.Routes.Dtos.RouteDefinitionDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Routes",
          "type": "[FS.Theme.Routes.Dtos.RouteDto]",
          "typeSimple": "[FS.Theme.Routes.Dtos.RouteDto]",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Banners.Dtos.BannerGetListDto": {
      "baseType": "FS.Abp.Application.Dtos.SearchResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "FS.Theme.Banners.Dtos.BannerWithDetailsDto": {
      "baseType": "FS.Theme.Banners.Dtos.BannerDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BannerDefinition",
          "type": "FS.Theme.Banners.Dtos.BannerDefinitionDto",
          "typeSimple": "FS.Theme.Banners.Dtos.BannerDefinitionDto",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Banners.Dtos.BannerDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "No",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Enable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "BannerConfig",
          "type": "FS.Theme.Banners.Dtos.BannerConfigDto",
          "typeSimple": "FS.Theme.Banners.Dtos.BannerConfigDto",
          "isRequired": false
        },
        {
          "name": "BannerDefinitionId",
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Banners.Dtos.BannerConfigDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileUrl",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Sequence",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Banners.Dtos.BannerDefinitionDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "No",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Enable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "FS.Theme.Banners.Dtos.BannerDefinitionGetListDto": {
      "baseType": "FS.Abp.Application.Dtos.SearchResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "FS.Theme.Banners.Dtos.BannerDefinitionWithDetailsDto": {
      "baseType": "FS.Theme.Banners.Dtos.BannerDefinitionDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Banners",
          "type": "[FS.Theme.Banners.Dtos.BannerDto]",
          "typeSimple": "[FS.Theme.Banners.Dtos.BannerDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Auth",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Setting",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "isRequired": false
        },
        {
          "name": "CurrentUser",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "isRequired": false
        },
        {
          "name": "Features",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "isRequired": false
        },
        {
          "name": "MultiTenancy",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "isRequired": false
        },
        {
          "name": "CurrentTenant",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "isRequired": false
        },
        {
          "name": "Timing",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "isRequired": false
        },
        {
          "name": "Clock",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "isRequired": false
        },
        {
          "name": "ObjectExtensions",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}",
          "isRequired": false
        },
        {
          "name": "Languages",
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]",
          "isRequired": false
        },
        {
          "name": "CurrentCulture",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false
        },
        {
          "name": "DefaultResourceName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LanguagesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        },
        {
          "name": "LanguageFilesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UiCultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FlagIcon",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EnglishName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRightToLeft",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NativeName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormat",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormatLong",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortDatePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FullDateTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateSeparator",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LongTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "T",
          "typeSimple": "T",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Policies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        },
        {
          "name": "GrantedPolicies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SurName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Roles",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "isRequired": false
        },
        {
          "name": "Windows",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Enums",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "isRequired": false
        },
        {
          "name": "Api",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "isRequired": false
        },
        {
          "name": "Ui",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Resource",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "isRequired": false
        },
        {
          "name": "OnCreate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "isRequired": false
        },
        {
          "name": "OnUpdate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "isRequired": false
        },
        {
          "name": "OnCreateForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "OnEditForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "Lookup",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResultListPropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayPropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ValuePropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FilterParamName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Config",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "isRequired": false
        },
        {
          "name": "LocalizationResource",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "isRequired": false
        },
        {
          "name": "Types",
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RemoteServiceName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Controllers",
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Interfaces",
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Actions",
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "HttpMethod",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SupportedVersions",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "ParametersOnMethod",
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Parameters",
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "ReturnValue",
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeAsString",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "ConstraintTypes",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "BindingSourceId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptorName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsEnum",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "EnumNames",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "EnumValues",
          "type": "[System.Object]",
          "typeSimple": "[object]",
          "isRequired": false
        },
        {
          "name": "GenericArguments",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "Properties",
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRequired",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    }
  }
}