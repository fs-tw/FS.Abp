//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.4
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using System.Reflection;
using FluentValidation;

namespace FS.PrinterManagement.Printing.Dtos
{
    public partial class PrintDocumentDefinitionCreateDtoValidator : AbstractValidator<PrintDocumentDefinitionCreateDto>
    {
        public PrintDocumentDefinitionCreateDtoValidator()
        {
            RuleFor(p => p.PrinterName)
                .NotNull()
                ;
            RuleFor(p => p.PaperSize)
                ;
            RuleFor(p => p.Margins)
                ;
            RuleFor(p => p.Paragraphs)
                ;
            RuleFor(p => p.Code)
                .NotNull()
                ;
            RuleFor(p => p.DisplayName)
                .NotNull()
                ;
            RuleFor(p => p.Description)
                .NotNull()
                ;
            RuleFor(p => p.IsDefault)
                .NotNull()
                ;
            CustomizeConfiguration();
        }
        partial void CustomizeConfiguration();
    }
    public partial class PrintDocumentDefinitionUpdateDtoValidator : AbstractValidator<PrintDocumentDefinitionUpdateDto>
    {
        public PrintDocumentDefinitionUpdateDtoValidator()
        {
            RuleFor(p => p.PrinterName)
                .NotNull()
                ;
            RuleFor(p => p.PaperSize)
                ;
            RuleFor(p => p.Margins)
                ;
            RuleFor(p => p.Paragraphs)
                ;
            RuleFor(p => p.Code)
                .NotNull()
                ;
            RuleFor(p => p.DisplayName)
                .NotNull()
                ;
            RuleFor(p => p.Description)
                .NotNull()
                ;
            RuleFor(p => p.IsDefault)
                .NotNull()
                ;
            CustomizeConfiguration();
        }
        partial void CustomizeConfiguration();
    }
}
