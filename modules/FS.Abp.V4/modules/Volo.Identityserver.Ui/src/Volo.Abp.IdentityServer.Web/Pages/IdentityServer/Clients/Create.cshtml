@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using Volo.Abp.IdentityServer.Localization
@using Volo.Abp.IdentityServer.Web.Pages.IdentityServer.Clients
@using Volo.Abp.Localization
@using Volo.Abp.ObjectExtending
@inject IStringLocalizerFactory StringLocalizerFactory
@inject IHtmlLocalizer<AbpIdentityServerResource> L
@model CreateModel
@{
    Layout = null;
}
<form method="post" class="form-with-card" asp-page="/IdentityServer/Clients/Create">
    <abp-modal size="@(AbpModalSize.Large)">
        <abp-modal-header title="@L["Create"].Value"></abp-modal-header>
        <abp-modal-body>
            <abp-tabs name="ClientsCreateTabsId">
                <abp-tab title="@L["Basic"].Value">
                    <abp-input asp-for="Client.ClientId" />
                    <abp-input asp-for="Client.ClientName" />
                    <abp-input asp-for="Client.Description" />
                    <abp-input asp-for="Client.ClientUri" />
                    <abp-input asp-for="Client.LogoUri" />
                    <abp-input asp-for="Client.RequireConsent" />
                    @foreach (var propertyInfo in ObjectExtensionManager.Instance.GetProperties<ClientCreateModalView>())
                    {
                        if (!propertyInfo.Name.EndsWith("_Text"))
                        {
                            if (propertyInfo.Type.IsEnum || !propertyInfo.Lookup.Url.IsNullOrEmpty())
                            {
                                <abp-select asp-for="Client.ExtraProperties[propertyInfo.Name]"
                                            label="@propertyInfo.GetLocalizedDisplayName(StringLocalizerFactory)"
                                            autocomplete-api-url="@propertyInfo.Lookup.Url"
                                            autocomplete-selected-item-name="@Model.Client.ExtraProperties[propertyInfo.Name+"_Text"]"
                                            autocomplete-selected-item-value="@Model.Client.ExtraProperties[propertyInfo.Name]"
                                            autocomplete-filter-param-name="@propertyInfo.Lookup.FilterParamName"
                                            autocomplete-items-property-name="@propertyInfo.Lookup.ResultListPropertyName"
                                            autocomplete-display-property-name="@propertyInfo.Lookup.DisplayPropertyName"
                                            autocomplete-value-property-name="@propertyInfo.Lookup.ValuePropertyName"></abp-select>
                            }
                            else
                            {
                                <abp-input type="@propertyInfo.GetInputType()"
                                           asp-for="Client.ExtraProperties[propertyInfo.Name]"
                                           label="@propertyInfo.GetLocalizedDisplayName(StringLocalizerFactory)"
                                           asp-format="@propertyInfo.GetInputFormatOrNull()"
                                           value="@propertyInfo.GetInputValueOrNull(Model.Client.ExtraProperties[propertyInfo.Name])" />
                            }
                        }
                    }
                </abp-tab>
                <abp-tab title="@L["Uris"].Value">
                    <abp-input asp-for="Client.CallbackUrl" />
                    <abp-input asp-for="Client.LogoutUrl" />
                </abp-tab>
                <abp-tab title="@L["Secrets"].Value">
                    <abp-card class="bg-light shadow-none mb-3">
                        <abp-card-body>
                            <abp-row>
                                <abp-column size="_6">
                                    <abp-select asp-for="SampleSecret.Type" />
                                    <abp-input asp-for="SampleSecret.Value" />
                                </abp-column>

                                <abp-column size="_6">
                                    <abp-input asp-for="SampleSecret.Description" />
                                    <div class="form-group">
                                        <label for="SampleSecret_Expiration">@L["Expiration"]</label>
                                        <input class="form-control" type="date" asp-for="SampleSecret.Expiration" />
                                        <span class="text-danger field-validation-valid" data-valmsg-for="SampleSecret.Expiration" data-valmsg-replace="true"></span>
                                    </div>
                                </abp-column>
                            </abp-row>
                            <abp-button id="AddNewSecretButton" button-type="Primary" size="Small" class="float-right"><i class="fa fa-plus"></i> @L["AddNew"]</abp-button>
                        </abp-card-body>
                    </abp-card>
                    <abp-table hoverable-rows="true" responsive-sm="true" id="SecretTableId" style="display: none;">
                        <thead>
                            <tr>
                                <th scope="Column">@L["Type"]</th>
                                <th scope="Column">@L["Value"]</th>
                                <th scope="Column">@L["Description"]</th>
                                <th scope="Column">@L["Expiration"]</th>
                                <th scope="Column"></th>
                            </tr>
                        </thead>
                        <tbody id="SecretTableBodyId"></tbody>
                    </abp-table>
                </abp-tab>
                <abp-tab-dropdown title="@L["Resources"].Value" name="ResourcesDropdown">
                    <abp-tab title="@L["IdentityResources"].Value" parent-dropdown-name="ResourcesDropdown">
                        <h2>@L["IdentityResources"]</h2>
                        <abp-row>
                            <abp-column size="_6">
                                <abp-card>
                                    <abp-card-header>@L["Assigned"]</abp-card-header>
                                    <abp-card-body class="custom-body">

                                        @{ var allApiResourcesCount = Model.AllApiResources.Count; }
                                        @for (var i = 0; i < Model.AllIdentityResources.Count; i++)
                                        {
                                            var identityResource = Model.AllIdentityResources[i];
                                            <button style="display: none;" type="button" class="ownedResource btn btn-block btn-primary btn-sm mb-2 mt-0 text-truncate text-left" id="@(identityResource.Id.ToString() + "OwnedId")" abp-tooltip-bottom="@(identityResource.DisplayName != null && identityResource.DisplayName.Length > 35 ? identityResource.DisplayName : "")"><i class="fa fa-long-arrow-right"></i>
                                                @(identityResource.DisplayName.IsNullOrEmpty() ? identityResource.Name: identityResource.DisplayName)
                                             </button>
                                            <input id="@(identityResource.Id.ToString() + "InputId")" type="text" name="@("Client.Scopes[" + (allApiResourcesCount + i) + "]")" value="" hidden />
                                        }
                                    </abp-card-body>
                                </abp-card>
                            </abp-column>

                            <abp-column size="_6">

                                <abp-card>
                                    <abp-card-header>@L["Available"]</abp-card-header>
                                    <abp-card-body class="custom-body">
                                        @foreach (var identityResource in Model.AllIdentityResources)
                                        {
                                            <button type="button" data-name="@identityResource.Name" class="otherResource btn btn-block btn-outline-primary btn-sm mb-2 mt-0 text-truncate text-left" id="@(identityResource.Id.ToString() + "OtherId")" abp-tooltip-bottom="@(identityResource.DisplayName != null && identityResource.DisplayName.Length > 35 ? identityResource.DisplayName : "")"><i class="fa fa-long-arrow-left "></i>
                                                @(identityResource.DisplayName.IsNullOrEmpty() ? identityResource.Name: identityResource.DisplayName)
                                            </button>
                                        }
                                    </abp-card-body>
                                </abp-card>
                            </abp-column>

                        </abp-row>
                    </abp-tab>
                    <abp-tab title="@L["ApiResources"].Value" parent-dropdown-name="ResourcesDropdown">
                        <h2>@L["ApiResources"]</h2>
                        <abp-row>
                            <abp-column size="_6">
                                <abp-card>
                                    <abp-card-header>@L["Assigned"]</abp-card-header>
                                    <abp-card-body class="custom-body">
                                        @for (var i = 0; i < Model.AllApiResources.Count; i++)
                                        {
                                            var apiResource = Model.AllApiResources[i];
                                            <button style="display: none;" type="button" class="ownedResource btn btn-block btn-primary btn-sm mb-2 mt-0 text-truncate text-left" id="@(apiResource.Id.ToString() + "OwnedId")" abp-tooltip-bottom="@(apiResource.DisplayName != null &&apiResource.DisplayName.Length>35?apiResource.DisplayName:"")"><i class="fa fa-long-arrow-right"></i>
                                                @(apiResource.DisplayName.IsNullOrEmpty() ? apiResource.Name: apiResource.DisplayName)
                                            </button>
                                            <input id="@(apiResource.Id.ToString() + "InputId")" type="text" name="@("Client.Scopes[" + i + "]")" value="" hidden />
                                        }
                                    </abp-card-body>
                                </abp-card>
                            </abp-column>

                            <abp-column size="_6">

                                <abp-card>
                                    <abp-card-header>@L["Available"]</abp-card-header>
                                    <abp-card-body class="custom-body">
                                        @foreach (var apiResource in Model.AllApiResources)
                                        {
                                            <button type="button" data-name="@apiResource.Name" class="otherResource btn btn-block btn-outline-primary btn-sm mb-2 mt-0 text-truncate text-left" id="@(apiResource.Id.ToString() + "OtherId")" abp-tooltip-bottom="@(apiResource.DisplayName != null &&apiResource.DisplayName.Length>35?apiResource.DisplayName:"")"><i class="fa fa-long-arrow-left "></i>
                                             @(apiResource.DisplayName.IsNullOrEmpty() ? apiResource.Name: apiResource.DisplayName)
                                             </button>
                                        }
                                    </abp-card-body>
                                </abp-card>
                            </abp-column>

                        </abp-row>
                    </abp-tab>
                </abp-tab-dropdown>
            </abp-tabs>
        </abp-modal-body>
        <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)">
        </abp-modal-footer>
    </abp-modal>
</form>
