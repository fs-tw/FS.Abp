@page "/identity/users"
@attribute [Authorize(IdentityPermissions.Users.Default)]
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.Identity.Localization
@using Volo.Abp.PermissionManagement.Blazor.Components
@inject AbpBlazorMessageLocalizerHelper<IdentityResource> LH
@inherits AbpCrudPageBase<IIdentityUserAppService, IdentityUserDto, Guid, GetIdentityUsersInput, IdentityUserCreateDto, IdentityUserUpdateDto>

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Users"]" BreadcrumbItems="@BreadcrumbItems">
    @if (HasCreatePermission)
    {
        <Column ColumnSize="ColumnSize.IsAuto" Class="px-1 pt-2">
            <Button Color="Color.Primary" Clicked="OpenCreateModalAsync">
                <Icon Name="IconName.Add" Class="mr-1"></Icon> @L["NewUser"]
            </Button>
        </Column>
    }
</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="IdentityUserSearchForm">
            <Fields Horizontal="true">
                <Field ColumnSize="ColumnSize.Is11" class="mb-0">
                    <TextEdit Placeholder="@L["Search"]" @bind-Text="@GetListInput.Filter" />
                </Field>
                <Field ColumnSize="ColumnSize.Is1" class="mb-0">
                    <Button form="IdentityUserSearchForm"
                            Block="true"
                            Type="ButtonType.Submit"
                            PreventDefaultOnSubmit="true"
                            Color="Color.Primary"
                            Clicked="GetEntitiesAsync">
                        <Icon Name="IconName.Search" />
                    </Button>
                </Field>
            </Fields>
        </Form>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="IdentityUserDto"
          Data="Entities"
          ReadData="OnDataGridReadAsync"
          TotalItems="TotalCount"
          ShowPager="true"
          PageSize="PageSize">
    <DataGridColumns>
        <DataGridEntityActionsColumn TItem="IdentityUserDto" @ref="EntityActionsColumn">
            <DisplayTemplate>
                <EntityActions TItem="IdentityUserDto" EntityActionsColumn="@EntityActionsColumn">
                    <EntityAction TItem="IdentityUserDto"
                                  RequiredPolicy="@UpdatePolicyName"
                                  Clicked="() => OpenEditModalAsync(context)"
                                  Text="@L["Edit"]">
                    </EntityAction>
                    <EntityAction TItem="IdentityUserDto"
                                  RequiredPolicy="@ManagePermissionsPolicyName"
                                  Clicked="() => PermissionManagementModal.OpenAsync(PermissionProviderName, context.Id.ToString())"
                                  Text="@L["Permissions"]">
                    </EntityAction>
                    <EntityAction TItem="IdentityUserDto"
                                  ConfirmationMessage="()=> GetDeleteConfirmationMessage(context)"
                                  RequiredPolicy="@DeletePolicyName"
                                  Clicked="() => DeleteEntityAsync(context)"
                                  Text="@L["Delete"]"></EntityAction>
                </EntityActions>
            </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.UserName)" Caption="@L["UserName"].Value">
            <DisplayTemplate>
                @(context.UserName)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.Email)" Caption="@L["Email"].Value">
            <DisplayTemplate>
                @(context.Email)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.PhoneNumber)" Caption="@L["PhoneNumber"].Value">
            <DisplayTemplate>
                @(context.PhoneNumber)
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal @ref="CreateModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <Form id="IdentityUserCreateForm">
                <ModalHeader>
                                <ModalTitle>@L["NewUser"]</ModalTitle>
                                <CloseButton Clicked="CloseCreateModalAsync" />
                            </ModalHeader>
                <ModalBody>
                    <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                        <Tabs @bind-SelectedTab="@CreateModalSelectedTab">
                            <Items>
                                <Tab Name="UserInformations">@L["UserInformations"]</Tab>
                                <Tab Name="Roles">@L["Roles"]</Tab>
                            </Items>
                            <Content>
                                <TabPanel Name="UserInformations">
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:UserName"]</FieldLabel>
                                            <TextEdit @bind-Text="NewEntity.UserName">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Name"]</FieldLabel>
                                            <TextEdit @bind-Text="NewEntity.Name">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Surname"]</FieldLabel>
                                            <TextEdit @bind-Text="NewEntity.Surname">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Password"]</FieldLabel>
                                            <TextEdit Role="TextRole.Password" @bind-Text="NewEntity.Password">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Email"]</FieldLabel>
                                            <TextEdit @bind-Text="NewEntity.Email">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation>
                                        <Field>
                                            <FieldLabel>@L["DisplayName:PhoneNumber"]</FieldLabel>
                                            <TextEdit @bind-Text="NewEntity.PhoneNumber">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Field>
                                        <Check TValue="bool" @bind-Checked="@NewEntity.LockoutEnabled">@L["DisplayName:LockoutEnabled"]</Check>
                                    </Field>
                                </TabPanel>
                                <TabPanel Name="Roles">
                                    @if (NewUserRoles != null)
                                    {
                                        @foreach (var role in NewUserRoles)
                                        {
                                            <Field>
                                                <input type="hidden" @bind-value="@role.Name" />
                                                <Check TValue="bool" @bind-Checked="@role.IsAssigned">@role.Name</Check>
                                            </Field>
                                        }
                                    }
                                </TabPanel>
                            </Content>
                        </Tabs>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                    <Button form="IdentityUserCreateForm" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Color="Color.Primary" Clicked="CreateEntityAsync">@L["Save"]</Button>
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}

@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal @ref="EditModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <Form id="IdentityUserEditForm">
                <ModalHeader>
                    <ModalTitle>@L["Edit"]</ModalTitle>
                    <CloseButton Clicked="CloseEditModalAsync" />
                </ModalHeader>
                <ModalBody>
                    <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                        <input type="hidden" name="ConcurrencyStamp" @bind-value="EditingEntity.ConcurrencyStamp" />
                
                        <Tabs @bind-SelectedTab="@EditModalSelectedTab">
                            <Items>
                                <Tab Name="UserInformations">@L["UserInformations"]</Tab>
                                <Tab Name="Roles">@L["Roles"]</Tab>
                            </Items>
                            <Content>
                                <TabPanel Name="UserInformations">
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:UserName"]</FieldLabel>
                                            <TextEdit @bind-Text="EditingEntity.UserName">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Name"]</FieldLabel>
                                            <TextEdit @bind-Text="EditingEntity.Name">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Surname"]</FieldLabel>
                                            <TextEdit @bind-Text="EditingEntity.Surname">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:Email"]</FieldLabel>
                                            <TextEdit @bind-Text="EditingEntity.Email">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation MessageLocalizer="@LH.Localize">
                                        <Field>
                                            <FieldLabel>@L["DisplayName:PhoneNumber"]</FieldLabel>
                                            <TextEdit @bind-Text="EditingEntity.PhoneNumber">
                                                <Feedback>
                                                    <ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Field>
                                        <Check TValue="bool" @bind-Checked="EditingEntity.LockoutEnabled">@L["DisplayName:LockoutEnabled"]</Check>
                                    </Field>
                                </TabPanel>
                                <TabPanel Name="Roles">
                                    @if (EditUserRoles != null)
                                    {
                                        @foreach (var role in EditUserRoles)
                                        {
                                            <Field>
                                                <input type="hidden" @bind-value="@role.Name" />
                                                <Check TValue="bool" @bind-Checked="@role.IsAssigned">@role.Name</Check>
                                            </Field>
                                        }
                                    }
                                </TabPanel>
                            </Content>
                        </Tabs>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                    <Button form="IdentityUserEditForm" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Color="Color.Primary" Clicked="UpdateEntityAsync">@L["Save"]</Button>
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}

@if (HasManagePermissionsPermission)
{
    <PermissionManagementModal @ref="PermissionManagementModal" />
}
