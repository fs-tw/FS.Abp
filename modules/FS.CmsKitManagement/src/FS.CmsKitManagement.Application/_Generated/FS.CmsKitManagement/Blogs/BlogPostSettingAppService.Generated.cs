//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating AbpSettings.
// 4.4.3
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.Blogs.Dtos;
using System.Threading.Tasks;
using Volo.Abp.Application.Services;
using FS.Abp.Data;

namespace FS.CmsKitManagement.Blogs
{
    public partial class BlogPostSettingAppService : ApplicationService, IBlogPostSettingAppService // auto-generated
    {
        protected Volo.Abp.SettingManagement.ISettingManager SettingManager => this.LazyServiceProvider.LazyGetRequiredService<Volo.Abp.SettingManagement.ISettingManager>();

        public async Task<BlogPostSettingDto> GetAsync(string providerName, string providerKey, bool fallback = true)
        {
            BlogPostSettingDto result = new BlogPostSettingDto();
            var option = new BlogPostSetting();
            option.DefaultCoverImage = await SettingManager.GetOrNullAsync(CmsKitManagementSettingNames.BlogPostSetting.DefaultCoverImage,providerName,providerKey,fallback);
            return ObjectMapper.Map(option, result);
        }

        public async Task UpdateAsync(BlogPostSettingDto input, string providerName = null, string providerKey = null,bool forceToSet=true)
        {
            var domain = new BlogPostSetting();
            await SettingManager.SetAsync(CmsKitManagementSettingNames.BlogPostSetting.DefaultCoverImage, input.DefaultCoverImage.ToString(), providerName, providerKey, forceToSet);
            ObjectMapper.Map(input, domain);

        }
    }
}
