//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.3
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.MultiLinguals.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.CmsKitManagement.MultiLinguals
{
    public partial class MultiLingualsApi //: IMultiLingualCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("multi-lingual/id")]
        [NonAction][RemoteService(false)]
        public Task<MultiLingualWithDetailsDto> GetAsync([FromQuery] MultiLingualPrimaryKeyDto MultiLingualPrimaryKey)
        {
            return this.MultiLingualCrudAppService.GetAsync(MultiLingualPrimaryKey);
        }

        [HttpGet]
        [Route("multi-lingual")]
        [RemoteService(true)]
        public Task<PagedResultDto<MultiLingualWithDetailsDto>> GetListAsync(MultiLingualGetListDto MultiLingual)
        {
            return this.MultiLingualCrudAppService.GetListAsync(MultiLingual);
        }

        [HttpPost]
        [Route("multi-lingual")]
        [NonAction][RemoteService(false)]
        public Task<MultiLingualWithDetailsDto> CreateAsync(MultiLingualCreateDto MultiLingual)
        {
            return this.MultiLingualCrudAppService.CreateAsync(MultiLingual);
        }

        [HttpPut]
        [Route("multi-lingual/id")]
        [NonAction][RemoteService(false)]
        public Task<MultiLingualWithDetailsDto> UpdateAsync([FromQuery] MultiLingualPrimaryKeyDto MultiLingualPrimaryKey, MultiLingualUpdateDto MultiLingual)
        {
            return this.MultiLingualCrudAppService.UpdateAsync(MultiLingualPrimaryKey,MultiLingual);
        }

        [HttpDelete]
        [Route("multi-lingual/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] MultiLingualPrimaryKeyDto MultiLingualPrimaryKey)
        {
            return this.MultiLingualCrudAppService.DeleteAsync(MultiLingualPrimaryKey);
        }
    }
}
