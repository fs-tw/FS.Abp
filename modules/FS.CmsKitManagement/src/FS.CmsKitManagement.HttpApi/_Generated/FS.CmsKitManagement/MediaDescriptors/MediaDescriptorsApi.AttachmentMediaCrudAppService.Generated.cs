//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.MediaDescriptors.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.CmsKitManagement.MediaDescriptors
{
    public partial class MediaDescriptorsApi //: IAttachmentMediaCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("attachment-media/id")]
        [NonAction][RemoteService(false)]
        public Task<AttachmentMediaWithDetailsDto> GetAsync([FromQuery] AttachmentMediaPrimaryKeyDto AttachmentMediaPrimaryKey)
        {
            return this.AttachmentMediaCrudAppService.GetAsync(AttachmentMediaPrimaryKey);
        }

        [HttpGet]
        [Route("attachment-media")]
        [RemoteService(true)]
        public Task<PagedResultDto<AttachmentMediaWithDetailsDto>> GetListAsync(AttachmentMediaGetListDto AttachmentMediaGetList)
        {
            return this.AttachmentMediaCrudAppService.GetListAsync(AttachmentMediaGetList);
        }

        [HttpPost]
        [Route("attachment-media")]
        [NonAction][RemoteService(false)]
        public Task<AttachmentMediaWithDetailsDto> CreateAsync(AttachmentMediaCreateDto AttachmentMediaCreate)
        {
            return this.AttachmentMediaCrudAppService.CreateAsync(AttachmentMediaCreate);
        }

        [HttpPut]
        [Route("attachment-media/id")]
        [NonAction][RemoteService(false)]
        public Task<AttachmentMediaWithDetailsDto> UpdateAsync([FromQuery] AttachmentMediaPrimaryKeyDto AttachmentMediaPrimaryKey, AttachmentMediaUpdateDto AttachmentMediaUpdate)
        {
            return this.AttachmentMediaCrudAppService.UpdateAsync(AttachmentMediaPrimaryKey,AttachmentMediaUpdate);
        }

        [HttpDelete]
        [Route("attachment-media/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] AttachmentMediaPrimaryKeyDto AttachmentMediaPrimaryKey)
        {
            return this.AttachmentMediaCrudAppService.DeleteAsync(AttachmentMediaPrimaryKey);
        }
    }
}
