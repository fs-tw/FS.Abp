//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.3
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.Contents.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.CmsKitManagement.Contents
{
    public partial class ContentsApi //: IEntityContentCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("entity-content/id")]
        [NonAction][RemoteService(false)]
        public Task<EntityContentWithDetailsDto> GetAsync([FromQuery] EntityContentPrimaryKeyDto EntityContentPrimaryKey)
        {
            return this.EntityContentCrudAppService.GetAsync(EntityContentPrimaryKey);
        }

        [HttpGet]
        [Route("entity-content")]
        [RemoteService(true)]
        public Task<PagedResultDto<EntityContentWithDetailsDto>> GetListAsync(EntityContentGetListDto EntityContent)
        {
            return this.EntityContentCrudAppService.GetListAsync(EntityContent);
        }

        [HttpPost]
        [Route("entity-content")]
        [NonAction][RemoteService(false)]
        public Task<EntityContentWithDetailsDto> CreateAsync(EntityContentCreateDto EntityContent)
        {
            return this.EntityContentCrudAppService.CreateAsync(EntityContent);
        }

        [HttpPut]
        [Route("entity-content/id")]
        [NonAction][RemoteService(false)]
        public Task<EntityContentWithDetailsDto> UpdateAsync([FromQuery] EntityContentPrimaryKeyDto EntityContentPrimaryKey, EntityContentUpdateDto EntityContent)
        {
            return this.EntityContentCrudAppService.UpdateAsync(EntityContentPrimaryKey,EntityContent);
        }

        [HttpDelete]
        [Route("entity-content/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] EntityContentPrimaryKeyDto EntityContentPrimaryKey)
        {
            return this.EntityContentCrudAppService.DeleteAsync(EntityContentPrimaryKey);
        }
    }
}
