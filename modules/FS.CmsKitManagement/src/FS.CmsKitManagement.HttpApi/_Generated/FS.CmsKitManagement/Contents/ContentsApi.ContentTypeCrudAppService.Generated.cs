//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.3
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.Contents.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.CmsKitManagement.Contents
{
    public partial class ContentsApi //: IContentTypeCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("content-type/id")]
        [NonAction][RemoteService(false)]
        public Task<ContentTypeWithDetailsDto> GetAsync([FromQuery] ContentTypePrimaryKeyDto ContentTypePrimaryKey)
        {
            return this.ContentTypeCrudAppService.GetAsync(ContentTypePrimaryKey);
        }

        [HttpGet]
        [Route("content-type")]
        [RemoteService(true)]
        public Task<PagedResultDto<ContentTypeWithDetailsDto>> GetListAsync(ContentTypeGetListDto ContentType)
        {
            return this.ContentTypeCrudAppService.GetListAsync(ContentType);
        }

        [HttpPost]
        [Route("content-type")]
        [NonAction][RemoteService(false)]
        public Task<ContentTypeWithDetailsDto> CreateAsync(ContentTypeCreateDto ContentType)
        {
            return this.ContentTypeCrudAppService.CreateAsync(ContentType);
        }

        [HttpPut]
        [Route("content-type/id")]
        [NonAction][RemoteService(false)]
        public Task<ContentTypeWithDetailsDto> UpdateAsync([FromQuery] ContentTypePrimaryKeyDto ContentTypePrimaryKey, ContentTypeUpdateDto ContentType)
        {
            return this.ContentTypeCrudAppService.UpdateAsync(ContentTypePrimaryKey,ContentType);
        }

        [HttpDelete]
        [Route("content-type/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] ContentTypePrimaryKeyDto ContentTypePrimaryKey)
        {
            return this.ContentTypeCrudAppService.DeleteAsync(ContentTypePrimaryKey);
        }
    }
}
