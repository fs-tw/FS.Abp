//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.4.3
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.CmsKitManagement.Contents.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.CmsKitManagement.Contents
{
    public partial class ContentsApi //: IContentPropertyCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("content-property/id")]
        [NonAction][RemoteService(false)]
        public Task<ContentPropertyWithDetailsDto> GetAsync([FromQuery] ContentPropertyPrimaryKeyDto ContentPropertyPrimaryKey)
        {
            return this.ContentPropertyCrudAppService.GetAsync(ContentPropertyPrimaryKey);
        }

        [HttpGet]
        [Route("content-property")]
        [RemoteService(true)]
        public Task<PagedResultDto<ContentPropertyWithDetailsDto>> GetListAsync(ContentPropertyGetListDto ContentProperty)
        {
            return this.ContentPropertyCrudAppService.GetListAsync(ContentProperty);
        }

        [HttpPost]
        [Route("content-property")]
        [NonAction][RemoteService(false)]
        public Task<ContentPropertyWithDetailsDto> CreateAsync(ContentPropertyCreateDto ContentProperty)
        {
            return this.ContentPropertyCrudAppService.CreateAsync(ContentProperty);
        }

        [HttpPut]
        [Route("content-property/id")]
        [NonAction][RemoteService(false)]
        public Task<ContentPropertyWithDetailsDto> UpdateAsync([FromQuery] ContentPropertyPrimaryKeyDto ContentPropertyPrimaryKey, ContentPropertyUpdateDto ContentProperty)
        {
            return this.ContentPropertyCrudAppService.UpdateAsync(ContentPropertyPrimaryKey,ContentProperty);
        }

        [HttpDelete]
        [Route("content-property/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] ContentPropertyPrimaryKeyDto ContentPropertyPrimaryKey)
        {
            return this.ContentPropertyCrudAppService.DeleteAsync(ContentPropertyPrimaryKey);
        }
    }
}
