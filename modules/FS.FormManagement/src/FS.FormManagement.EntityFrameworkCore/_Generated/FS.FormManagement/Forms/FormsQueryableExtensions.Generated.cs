//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using Microsoft.EntityFrameworkCore;
using System.Linq;

namespace FS.FormManagement.Forms
{
    public static class FormsQueryableExtensions //auto-generated
    {
        public static IQueryable<Form> IncludeDetails(this IQueryable<Form> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Groups);
        }
        public static IQueryable<Group> IncludeDetails(this IQueryable<Group> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Children)
                .Include(x => x.Parent)
                .Include(x => x.Form)
                .Include(x => x.Items);
        }
        public static IQueryable<Checkbox> IncludeDetails(this IQueryable<Checkbox> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Choices);
        }
        public static IQueryable<ChoiceMultiple> IncludeDetails(this IQueryable<ChoiceMultiple> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Choices);
        }
        public static IQueryable<DropdownList> IncludeDetails(this IQueryable<DropdownList> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Choices);
        }
        public static IQueryable<Question> IncludeDetails(this IQueryable<Question> queryable, bool include = true)
        {
            if (!include)
            {
                return queryable;
            }
            return queryable
                .Include(x => x.Group);
        }
    }
}
