//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Volo.Abp.EntityFrameworkCore.Modeling;
using FS.FormManagement.EntityFrameworkCore;

namespace FS.FormManagement.Forms
{
    public partial class QuestionConfiguration : IEntityTypeConfiguration<Question>
    {
        private FormManagementModelBuilderConfigurationOptions options;
        public QuestionConfiguration(FormManagementModelBuilderConfigurationOptions options)
        {
            this.options = options;
        }
        public void Configure(EntityTypeBuilder<Question> builder)
        {
            builder.ToTable(options.TablePrefix + @"Questions", options.Schema);
            builder.HasDiscriminator(@"Discriminator", typeof(string)).HasValue<FS.FormManagement.Forms.Question>(@"Question").HasValue<FS.FormManagement.Forms.Checkbox>(@"Checkbox").HasValue<FS.FormManagement.Forms.ChoiceMultiple>(@"ChoiceMultiple").HasValue<FS.FormManagement.Forms.DropdownList>(@"DropdownList").HasValue<FS.FormManagement.Forms.ShortText>(@"ShortText");
            builder.Property<Guid>(@"Id").HasColumnName(@"Id").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.No).HasColumnName(@"No").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Title).HasColumnName(@"Title").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.GroupId).HasColumnName(@"GroupId").ValueGeneratedNever();
            builder.Property(x => x.Sequence).HasColumnName(@"Sequence").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.HasOtherOption).HasColumnName(@"HasOtherOption").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.IsRequired).HasColumnName(@"IsRequired").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Discriminator).HasColumnName(@"Discriminator").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").ValueGeneratedNever();
            builder.HasKey(@"Id");
            builder.HasOne(x => x.Group).WithMany(op => op.Items).IsRequired(true).HasForeignKey(@"GroupId");

            builder.ConfigureAuditedAggregateRoot();
            builder.HasIndex(x => x.CreationTime);

            CustomizeConfiguration(builder);
        }

        #region Partial Methods

        partial void CustomizeConfiguration(EntityTypeBuilder<Question> builder);

        #endregion
    }

}
