//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Volo.Abp.EntityFrameworkCore.Modeling;
using FS.FormManagement.EntityFrameworkCore;

namespace FS.FormManagement.FormResponses
{
    public partial class AnswerConfiguration : IEntityTypeConfiguration<Answer>
    {
        private FormManagementModelBuilderConfigurationOptions options;
        public AnswerConfiguration(FormManagementModelBuilderConfigurationOptions options)
        {
            this.options = options;
        }
        public void Configure(EntityTypeBuilder<Answer> builder)
        {
            builder.ToTable(options.TablePrefix + @"Answers", options.Schema);
            builder.Property<Guid>(@"Id").HasColumnName(@"Id").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Value).HasColumnName(@"Value").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.FormResponseId).HasColumnName(@"FormResponseId").ValueGeneratedNever();
            builder.Property(x => x.QuestionId).HasColumnName(@"QuestionId").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ChoiceId).HasColumnName(@"ChoiceId").ValueGeneratedNever();
            builder.Property(x => x.AnswerDate).HasColumnName(@"AnswerDate").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.TenantId).HasColumnName(@"TenantId").ValueGeneratedNever();
            builder.HasKey(@"Id");
            builder.HasOne(x => x.Record).WithMany(op => op.Answers).IsRequired(true).HasForeignKey(@"FormResponseId");

            builder.ConfigureAuditedAggregateRoot();
            builder.HasIndex(x => x.CreationTime);

            CustomizeConfiguration(builder);
        }

        #region Partial Methods

        partial void CustomizeConfiguration(EntityTypeBuilder<Answer> builder);

        #endregion
    }

}
