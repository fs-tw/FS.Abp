//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.FormManagement.Records.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.FormManagement.Records
{
    public partial class RecordsApi //: IRecordCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("record/id")]
        [NonAction][RemoteService(false)]
        public Task<RecordWithDetailsDto> GetAsync([FromQuery] RecordPrimaryKeyDto RecordPrimaryKey)
        {
            return this.RecordCrudAppService.GetAsync(RecordPrimaryKey);
        }

        [HttpGet]
        [Route("record")]
        [RemoteService(true)]
        public Task<PagedResultDto<RecordWithDetailsDto>> GetListAsync(RecordGetListDto RecordGetList)
        {
            return this.RecordCrudAppService.GetListAsync(RecordGetList);
        }

        [HttpPost]
        [Route("record")]
        [NonAction][RemoteService(false)]
        public Task<RecordWithDetailsDto> CreateAsync(RecordCreateDto RecordCreate)
        {
            return this.RecordCrudAppService.CreateAsync(RecordCreate);
        }

        [HttpPut]
        [Route("record/id")]
        [NonAction][RemoteService(false)]
        public Task<RecordWithDetailsDto> UpdateAsync([FromQuery] RecordPrimaryKeyDto RecordPrimaryKey, RecordUpdateDto RecordUpdate)
        {
            return this.RecordCrudAppService.UpdateAsync(RecordPrimaryKey,RecordUpdate);
        }

        [HttpDelete]
        [Route("record/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] RecordPrimaryKeyDto RecordPrimaryKey)
        {
            return this.RecordCrudAppService.DeleteAsync(RecordPrimaryKey);
        }
    }
}
