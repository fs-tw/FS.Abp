//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.FormManagement.Records.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.FormManagement.Records
{
    public partial class RecordsApi //: IRecordItemCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("record-item/id")]
        [NonAction][RemoteService(false)]
        public Task<RecordItemWithDetailsDto> GetAsync([FromQuery] RecordItemPrimaryKeyDto RecordItemPrimaryKey)
        {
            return this.RecordItemCrudAppService.GetAsync(RecordItemPrimaryKey);
        }

        [HttpGet]
        [Route("record-item")]
        [RemoteService(true)]
        public Task<PagedResultDto<RecordItemWithDetailsDto>> GetListAsync(RecordItemGetListDto RecordItemGetList)
        {
            return this.RecordItemCrudAppService.GetListAsync(RecordItemGetList);
        }

        [HttpPost]
        [Route("record-item")]
        [NonAction][RemoteService(false)]
        public Task<RecordItemWithDetailsDto> CreateAsync(RecordItemCreateDto RecordItemCreate)
        {
            return this.RecordItemCrudAppService.CreateAsync(RecordItemCreate);
        }

        [HttpPut]
        [Route("record-item/id")]
        [NonAction][RemoteService(false)]
        public Task<RecordItemWithDetailsDto> UpdateAsync([FromQuery] RecordItemPrimaryKeyDto RecordItemPrimaryKey, RecordItemUpdateDto RecordItemUpdate)
        {
            return this.RecordItemCrudAppService.UpdateAsync(RecordItemPrimaryKey,RecordItemUpdate);
        }

        [HttpDelete]
        [Route("record-item/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] RecordItemPrimaryKeyDto RecordItemPrimaryKey)
        {
            return this.RecordItemCrudAppService.DeleteAsync(RecordItemPrimaryKey);
        }
    }
}
