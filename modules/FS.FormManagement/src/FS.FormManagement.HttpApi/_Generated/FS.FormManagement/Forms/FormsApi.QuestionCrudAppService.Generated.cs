//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.FormManagement.Forms.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.FormManagement.Forms
{
    public partial class FormsApi //: IQuestionCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("question/id")]
        [NonAction][RemoteService(false)]
        public Task<QuestionWithDetailsDto> GetAsync([FromQuery] QuestionPrimaryKeyDto QuestionPrimaryKey)
        {
            return this.QuestionCrudAppService.GetAsync(QuestionPrimaryKey);
        }

        [HttpGet]
        [Route("question")]
        [RemoteService(true)]
        public Task<PagedResultDto<QuestionWithDetailsDto>> GetListAsync(QuestionGetListDto QuestionGetList)
        {
            return this.QuestionCrudAppService.GetListAsync(QuestionGetList);
        }

        [HttpPost]
        [Route("question")]
        [NonAction][RemoteService(false)]
        public Task<QuestionWithDetailsDto> CreateAsync(QuestionCreateDto QuestionCreate)
        {
            return this.QuestionCrudAppService.CreateAsync(QuestionCreate);
        }

        [HttpPut]
        [Route("question/id")]
        [NonAction][RemoteService(false)]
        public Task<QuestionWithDetailsDto> UpdateAsync([FromQuery] QuestionPrimaryKeyDto QuestionPrimaryKey, QuestionUpdateDto QuestionUpdate)
        {
            return this.QuestionCrudAppService.UpdateAsync(QuestionPrimaryKey,QuestionUpdate);
        }

        [HttpDelete]
        [Route("question/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] QuestionPrimaryKeyDto QuestionPrimaryKey)
        {
            return this.QuestionCrudAppService.DeleteAsync(QuestionPrimaryKey);
        }
    }
}
