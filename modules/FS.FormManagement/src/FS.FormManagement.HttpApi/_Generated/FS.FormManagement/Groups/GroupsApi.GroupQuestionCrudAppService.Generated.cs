//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.FormManagement.Groups.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.FormManagement.Groups
{
    public partial class GroupsApi //: IGroupQuestionCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("group-question/id")]
        [NonAction][RemoteService(false)]
        public Task<GroupQuestionWithDetailsDto> GetAsync([FromQuery] GroupQuestionPrimaryKeyDto GroupQuestionPrimaryKey)
        {
            return this.GroupQuestionCrudAppService.GetAsync(GroupQuestionPrimaryKey);
        }

        [HttpGet]
        [Route("group-question")]
        [RemoteService(true)]
        public Task<PagedResultDto<GroupQuestionWithDetailsDto>> GetListAsync(GroupQuestionGetListDto GroupQuestionGetList)
        {
            return this.GroupQuestionCrudAppService.GetListAsync(GroupQuestionGetList);
        }

        [HttpPost]
        [Route("group-question")]
        [NonAction][RemoteService(false)]
        public Task<GroupQuestionWithDetailsDto> CreateAsync(GroupQuestionCreateDto GroupQuestionCreate)
        {
            return this.GroupQuestionCrudAppService.CreateAsync(GroupQuestionCreate);
        }

        [HttpPut]
        [Route("group-question/id")]
        [NonAction][RemoteService(false)]
        public Task<GroupQuestionWithDetailsDto> UpdateAsync([FromQuery] GroupQuestionPrimaryKeyDto GroupQuestionPrimaryKey, GroupQuestionUpdateDto GroupQuestionUpdate)
        {
            return this.GroupQuestionCrudAppService.UpdateAsync(GroupQuestionPrimaryKey,GroupQuestionUpdate);
        }

        [HttpDelete]
        [Route("group-question/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] GroupQuestionPrimaryKeyDto GroupQuestionPrimaryKey)
        {
            return this.GroupQuestionCrudAppService.DeleteAsync(GroupQuestionPrimaryKey);
        }
    }
}
