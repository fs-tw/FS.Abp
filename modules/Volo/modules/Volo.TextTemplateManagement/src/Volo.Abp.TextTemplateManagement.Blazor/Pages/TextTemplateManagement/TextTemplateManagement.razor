@page "/text-templates"
@attribute [Authorize(TextTemplateManagementPermissions.TextTemplates.Default)]
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.TextTemplateManagement.Authorization
@using Volo.Abp.TextTemplateManagement.TextTemplates
@inherits TextTemplateManagementComponentBase

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Menu:TextTemplates"]" BreadcrumbItems="@BreadcrumbItems">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Fields Horizontal="true">
            <Field ColumnSize="@ColumnSize.Is11" class="mb-0">
                <TextEdit Placeholder="@L["Search"]" TextChanged="@FilterChangedAsync" Text="@Filter" />
            </Field>
            <Field ColumnSize="@ColumnSize.Is1" class="mb-0">
                <Button Block="true"
                        Color="@Color.Primary"
                        Clicked="@GetEntitiesAsync">
                    <Icon Name="@IconName.Search" />
                </Button>
            </Field>
        </Fields>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="TemplateDefinitionDto"
          Data="@TemplateDefinitions"
          ReadData="@OnDataGridReadAsync"
          TotalItems="@TotalCount"
          ShowPager="true"
          PageSize="@PageSize">
    <DataGridColumns>
        <DataGridEntityActionsColumn TItem="TemplateDefinitionDto" Width="160px" @ref="@EntityActionsColumn">
            <DisplayTemplate>
                <EntityActions TItem="TemplateDefinitionDto" EntityActionsColumn="@EntityActionsColumn">
                    <EntityAction TItem="TemplateDefinitionDto"
                                  RequiredPolicy="@UpdatePolicyName"
                                  Clicked="() => NavigateToEdit(context)"
                                  Text="@L["EditContents"]">
                    </EntityAction>
                </EntityActions>
            </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="TemplateDefinitionDto" Field="@nameof(TemplateDefinitionDto.Name)" Caption="@L["Name"].Value">
            <DisplayTemplate>
                @(context.DisplayName)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="TemplateDefinitionDto" Field="@nameof(TemplateDefinitionDto.IsInlineLocalized)" Caption="@L["IsInlineLocalized"].Value">
            <DisplayTemplate>
                @if (context.IsInlineLocalized)
                {
                    <Icon class="text-success" Name="@IconName.Check" />
                }
                else
                {
                    <Icon class="text-danger" Name="@IconName.Times" />
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="TemplateDefinitionDto" Field="@nameof(TemplateDefinitionDto.IsLayout)" Caption="@L["IsLayout"].Value">
            <DisplayTemplate>
                @if (context.IsLayout)
                {
                    <Icon class="text-success" Name="@IconName.Check" />
                }
                else
                {
                    <Icon class="text-danger" Name="@IconName.Times" />
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="TemplateDefinitionDto" Field="@nameof(TemplateDefinitionDto.Layout)" Caption="@L["Layout"].Value">
            <DisplayTemplate>
                @(context.Layout)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="TemplateDefinitionDto" Field="@nameof(TemplateDefinitionDto.DefaultCultureName)" Caption="@L["DefaultCultureName"].Value">
            <DisplayTemplate>
                @(context.DefaultCultureName)
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>