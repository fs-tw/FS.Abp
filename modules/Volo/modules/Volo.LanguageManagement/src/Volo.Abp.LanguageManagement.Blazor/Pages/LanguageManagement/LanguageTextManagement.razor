@page "/language-management/texts"
@attribute [Authorize(LanguageManagementPermissions.LanguageTexts.Default)]
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.LanguageManagement.Localization
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.Extensions.Localization
@using Volo.Abp.LanguageManagement.Dto
@inherits LanguageManagementComponentBase

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["LanguageTexts"]" BreadcrumbItems="@BreadcrumbItems">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Fields Horizontal="true">
            <Field ColumnSize="@ColumnSize.Is3" class="mb-0">
                <FieldLabel>@L["BaseCultureName"]</FieldLabel>
                <Select TValue="string" SelectedValue="@SelectedBaseCultureName" SelectedValueChanged="@OnBaseCultureNameChangedAsync">
                    @foreach (var language in Languages)
                    {
                        <SelectItem Value="@language.CultureName">@language.DisplayName</SelectItem>
                    }
                </Select>
            </Field>
            <Field ColumnSize="@ColumnSize.Is3" class="mb-0">
                <FieldLabel>@L["TargetCultureName"]</FieldLabel>
                <Select TValue="string" SelectedValue="@SelectedTargetCultureName" SelectedValueChanged="@OnTargetCultureNameChangedAsync">
                    @foreach (var language in Languages)
                    {
                        <SelectItem Value="@language.CultureName">@language.DisplayName</SelectItem>
                    }
                </Select>
            </Field>
            <Field ColumnSize="@ColumnSize.Is3" class="mb-0">
                <FieldLabel>@L["ResourceName"]</FieldLabel>
                <Select TValue="string" SelectedValue="@SelectedResourceName" SelectedValueChanged="@OnSelectedResourceNameChangedAsync">
                    <SelectItem Value="@NullStringValue"></SelectItem>
                    @foreach (var resource in LanguageResources)
                    {
                        <SelectItem Value="@resource.Name">@resource.Name</SelectItem>
                    }
                </Select>
            </Field>
            <Field ColumnSize="@ColumnSize.Is3" class="mb-0">
                <FieldLabel>@L["TargetValue"]</FieldLabel>
                <Select TValue="bool" SelectedValue="@SelectedGetOnlyEmptyValue" SelectedValueChanged="@OnGetOnlyEmptyValuesChangedAsync">
                    <SelectItem Value="false">@L["All"]</SelectItem>
                    <SelectItem Value="true">@L["OnlyEmptyValues"]</SelectItem>
                </Select>
            </Field>
        </Fields>
        <Fields Horizontal="true">
            <Field ColumnSize="@ColumnSize.Is12" class="mb-0">
                <FieldLabel>&nbsp;</FieldLabel>
                <FieldBody>
                    <Addons>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit Placeholder="@L["Filter"]" TextChanged="@OnFilterChangedAsync" Text="@Filter" />
                        </Addon>
                        <Addon AddonType="AddonType.End">
                            <Button Block="true"
                                    Color="@Color.Primary"
                                    Clicked="@GetEntitiesAsync">
                                @L["Refresh"]
                            </Button>
                        </Addon>
                    </Addons>
                </FieldBody>
            </Field>
        </Fields>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="LanguageTextDto"
          Data="Entities"
          ReadData="OnDataGridReadAsync"
          TotalItems="TotalCount"
          ShowPager="true"
          PageSize="PageSize">
    <DataGridColumns>
        <DataGridEntityActionsColumn TItem="LanguageTextDto" @ref="@EntityActionsColumn">
            <DisplayTemplate>
                <EntityActions TItem="LanguageTextDto" EntityActionsColumn="@EntityActionsColumn">
                    <EntityAction TItem="LanguageTextDto"
                                  RequiredPolicy="@UpdatePolicyName"
                                  Clicked="() => OpenEditModalAsync(context)"
                                  Text="@L["Edit"]" />
                </EntityActions>
            </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="LanguageTextDto" Field="@nameof(LanguageTextDto.Name)" Sortable="true" Caption="@L["Key"].Value">
            <DisplayTemplate>
                @(context.Name)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageTextDto" Field="@nameof(LanguageTextDto.CultureName)" Sortable="true" Caption="@L["BaseValue"].Value">
            <DisplayTemplate>
                @(context.BaseValue)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageTextDto" Field="@nameof(LanguageTextDto.Value)" Sortable="true" Caption="@L["Value"].Value">
            <DisplayTemplate>
                @(context.Value)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageTextDto" Field="@nameof(LanguageTextDto.ResourceName)" Sortable="true" Caption="@L["ResourceName"].Value">
            <DisplayTemplate>
                @(context.ResourceName)
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@* ************************* EDIT MODAL ************************* *@
@if (HasEditPermission)
{
    <Modal @ref="EditModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@L["Edit"]</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync" />
            </ModalHeader>
            <ModalBody>
                <EditForm Model="@EditingEntity" OnValidSubmit="UpdateEntityAsync">
                    <div class="form-group">
                        <label>@L["Key"]</label>
                        <div>
                            <strong>@EditingEntity.Name</strong>
                        </div>
                    </div>
                    <Field>
                        <FieldLabel>@L["BaseValue"]</FieldLabel>
                        <FieldBody>
                            <MemoEdit @bind-Text="@EditingEntity.BaseValue" Rows="4" ReadOnly="true" />
                        </FieldBody>
                    </Field>
                    <Field>
                        <FieldLabel>@L["TargetValue"]</FieldLabel>
                        <FieldBody>
                            <MemoEdit @bind-Text="@EditingEntity.Value" Rows="4" />
                        </FieldBody>
                    </Field>
                </EditForm>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" Outline="true" Clicked="@CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary" Outline="true" Clicked="@RestoreToDefaultAsync">
                    <Icon Name="@IconName.Check" />
                    @L["RestoreToDefault"]
                </Button>
                <Button Color="Color.Primary" Clicked="@UpdateEntityAsync">
                    <Icon Name="@IconName.Check" />
                    @L["Save"]
                </Button>
                <Button Color="Color.Success" Clicked="@UpdateEntityAndSetNextAsync">
                    <Icon Name="@IconName.Check" />
                    @L["SaveAndNext"]
                    <Icon Name="@IconName.ArrowRight" />
                </Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}