{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/cms/admin/src/lib/post/providers/post-state.service.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/post/providers/page.service.ts","../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts","../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts","../../../../libs/cms/admin/src/lib/post/post-routing.module.ts","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.ts","../../../../libs/cms/admin/src/lib/post/post.module.ts","../../../../libs/cms/admin/src/lib/tag-management/providers/page.service.ts","../../../../libs/cms/admin/src/lib/tag-management/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/tag-detail/tag-detail.component.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management-routing.module.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management.module.ts","../../../../libs/cms/admin/src/lib/cms-admin-routing.module.ts","../../../../libs/cms/admin/src/lib/cms-admin.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","PostStateService","this","store","InternalStore","prototype","getBlog","sliceState","state","Blog","setBlog","blog","patch","Injectable","args","providedIn","LayoutComponent","ngOnInit","Component","selector","template","PageService","injector","blogService","get","Fs","Cms","Blogs","BlogsApiService","postService","Posts","PostsApiService","directoriesApiService","Abp","File","Directories","DirectoriesApiService","fileDescriptorService","Volo","FileManagement","Files","FileDescriptorService","getBlogs","input","getListByBlogGetList","getBlogById","id","getByBlogPrimaryKey","createBlog","createByBlogCreate","updateBlog","updateByBlogPrimaryKeyAndBlogUpdate","deleteBlog","deleteByBlogPrimaryKey","findByProviderByKeyAndGroup","key","group","deleteFile","deleteById","getFileDescriptor","getById","getPostsByBlogId","getPostsByBlogIdByInput","getPostById","getByPostPrimaryKey","createPost","createByPostCreate","updatePost","updateByPostPrimaryKeyAndPostUpdate","deletePost","deleteByPostPrimaryKey","Injector","MainComponent","extensionsService","router","toasterService","confirmationService","pageService","list","postStateService","postParams","skipCount","maxResultCount","keyword","blogId","posts","totalCount","_this","Actions$","subscribe","x","name","gotoDetail","record","deleteItem","blog$","onBlogChange","sub","blogName","displayName","hookToQuery","navigate","queryParams","hookToQueryScribe","unsubscribe","query","res","items","item","warn","cancelText","yesText","status","Confirmation","Status","confirm","files","attachmentFileInfos","map","fileId","images","postImages","imageId","deleteFileActions","concat","forkJoin","success","ngOnDestroy","providers","ListService","provide","EXTENSIONS_IDENTIFIER","useValue","ExtensionsService","Router","ToasterService","ConfirmationService","FileInfo","fileName","fileUrl","FileData","file","isUpload","UploadFileComponent","existFiles","fileList","beforeUpload","findIndex","delete","url","filter","getNewUploadFiles","Input","DetailComponent","fileService","activatedRoute","dateRange","Date","defaultImages","defaultFiles","blogs","isLoading","coverImage","contentFileName","blobToFile","theBlob","type","postId","snapshot","paramMap","getRand","directory","getPost","data","title","subtitle","content","disable","startTime","endTime","displayMode","sequence","st","ed","y","ImageFile","getFileUrl","coverImageIndex","isCover","getFileBlobById","blob","Blob","reader","FileReader","onload","result","toString","readAsText","sorting","queryParamMap","defaultImagePicker","Math","floor","random","save","_.cloneDeep","toLocalISOString","_a","contentAction$","of","DisplayMode","內文","useContentFileName","dns.format","uploadFile","pipe","imagesAction","uploadImage$","filesAction","uploadFiles$","savePost","domainItem","newUploadFiles","defaultUploadFile","existFileNames","some","length","fileActions","savefile","newUploadImages","FileService","ActivatedRoute","ViewChild","RouteConfig","resolve","routes","path","component","children","NgModule","imports","RouterModule","forChild","exports","ListComponent","datas","count","isVisible","selected","defaultSelectId","edit","add","reload","select","find","showDetail","handleCancel","form","valid","deleteImageNames","getDeleteFileNames","uploadImageInfos","getUploadFiles","iconUrl","saveBlog","action","assign","no","openModal","buildForm","FormPropData","generateFormFromProps","TagComponent","NzModules","NzGridModule","NzInputModule","NzTableModule","NzDropDownModule","NzButtonModule","NzIconModule","NzModalModule","NzRadioModule","NzUploadModule","NzSpinModule","NzCardModule","NzSelectModule","NzDatePickerModule","NzTabsModule","SEModule","PostModule","ngModule","forLazy","LazyModuleFactory","forEarly","declarations","arguments","__spread","SharedModule","CoreModule","ReactiveFormsModule","FormsModule","CommonModule","PostRoutingModule","QuillModule","forRoot","allTagData","Subject","tagData","allTagData$","asObservable","tagData$","getTageListFromApi","getTagOneFromApi","groupId","confirmation","tagGroupList","subscription","deleteGroup","TagDetailComponent","location","isCreate","deleteTargetTagIds","inputList","addOption","removeOption","index","splice","removeOldOption","update","updateTags","deleteTags","createTags","clear","Location","DetailRouteConfig","route","tagId","params","TagManagementModule","NzTagModule","TagManagementRoutingModule","ɵ1","pathMatch","redirectTo","canActivate","AuthGuard","PermissionGuard","loadChildren","ɵ0$2","CmsAdminModule","CmsAdminRoutingModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nexport namespace Post\r\n{\r\n    export interface State\r\n    {\r\n        Blog: Fs.Cms.Blogs.Dtos.BlogDto;\r\n    }\r\n}\r\n  \r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostStateService {\r\n    private store = new InternalStore({} as Post.State);\r\n    getBlog(): Observable<Fs.Cms.Blogs.Dtos.BlogDto> {\r\n        return this.store.sliceState(state => state.Blog);\r\n    }\r\n    setBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n        this.store.patch({ Blog: blog })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injector, Injectable, Type } from '@angular/core';\r\nimport { Fs, Volo } from '@fs-tw/cms/proxy';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class PageService {\r\n  private blogService: Fs.Cms.Blogs.BlogsApiService;\r\n  private postService: Fs.Cms.Posts.PostsApiService;\r\n  private directoriesApiService: Fs.Abp.File.Directories.DirectoriesApiService;\r\n  private fileDescriptorService: Volo.FileManagement.Files.FileDescriptorService;\r\n  \r\n  constructor(private injector: Injector) {\r\n    this.blogService = injector.get(Fs.Cms.Blogs.BlogsApiService);\r\n    this.postService = injector.get(Fs.Cms.Posts.PostsApiService);\r\n    this.directoriesApiService = injector.get(\r\n      Fs.Abp.File.Directories.DirectoriesApiService\r\n    );\r\n    this.fileDescriptorService = injector.get(\r\n      Volo.FileManagement.Files.FileDescriptorService\r\n    );\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({ id: id });\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deleteBlog(id:string){\r\n    return this.blogService.deleteByBlogPrimaryKey({id});\r\n  }\r\n  //#endregion\r\n\r\n  //#region File\r\n  findByProviderByKeyAndGroup(key: string, group?: string) {\r\n    return this.directoriesApiService.findByProviderByKeyAndGroup(key, group);\r\n  }\r\n\r\n  deleteFile(id: string) {\r\n    return this.fileDescriptorService.deleteById(id);\r\n  }\r\n\r\n  getFileDescriptor(id:string){\r\n    return this.fileDescriptorService.getById(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n\r\n  getPostById(id: string) {\r\n    return this.postService.getByPostPrimaryKey({ id: id });\r\n  }\r\n\r\n  createPost(input: Fs.Cms.Posts.Dtos.PostCreateDto) {\r\n    return this.postService.createByPostCreate(input);\r\n  }\r\n\r\n  updatePost(id: string, input: Fs.Cms.Posts.Dtos.PostUpdateDto) {\r\n    return this.postService.updateByPostPrimaryKeyAndPostUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.postService.deleteByPostPrimaryKey({ id });\r\n  }\r\n  //#endregion\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n\r\n@Component({\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Post,\r\n    },\r\n  ],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  sub: Subscription;\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n  hookToQueryScribe: Subscription;\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",  \r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n\r\n  constructor(\r\n    private extensionsService: ExtensionsService,\r\n    private router: Router,\r\n    private toasterService: ToasterService,\r\n    private confirmationService: ConfirmationService,\r\n    private pageService: PageService,\r\n    public readonly list: ListService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.extensionsService.Actions$[eCmsRouteNames.Post].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.gotoDetail(x.record.id)\r\n            break;\r\n          case 'Delete':\r\n            this.deleteItem(x.record)\r\n            break;\r\n        }\r\n      });\r\n\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.sub = this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"全部\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.hookToQuery();\r\n    })\r\n  }\r\n\r\n  gotoDetail(id?: string) {\r\n    if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n    else this.router.navigate([\"/cms/post/detail\"], {\r\n      queryParams: {\r\n        blogId: this.postParams.blogId\r\n      }\r\n    });\r\n  }\r\n\r\n  hookToQuery() {\r\n\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    const query = (query) => {\r\n      query.keyword = this.postParams.keyword;\r\n      query.blogId = this.postParams.blogId;\r\n      return this.pageService.getPostsByBlogId(query)\r\n    };\r\n\r\n    this.hookToQueryScribe = this.list.hookToQuery(query).subscribe((res) => {\r\n      this.posts = res.items;\r\n      this.totalCount = res.totalCount;\r\n    });\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          let files = item.attachmentFileInfos.map(x => x.fileId)\r\n          let images = item.postImages.map(x => x.imageId);\r\n          let deleteFileActions = files.concat(images).map(x => this.pageService.deleteFile(x));\r\n          forkJoin(deleteFileActions).subscribe();\r\n\r\n          this.pageService.deletePost(item.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n\r\nexport class FileInfo {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class FileData {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  @Input()\r\n  existFiles: FileInfo[] = [];\r\n\r\n  fileList: NzUploadFile[] = [];\r\n\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let exist = this.existFiles.findIndex(x => x.fileName == file.name) > -1 ||\r\n      this.fileList.findIndex(x => x.name == file.name) > -1;\r\n    if (exist) return false;\r\n    this.fileList = this.fileList.concat(file);\r\n    return false;\r\n  };\r\n\r\n  delete(url) {\r\n    this.confirmationService\r\n      .warn('確認刪除嗎？', '系統訊息')\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.existFiles = this.existFiles.filter(x => x != url);\r\n        }\r\n      });\r\n  }\r\n\r\n  getNewUploadFiles(): FileData[] {\r\n    let updateFiles: FileData[] = this.fileList.map((x: any) => new FileData(x.name, '', x));\r\n    return updateFiles;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport * as dns from 'date-fns'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '@fs-tw/cms/admin/shared';\r\nimport { FileService, FileDescriptorDto } from '@fs-tw/cms/admin/shared';\r\nimport { map } from 'rxjs/operators';\r\nimport { FileInfo } from '../upload-file/upload-file.component';\r\n\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  @ViewChild(\"DefaultUploadFile\") defaultUploadFile: UploadFileComponent;\r\n  postId: string;\r\n  data: Fs.Cms.Posts.Dtos.PostDto;\r\n  dateRange: Date[] = [new Date(), new Date()];\r\n  defaultImages: ImageFile[] = [];\r\n  defaultFiles: FileInfo[] = [];\r\n  blogs: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n\r\n  isLoading: boolean = false;\r\n  directory\r\n  coverImage: string = '';\r\n  contentFileName = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fileService: FileService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pageService: PageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\r\n    this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Posts\", this.postId ? this.postId : this.getRand()).subscribe(x => {\r\n      this.directory = x;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.getPost();\r\n    this.getBlogs();\r\n  }\r\n\r\n  getPost() {\r\n    this.data = {\r\n      blogId: null,\r\n      title: '',\r\n      subtitle: '',\r\n      url: '',\r\n      content: '',\r\n      disable: false,\r\n      startTime: '',\r\n      endTime: '',\r\n      displayMode: 0,\r\n      sequence: 0,\r\n      attachmentFileInfos: [],\r\n      postImages: []\r\n    } as Fs.Cms.Posts.Dtos.PostDto;\r\n    this.contentFileName = \"\";\r\n    this.dateRange = [new Date(), new Date()];\r\n\r\n    this.defaultImages = [];\r\n    this.defaultFiles = [];\r\n    this.coverImage = ''\r\n\r\n    if (this.postId) {\r\n      this.pageService.getPostById(this.postId).subscribe((x) => {\r\n        this.data = x;\r\n        let st = x.startTime ? new Date(x.startTime) : new Date();\r\n        let ed = x.endTime ? new Date(x.endTime) : new Date();\r\n        this.dateRange = [st, ed];\r\n\r\n        this.defaultImages = x.postImages.map(y => new ImageFile(y.name, y.imageId));\r\n        this.defaultFiles = x.attachmentFileInfos.map(y => new FileInfo(y.name, this.fileService.getFileUrl(y.fileId)))\r\n        let coverImageIndex = x.postImages.findIndex(y => y.isCover);\r\n        if (coverImageIndex > -1) this.coverImage = x.postImages[coverImageIndex].imageId;\r\n\r\n        if (x.content) {\r\n          this.pageService.getFileDescriptor(x.content).subscribe(x => {\r\n            this.contentFileName = x.name;\r\n          })\r\n\r\n          this.fileService.getFileBlobById(x.content).subscribe(data => {\r\n            const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n            let reader = new FileReader();\r\n            reader.onload = () => {\r\n              this.data.content = reader.result.toString();\r\n            }\r\n            reader.readAsText(blob);\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  getBlogs() {\r\n    let input = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogs = x.items;\r\n      if (!this.postId) this.data.blogId = this.activatedRoute.snapshot.queryParamMap.get('blogId');\r\n    })\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    this.confirmationService.warn(`確定刪除 ${fileName} 嗎？`, \"系統訊息\")\r\n      .subscribe((result) => {\r\n        if (result != Confirmation.Status.confirm) return;\r\n\r\n        this.defaultImagePicker.deleteFile(fileName);\r\n      })\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  save() {\r\n    // TODO: 刪除檔案、加標籤\r\n    // let deleteImages = this.defaultImagePicker.getDeleteFileNames();\r\n    // let deleteTargets = item.postImages.filter(x => deleteImages.some(y => y == x.name));\r\n    // let deleteActions = deleteTargets.map(x=>{\r\n    //   return this.pageService.deleteFile(x.imageId);\r\n    // })\r\n    // forkJoin(deleteActions).subscribe(x=>{})\r\n\r\n    let item: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(this.data);\r\n    item.startTime = this.dateRange[0].toLocalISOString();\r\n    item.endTime = this.dateRange[1]?.toLocalISOString();\r\n\r\n\r\n    let contentAction$ = of(\"\");\r\n    if (item.displayMode == Fs.Cms.Posts.DisplayMode.內文) {\r\n      // let now = new Date();\r\n      const blob = new Blob([item.content], { type: \"text/plain;charset=utf-8\" });\r\n      let useContentFileName = dns.format(new Date(), 'yyyyMMddHHmmss') + '-' + this.getRand() + \".txt\"//now.toLocaleDateString() + \"_\" + now.toLocaleTimeString() + \"_\" + (Math.floor(Math.random() * 100) + 1) + \".txt\";\r\n      if (this.contentFileName) useContentFileName = this.contentFileName;\r\n      let file = this.blobToFile(blob, useContentFileName);\r\n      contentAction$ = this.fileService.uploadFile(file, this.directory.id).pipe(map(x => x.id));\r\n    }\r\n\r\n\r\n    let imagesAction = this.uploadImage$(item);\r\n    let filesAction = this.uploadFiles$(item);\r\n    forkJoin([imagesAction, filesAction, contentAction$]).subscribe(x => {\r\n      item.postImages = x[0];\r\n      item.attachmentFileInfos = x[1];\r\n      item.content = x[2];\r\n      this.savePost(item);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  private blobToFile = (theBlob: Blob, fileName: string): File => {\r\n    return new File([theBlob], fileName, { type: \"text/plain;charset=utf-8\" })\r\n  }\r\n\r\n\r\n  uploadFiles$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.AttachmentFileInfoDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadFiles = this.defaultUploadFile.getNewUploadFiles();\r\n\r\n    let existFileNames = this.defaultUploadFile.existFiles.map(x => x.fileName);\r\n    domainItem.attachmentFileInfos = domainItem.attachmentFileInfos.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadFiles.length == 0) {\r\n      return of(domainItem.attachmentFileInfos);\r\n    }\r\n\r\n    let fileActions = newUploadFiles.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.AttachmentFileInfoDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          fileId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.attachmentFileInfos)\r\n    }))\r\n  }\r\n\r\n  uploadImage$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.PostImageDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadImages = this.defaultImagePicker.getNewUploadFiles();\r\n\r\n\r\n    let existFileNames = this.defaultImagePicker.existFiles.map(x => x.fileName);\r\n    domainItem.postImages = domainItem.postImages.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadImages.length == 0) {\r\n      return of(domainItem.postImages);\r\n    }\r\n\r\n\r\n    let fileActions = newUploadImages.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.PostImageDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          isCover: (this.coverImage == y.name),\r\n          imageId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.postImages)\r\n    }))\r\n\r\n  }\r\n\r\n  savePost(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    let action: Observable<any>;\r\n    if (!this.postId) {\r\n      action = this.pageService.createPost(item);\r\n    } else {\r\n      action = this.pageService.updatePost(this.postId, item);\r\n    }\r\n\r\n    action.subscribe((x) => {\r\n      this.router.navigate([\"cms/post\"]);\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve } from '@angular/router';\r\n\r\nimport { PostStateService } from './providers/post-state.service';\r\n\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DetailComponent } from './components/detail/detail.component';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private postStateService: PostStateService) { }\r\n\r\n  resolve() {\r\n    return this.postStateService.setBlog(null);\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    resolve: { 'RouteConfig': RouteConfig },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent\r\n      },\r\n      {\r\n        path:'detail',\r\n        component:DetailComponent,\r\n      },\r\n      {\r\n        path:'detail/:postId',\r\n        component:DetailComponent,\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule], \r\n  providers:[\r\n    RouteConfig\r\n  ]\r\n})\r\nexport class PostRoutingModule { }\r\n","import { Component, Injector, OnInit, ViewChild,OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subscriber, Subscription } from 'rxjs';\r\n\r\nimport { ListService } from '@abp/ng.core';\r\nimport {EXTENSIONS_IDENTIFIER,FormPropData,generateFormFromProps} from '@abp/ng.theme.shared/extensions';\r\nimport {Confirmation,ConfirmationService,ToasterService,} from '@abp/ng.theme.shared';\r\n\r\nimport { FileService } from '@fs-tw/cms/admin/shared';\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { PostStateService } from '../../../providers/post-state.service';\r\n\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { ImageFile, ImagePickerComponent } from '@fs-tw/cms/admin/shared';\r\n\r\n\r\n\r\n@Component({\r\n  selector:'cms-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.less'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Blog,\r\n    },\r\n  ],\r\n})\r\nexport class ListComponent implements OnInit,OnDestroy {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  datas: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n  count = 0;\r\n  defaultImages: ImageFile[] = [];\r\n  isVisible = false;\r\n  form: FormGroup;\r\n  selected: Fs.Cms.Blogs.Dtos.BlogDto = {} as Fs.Cms.Blogs.Dtos.BlogDto\r\n  directory;\r\n  defaultSelectId = null;\r\n  sub: Subscription;\r\n  constructor(\r\n    private router: Router,\r\n    private extensionsService: ExtensionsService,\r\n    private pageService: PageService,\r\n    protected injector: Injector,\r\n    public readonly list: ListService,\r\n    private fileService: FileService,\r\n    private toasterService: ToasterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private confirmationService: ConfirmationService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n    \r\n\r\n    this.activatedRoute.queryParamMap.subscribe(x => {\r\n      this.defaultSelectId = x.get(\"blogId\");\r\n\r\n      this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Blogs\",this.defaultSelectId?this.defaultSelectId:this.getRand()).subscribe(x => {\r\n        this.directory = x;\r\n      })\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    if(this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.extensionsService.Actions$[eCmsRouteNames.Blog].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.edit(x.record.id);\r\n            break;\r\n          case 'Delete':\r\n            this.deleteBlog(x.record)\r\n            break;\r\n          case 'Add':\r\n            this.add();\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n    let input: Fs.Cms.Blogs.Dtos.BlogGetListDto = {\r\n      skipCount: 0,\r\n      maxResultCount: 10,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    const customerStreamCreator = (query) => {\r\n      return this.pageService.getBlogs(input)\r\n    };\r\n\r\n    this.list.hookToQuery(customerStreamCreator).subscribe((res) => {\r\n      this.datas = res.items;\r\n      this.count = res.totalCount;\r\n      if (this.defaultSelectId) {\r\n        let select = this.datas.find(x => x.id == this.defaultSelectId);\r\n        this.showDetail(select)\r\n      }\r\n    });\r\n  }\r\n\r\n  showDetail(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    if (blog == null) {\r\n      this.router.navigate(['./cms/post'])\r\n      this.postStateService.setBlog(null);\r\n      return;\r\n    }\r\n    this.router.navigate(['./cms/post'], { queryParams: { 'blogId': blog.id } })\r\n    this.postStateService.setBlog(blog);\r\n  }\r\n\r\n  deleteBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？(此Blog下的文章將移至不分類)', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.pageService.deleteBlog(blog.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n            this.router.navigate([\"./cms/post\"])\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();    \r\n    if(deleteImageNames.length>0){\r\n      this.pageService.deleteFile(deleteImageNames[0]).subscribe(()=>{\r\n        this.uploadFile();\r\n      });\r\n    } else this.uploadFile();\r\n    \r\n  }\r\n\r\n\r\n  uploadFile(){\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let fileId = \"\";\r\n    if ((uploadImageInfos.length > 0)) {\r\n      if (this.selected.iconUrl == uploadImageInfos[0].fileName) {\r\n        this.saveBlog(this.selected.iconUrl);\r\n        return;\r\n      }\r\n      this.fileService.uploadFile(uploadImageInfos[0].file, this.directory.id).subscribe(x => {\r\n        fileId = x.id;\r\n        this.saveBlog(fileId);\r\n      })\r\n    } else this.saveBlog(\"\");\r\n  }\r\n\r\n  saveBlog(fileId?) {\r\n    let input = { ...this.selected, ...this.form.value, id: this.selected.id };\r\n    input.iconUrl = fileId;\r\n    let action: Observable<any>;\r\n    if (input.id) action = this.pageService.updateBlog(input.id, input);\r\n    else {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    }\r\n    action.subscribe((x) => {\r\n      this.toasterService.success('修改成功！');\r\n      this.isVisible = false;\r\n      this.list.get();\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as any;\r\n    this.defaultImages = []\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.pageService.getBlogById(id).subscribe(x => {\r\n      this.selected = x;\r\n      this.defaultImages = []\r\n      if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, x.iconUrl))\r\n      this.openModal();\r\n    })\r\n  }\r\n\r\n  buildForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.form = null;\r\n    this.form = generateFormFromProps(data);\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isVisible = true;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { group } from '@angular/animations';\r\n// import { PostTagMapDto, TagGroupDto } from '@fs-tw/cms/proxy';\r\n// import * as _ from 'lodash';\r\n// import { Observable } from 'rxjs';\r\n// import { take } from 'rxjs/operators';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // postTagsDict: { [tagCodeId: string]: PostTagMapDto; } = {};\r\n\r\n  // @Input() postId: string;\r\n\r\n  // @Input()\r\n  // set postTags(val: PostTagMapDto[]) {    \r\n  //   for (let item of val) {\r\n  //     this.postTagsDict[item.tagCodeId] = item;\r\n  //   }\r\n\r\n  //   this.existTagCodeIds = val.map(x => x.tagCodeId);\r\n\r\n  //   this.pageService.getAllTags().pipe(take(1)).subscribe(x => {\r\n  //     this.tagGroups = x;\r\n  //     for (let group of this.tagGroups) {\r\n  //       for (let tag of group.tags) {\r\n  //         if (this.existTagCodeIds.includes(tag.id)) {\r\n  //           tag.check = true;\r\n  //           continue;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // existTagCodeIds: string[] = [];\r\n  // tagGroups: any[] = []\r\n  // constructor(\r\n  //   private pageService: PageService,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // checkParent(group: any) {\r\n  //   group.check = !group.check;\r\n  //   for (let item of group.tags) {\r\n  //     item.check = group.check;\r\n  //   }\r\n\r\n  // }\r\n  // checkChild(tag: any) {\r\n  //   tag.check = !tag.check;\r\n  // }\r\n\r\n\r\n  // save(postId?: string): Observable<any>[] {\r\n  //   if(!this.postId) this.postId = postId;\r\n  //   let tags: any[] = _.flatMap(this.tagGroups, \"tags\").filter(x => x.check);\r\n  //   let deleteTargetIds: string[] = _.xorWith(this.existTagCodeIds, tags.map(x => x.id));\r\n  //   let action: Observable<any>[] = [];\r\n  //   for (let tagCodeId of deleteTargetIds) {\r\n  //     if (this.postTagsDict[tagCodeId]) {\r\n  //       action.push(this.pageService.deletePostTagMap(this.postTagsDict[tagCodeId].id));\r\n  //     } else {\r\n  //       action.push(this.pageService.createPostTagMap(this.postId, tagCodeId));\r\n  //     }\r\n  //   }\r\n  //   return action;\r\n  // }\r\n}\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { SEModule } from '@delon/abc/se';\r\n\r\nimport { PostRoutingModule } from './post-routing.module';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SharedModule } from '@fs-tw/cms/admin/shared';\r\n\r\nimport { DetailComponent } from './components/detail/detail.component';\r\nimport { ListComponent } from './components/main/list/list.component';\r\nimport { PageService } from './providers/page.service';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\nconst NzModules = [\r\n  NzGridModule,\r\n  NzInputModule,\r\n  NzTableModule,\r\n  NzDropDownModule,\r\n  NzButtonModule,\r\n  NzIconModule,\r\n  NzModalModule,\r\n  NzRadioModule,\r\n  NzUploadModule,\r\n  NzSpinModule,\r\n  NzCardModule,\r\n  NzSelectModule,\r\n  NzDatePickerModule,\r\n  NzTabsModule,\r\n  SEModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    MainComponent,\r\n    DetailComponent,\r\n    ListComponent,\r\n    UploadFileComponent,\r\n    TagComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    PostRoutingModule,\r\n    ...NzModules,\r\n    // NgxsModule.forFeature([PostState]),\r\n    QuillModule.forRoot()\r\n\r\n  ],\r\n  providers: [\r\n    // PostsStateService,\r\n    PageService\r\n  ]\r\n})\r\nexport class PostModule {\r\n  static forChild(): ModuleWithProviders<PostModule> {\r\n    return {\r\n      ngModule: PostModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { take, tap } from 'rxjs/operators';\r\n@Injectable()\r\nexport class PageService {\r\n\r\n  private allTagData = new Subject<any[]>();\r\n  private tagData = new Subject<any>();\r\n\r\n  public readonly allTagData$ = this.allTagData.asObservable();\r\n  public readonly tagData$ = this.tagData.asObservable();\r\n\r\n  getTageListFromApi() {\r\n    // this.tagsApiService.tagGroupGetList().pipe(tap(x => this.allTagData.next(x))).subscribe()\r\n  }\r\n\r\n  getTagOneFromApi(groupId: string) {\r\n    if (!groupId) {\r\n      this.tagData.next(null);\r\n      return;\r\n    };\r\n    // this.tagsApiService.tagGroupGetByIdById(groupId).pipe(tap(x => this.tagData.next(x))).subscribe();\r\n  }\r\n\r\n\r\n  constructor(\r\n    //private tagsApiService: Fs.Cms.Tags.TagsApiService\r\n  ) { }\r\n\r\n\r\n  /**call api */\r\n\r\n  // //create\r\n  // createGroup(tagGroup: TagGroupForCreateDto) {\r\n  //   return this.tagsApiService.tagGroupCreateByInput(tagGroup);\r\n  // }\r\n\r\n  // createGroupAndTags(id: string, tags: TagForCreateDto[]) {\r\n  //   return this.tagsApiService.tagGroupAddTagsByIdAndTags(id, tags);\r\n  // }\r\n\r\n  // // update\r\n  // updateGroup(id: string, newTagGroupName: string) {\r\n  //   return this.tagsApiService.tagGroupUpdateByIdAndInput(id, { tagGroupName: newTagGroupName });\r\n  // }\r\n\r\n  // updateTag(id: string, newtagName: string) {\r\n  //   return this.tagsApiService.putTagByIdAndInput(id, { name: newtagName });\r\n  // }\r\n\r\n  // // delate\r\n  // deleteGroup(groupId: string) {\r\n  //   return this.tagsApiService.tagGroupDeleteById(groupId)\r\n  // }\r\n\r\n  // delteTag(tagId: string) {\r\n  //   return this.tagsApiService.tagDeleteById(tagId);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { PageService } from '../../providers/page.service';\r\nimport {Fs } from '@fs-tw/cms/proxy';\r\nimport { Subscription } from 'rxjs';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n@Component({\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  tagGroupList: Fs.Cms.Tags.Dtos.TagDto[] = [];\r\n  subscription: Subscription;\r\n  constructor(private PageService: PageService,\r\n    private confirmation: ConfirmationService,) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.PageService.allTagData$.subscribe(result => {\r\n      this.tagGroupList = result;\r\n    })\r\n  }\r\n\r\n  deleteGroup(id: string) {\r\n    // this.confirmation\r\n    //   .warn(`確認要刪除嗎？`, '系統訊息')\r\n    //   .pipe(\r\n    //     filter(res => res === Confirmation.Status.confirm),\r\n    //     switchMap(() => this.PageService.deleteGroup(id)),\r\n    //     take(1)\r\n    //   )\r\n    //   .subscribe(() => {\r\n    //     this.PageService.getTageListFromApi();\r\n    //   });\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { Location } from '@angular/common'\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { tap } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'fs-tag-detail',\r\n  templateUrl: './tag-detail.component.html',\r\n  styleUrls: ['./tag-detail.component.less'],\r\n})\r\nexport class TagDetailComponent implements OnInit {\r\n\r\n  @Input() isCreate: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  deleteTargetTagIds: string[] = []\r\n\r\n  data: Fs.Cms.Tags.Dtos.TagDto = {\r\n   \r\n   \r\n  } as any;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private location: Location,\r\n    private toasterService: ToasterService,\r\n  ) { }\r\n\r\n\r\n  inputList:  Fs.Cms.Tags.Dtos.TagCreateDto[] = [\r\n    // { name: '' }\r\n  ];\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.pageService.tagData$.subscribe(x => {\r\n      this.data = x;\r\n    })\r\n  }\r\n\r\n\r\n  addOption() {\r\n    this.inputList.push();\r\n  }\r\n\r\n  removeOption(index: number) {\r\n    this.inputList.splice(index, 1);\r\n  }\r\n\r\n  removeOldOption(id: string) {\r\n    // this.data.tags = this.data.tags.filter(x => x.id != id);\r\n    this.deleteTargetTagIds.push(id);\r\n  }\r\n\r\n  save() {\r\n    // if (this.inputList.filter(x => x.name == '').length > 0 && this.data.tagGroupName != '') {\r\n    //   this.toasterService.error(\"不能有空值！\")\r\n    //   return;\r\n    // }\r\n    // if (this.isCreate) this.create()\r\n    // else this.update();\r\n  }\r\n\r\n  update() {\r\n    // this.pageService.updateGroup(this.data.id, this.data.tagGroupName).subscribe(x => {\r\n    //   let createTarget = this.pageService.createGroupAndTags(this.data.id, this.inputList);\r\n    //   let target = this.updateTags().concat(this.deleteTags());\r\n    //   target.push(createTarget)\r\n    //   forkJoin(target).subscribe(()=>{\r\n    //     this.location.back();\r\n    //     this.toasterService.success(\"修改成功！\")\r\n    //   })\r\n      \r\n    // })\r\n  }\r\n\r\n\r\n  updateTags() {\r\n    // let obsList = this.data.tags.map(x => {\r\n    //   return this.pageService.updateTag(x.id, x.name)\r\n    // });\r\n    // return obsList\r\n    // forkJoin(obsList).subscribe();\r\n  }\r\n\r\n  deleteTags() {\r\n    // let obsList = this.deleteTargetTagIds.map(x => {\r\n    //   return this.pageService.delteTag(x);\r\n    // })\r\n    // return obsList;\r\n    // forkJoin(obsList).subscribe()\r\n  }\r\n\r\n  create() {\r\n    // this.pageService.createGroup({\r\n    //   tagGroupName: this.data.tagGroupName\r\n    // }).pipe(tap(x => this.createTags(x.id))).subscribe()\r\n  }\r\n\r\n  createTags(groupId: string) {\r\n    // this.pageService.createGroupAndTags(groupId, this.inputList).subscribe(() => {\r\n    //   this.pageService.getTageListFromApi();\r\n    //   this.toasterService.success(\"新增成功！\");\r\n    //   this.clear();\r\n    // })\r\n  }\r\n\r\n  clear() {\r\n    // this.inputList = [\r\n    //   { name: '' }\r\n    // ];\r\n    // this.deleteTargetTagIds = [];\r\n    // this.data = {\r\n    //   id: '',\r\n    //   tagGroupName: '',\r\n    //   tags: [\r\n    //     {\r\n    //       id: '',\r\n    //       name: ''\r\n    //     }\r\n    //   ]\r\n    // };\r\n  }\r\n}\r\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { PageService } from './providers/page.service';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve() {\r\n    this.pageService.getTageListFromApi();\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DetailRouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let tagId = route.params.tagId;\r\n    if (tagId) this.pageService.getTagOneFromApi(tagId);\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent,\r\n        resolve: { RouteConfig: RouteConfig },\r\n      },\r\n      {\r\n        path: ':tagId',\r\n        component: TagDetailComponent,\r\n        resolve: { DetailRouteConfig: DetailRouteConfig }\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    RouteConfig,\r\n    DetailRouteConfig\r\n  ]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\n\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { LazyModuleFactory } from '@abp/ng.core';\r\nimport { SharedModule } from '@fs-tw/cms/admin/shared';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { PageService } from './providers/page.service';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, LayoutComponent, TagDetailComponent],\r\n  imports: [\r\n    SharedModule,\r\n    NzTagModule,\r\n    TagManagementRoutingModule\r\n  ],\r\n  providers: [PageService]\r\n})\r\nexport class TagManagementModule {\r\n  static forChild(): ModuleWithProviders<TagManagementModule> {\r\n    return {\r\n      ngModule: TagManagementModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { PostModule } from './post/post.module';\r\nimport { TagManagementModule } from './tag-management/tag-management.module'\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'post' },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        loadChildren: PostModule.forEarly\r\n      },\r\n      {\r\n        path: 'tag',\r\n        loadChildren: TagManagementModule.forEarly\r\n      },\r\n      // {\r\n      //   path: 'storage',\r\n      //   loadChildren: StorageModule.forEarly\r\n      // }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsAdminRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { CmsAdminRoutingModule } from './cms-admin-routing.module';\r\nimport { SharedModule } from '@fs-tw/cms/admin/shared';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    CmsAdminRoutingModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CmsAdminModule {\r\n  static forChild(): ModuleWithProviders<CmsAdminModule> {\r\n    return {\r\n      ngModule: CmsAdminModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<CmsAdminModule> {\r\n    return new LazyModuleFactory(CmsAdminModule.forChild());\r\n  }\r\n\r\n}\r\n"]}