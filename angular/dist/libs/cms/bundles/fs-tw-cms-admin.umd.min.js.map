{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/cms/admin/src/lib/post/providers/post-state.service.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/post/providers/page.service.ts","../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/shared/pipe/get-file.pipe.ts","../../../../libs/cms/admin/src/lib/shared/shared.module.ts","../../../../libs/cms/admin/src/lib/shared/file.service.ts","../../../../libs/cms/admin/src/lib/post/components/image-picker/image-picker.component.ts","../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts","../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts","../../../../libs/cms/admin/src/lib/post/post-routing.module.ts","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.ts","../../../../libs/cms/admin/src/lib/post/post.module.ts","../../../../libs/cms/admin/src/lib/tag-management/providers/page.service.ts","../../../../libs/cms/admin/src/lib/tag-management/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/tag-detail/tag-detail.component.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management-routing.module.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management.module.ts","../../../../libs/cms/admin/src/lib/cms-admin-routing.module.ts","../../../../libs/cms/admin/src/lib/cms-admin.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","PostStateService","this","store","InternalStore","prototype","getBlog","sliceState","state","Blog","setBlog","blog","patch","Injectable","args","providedIn","LayoutComponent","ngOnInit","Component","selector","template","PageService","injector","blogService","get","Fs","Cms","Blogs","BlogsApiService","postService","Posts","PostsApiService","directoriesApiService","Abp","File","Directories","DirectoriesApiService","fileDescriptorService","Volo","FileManagement","Files","FileDescriptorService","getBlogs","input","getListByBlogGetList","getBlogById","id","getByBlogPrimaryKey","createBlog","createByBlogCreate","updateBlog","updateByBlogPrimaryKeyAndBlogUpdate","deleteBlog","deleteByBlogPrimaryKey","findByProviderByKeyAndGroup","key","group","deleteFile","deleteById","getFileDescriptor","getById","getPostsByBlogId","getPostsByBlogIdByInput","getPostById","getByPostPrimaryKey","createPost","createByPostCreate","updatePost","updateByPostPrimaryKeyAndPostUpdate","deletePost","deleteByPostPrimaryKey","Injector","MainComponent","extensionsService","router","toasterService","confirmationService","pageService","list","activatedRoute","postStateService","postParams","skipCount","maxResultCount","keyword","blogId","posts","totalCount","_this","Actions$","subscribe","x","name","gotoDetail","record","deleteItem","blog$","onBlogChange","sub","blogName","displayName","hookToQuery","navigate","queryParams","hookToQueryScribe","unsubscribe","query","res","items","item","warn","cancelText","yesText","status","Confirmation","Status","confirm","files","attachmentFileInfos","map","fileId","images","postImages","imageId","deleteFileActions","forkJoin","success","ngOnDestroy","providers","ListService","provide","EXTENSIONS_IDENTIFIER","useValue","ExtensionsService","Router","ToasterService","ConfirmationService","ActivatedRoute","GetFileByIdPipe","environmentService","transform","getApiUrl","Pipe","EnvironmentService","COMPONENT","NgModule","declarations","imports","ThemeAlainMsSharedModule","UiExtensionsModule","exports","FileService","restService","getFileUrl","uploadFile","file","directoryId","formData","FormData","append","type","request","method","url","body","params","getFileBlobById","responseType","RestService","ImageFile","fileName","fileUrl","SaveFile","isUpload","ViewImage","image","isVisabled","ImagePickerComponent","fileService","imageWidth","imageHeight","borderWidth","borderHeight","maxImageCount","isMultiple","inLine","showFrontButton","existFiles","deleteFiles","showFiles","uploadFiles","viewImage","beforeUpload","hasExistImage","findIndex","hasShowImage","imgFile","getBase64","img","canUpload","defineProperty","imageNumber","ngOnChanges","filter","clear","callback","reader","FileReader","addEventListener","result","toString","readAsDataURL","inExistImage","inShowImage","controllModal","getDeleteFileNames","getNewUploadFiles","getUploadFiles","includes","updateFiles","Input","FileInfo","FileData","UploadFileComponent","fileList","delete","DetailComponent","dateRange","Date","defaultImages","defaultFiles","blogs","isLoading","coverImage","contentFileName","blobToFile","theBlob","postId","snapshot","paramMap","getRand","directory","getPost","data","title","subtitle","content","disable","startTime","endTime","displayMode","sequence","st","ed","y","coverImageIndex","isCover","blob","Blob","onload","readAsText","sorting","queryParamMap","defaultImagePicker","Math","floor","random","save","_.cloneDeep","toLocalISOString","_a","contentAction$","of","DisplayMode","內文","useContentFileName","dns.format","pipe","imagesAction","uploadImage$","filesAction","uploadFiles$","savePost","domainItem","newUploadFiles","defaultUploadFile","existFileNames","some","fileActions","savefile","newUploadImages","ViewChild","RouteConfig","resolve","routes","path","component","children","RouterModule","forChild","ListComponent","datas","count","isVisible","selected","defaultSelectId","edit","add","reload","select","find","showDetail","handleCancel","form","valid","deleteImageNames","uploadImageInfos","iconUrl","saveBlog","action","assign","no","openModal","buildForm","FormPropData","generateFormFromProps","TagComponent","NzModules","NzGridModule","NzInputModule","NzTableModule","NzDropDownModule","NzButtonModule","NzIconModule","NzModalModule","NzRadioModule","NzUploadModule","NzSpinModule","NzCardModule","NzSelectModule","NzDatePickerModule","NzTabsModule","SEModule","PostModule","ngModule","forLazy","LazyModuleFactory","forEarly","SharedModule","CoreModule","ReactiveFormsModule","FormsModule","CommonModule","PostRoutingModule","QuillModule","forRoot","allTagData","Subject","tagData","allTagData$","asObservable","tagData$","getTageListFromApi","getTagOneFromApi","groupId","confirmation","tagGroupList","subscription","deleteGroup","TagDetailComponent","location","isCreate","deleteTargetTagIds","inputList","addOption","removeOption","index","splice","removeOldOption","update","updateTags","deleteTags","createTags","Location","DetailRouteConfig","route","tagId","TagManagementModule","NzTagModule","TagManagementRoutingModule","ɵ1","pathMatch","redirectTo","canActivate","AuthGuard","PermissionGuard","loadChildren","ɵ0$2","CmsAdminModule","CmsAdminRoutingModule"],"mappings":";;;;;;;;;;;;;;oFA2G6BA,OAAOC,gBAwBpBC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,WAIKM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,EAqDcZ,OAAOC,wBCpL5B,SAAAqB,IANQC,KAAAC,MAAQ,IAAIC,EAAAA,cAAc,WAElCH,EAAAI,UAAAC,QAAA,WACI,OAAOJ,KAAKC,MAAMI,YAAW,SAAAC,GAAS,OAAAA,EAAMC,SAOhDR,EAAAI,UAAAK,QAAA,SAAQC,GACJT,KAAKC,MAAMS,MAAM,CAAEH,KAAME,yHAfhCE,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,kECPd,SAAAC,YAEAA,EAAAX,UAAAY,SAAA,sCATDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,YACVC,SAAA,6GCOA,SAAAC,EAAoBC,GAAApB,KAAAoB,SAAAA,EAClBpB,KAAKqB,YAAcD,EAASE,IAAIC,EAAAA,GAAGC,IAAIC,MAAMC,iBAC7C1B,KAAK2B,YAAcP,EAASE,IAAIC,EAAAA,GAAGC,IAAII,MAAMC,iBAC7C7B,KAAK8B,sBAAwBV,EAASE,IACpCC,EAAAA,GAAGQ,IAAIC,KAAKC,YAAYC,uBAE1BlC,KAAKmC,sBAAwBf,EAASE,IACpCc,EAAAA,KAAKC,eAAeC,MAAMC,8BAK9BpB,EAAAhB,UAAAqC,SAAA,SAASC,GACP,OAAOzC,KAAKqB,YAAYqB,qBAAqBD,IAG/CtB,EAAAhB,UAAAwC,YAAA,SAAYC,GACV,OAAO5C,KAAKqB,YAAYwB,oBAAoB,CAAED,GAAIA,KAGpDzB,EAAAhB,UAAA2C,WAAA,SAAWL,GACT,OAAOzC,KAAKqB,YAAY0B,mBAAmBN,IAG7CtB,EAAAhB,UAAA6C,WAAA,SAAWJ,EAAYH,GACrB,OAAOzC,KAAKqB,YAAY4B,oCACtB,CAAEL,GAAIA,GACNH,IAIJtB,EAAAhB,UAAA+C,WAAA,SAAWN,GACT,OAAO5C,KAAKqB,YAAY8B,uBAAuB,CAACP,GAAEA,KAKpDzB,EAAAhB,UAAAiD,4BAAA,SAA4BC,EAAaC,GACvC,OAAOtD,KAAK8B,sBAAsBsB,4BAA4BC,EAAKC,IAGrEnC,EAAAhB,UAAAoD,WAAA,SAAWX,GACT,OAAO5C,KAAKmC,sBAAsBqB,WAAWZ,IAG/CzB,EAAAhB,UAAAsD,kBAAA,SAAkBb,GAChB,OAAO5C,KAAKmC,sBAAsBuB,QAAQd,IAM5CzB,EAAAhB,UAAAwD,iBAAA,SAAiBlB,GACf,OAAOzC,KAAK2B,YAAYiC,wBAAwBnB,IAGlDtB,EAAAhB,UAAA0D,YAAA,SAAYjB,GACV,OAAO5C,KAAK2B,YAAYmC,oBAAoB,CAAElB,GAAIA,KAGpDzB,EAAAhB,UAAA4D,WAAA,SAAWtB,GACT,OAAOzC,KAAK2B,YAAYqC,mBAAmBvB,IAG7CtB,EAAAhB,UAAA8D,WAAA,SAAWrB,EAAYH,GACrB,OAAOzC,KAAK2B,YAAYuC,oCACtB,CAAEtB,GAAIA,GACNH,IAIJtB,EAAAhB,UAAAgE,WAAA,SAAWvB,GACT,OAAO5C,KAAK2B,YAAYyC,uBAAuB,CAAExB,GAAEA,8BA/EtDjC,EAAAA,sDAJQ0D,EAAAA,6BC0CP,SAAAC,EACUC,EACAC,EACAC,EACAC,EACAC,EACQC,EACRC,EACAC,GAPA9E,KAAAuE,kBAAAA,EACAvE,KAAAwE,OAAAA,EACAxE,KAAAyE,eAAAA,EACAzE,KAAA0E,oBAAAA,EACA1E,KAAA2E,YAAAA,EACQ3E,KAAA4E,KAAAA,EACR5E,KAAA6E,eAAAA,EACA7E,KAAA8E,iBAAAA,EAlBV9E,KAAA+E,WAAqD,CACnDC,UAAW,EACXC,eAAgB,GAChBC,QAAS,GACTC,OAAQ,MAGVnF,KAAAoF,MAAgD,GAChDpF,KAAAqF,WAAqB,SAiBrBf,EAAAnE,UAAAY,SAAA,WAAA,IAAAuE,EAAAtF,KACEA,KAAKuE,kBAAkBgB,SAAQ,8BAAsBC,WACnD,SAACC,GACC,OAAQA,EAAEC,MACR,IAAK,OACHJ,EAAKK,WAAWF,EAAEG,OAAOhD,IACzB,MACF,IAAK,SACH0C,EAAKO,WAAWJ,EAAEG,YAK1B5F,KAAK8F,MAAQ9F,KAAK8E,iBAAiB1E,UACnCJ,KAAK+F,gBAGPzB,EAAAnE,UAAA4F,aAAA,WAAA,IAAAT,EAAAtF,KACEA,KAAKgG,IAAMhG,KAAK8F,MAAMN,WAAU,SAAC/E,GAC/B6E,EAAKH,OAAiB,MAAR1E,EAAe,KAAOA,EAAKmC,GACzC0C,EAAKW,SAAmB,MAARxF,EAAe,KAAOA,EAAKyF,YAE3CZ,EAAKP,WAAWI,OAASG,EAAKH,OAC9BG,EAAKa,kBAIT7B,EAAAnE,UAAAwF,WAAA,SAAW/C,GACLA,EAAI5C,KAAKwE,OAAO4B,SAAS,CAAC,oBAAsBxD,IAC/C5C,KAAKwE,OAAO4B,SAAS,CAAC,oBAAqB,CAC9CC,YAAa,CACXlB,OAAQnF,KAAK+E,WAAWI,WAK9Bb,EAAAnE,UAAAgG,YAAA,WAAA,IAAAb,EAAAtF,KAEMA,KAAKsG,mBAAmBtG,KAAKsG,kBAAkBC,cAOnDvG,KAAKsG,kBAAoBtG,KAAK4E,KAAKuB,aANrB,SAACK,GAGb,OAFAA,EAAMtB,QAAUI,EAAKP,WAAWG,QAChCsB,EAAMrB,OAASG,EAAKP,WAAWI,OACxBG,EAAKX,YAAYhB,iBAAiB6C,MAGWhB,WAAU,SAACiB,GAC/DnB,EAAKF,MAAQqB,EAAIC,MACjBpB,EAAKD,WAAaoB,EAAIpB,eAI1Bf,EAAAnE,UAAA0F,WAAA,SAAWc,GAAX,IAAArB,EAAAtF,KACEA,KAAK0E,oBACFkC,KAAK,UAAW,OAAQ,CACvBC,WAAY,KACZC,QAAS,OAEVtB,WAAU,SAACuB,GACV,GAAIA,IAAWC,EAAAA,aAAaC,OAAOC,QAAS,CAC1C,IAAIC,EAAQR,EAAKS,oBAAoBC,KAAI,SAAA5B,GAAK,OAAAA,EAAE6B,UAC5CC,EAASZ,EAAKa,WAAWH,KAAI,SAAA5B,GAAK,OAAAA,EAAEgC,WACpCC,EAAoBP,EAAMrH,OAAOyH,GAAQF,KAAI,SAAA5B,GAAK,OAAAH,EAAKX,YAAYpB,WAAWkC,MAClFkC,EAAAA,SAASD,GAAmBlC,YAE5BF,EAAKX,YAAYR,WAAWwC,EAAK/D,IAAI4C,WAAU,SAAAC,GAC7CH,EAAKb,eAAemD,QAAQ,SAC5BtC,EAAKV,KAAKtD,cAMpBgD,EAAAnE,UAAA0H,YAAA,WACM7H,KAAKsG,mBAAmBtG,KAAKsG,kBAAkBC,cAC/CvG,KAAKgG,KAAKhG,KAAKgG,IAAIO,wCArH1BvF,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,UACVC,SAAA,qgIAEA4G,UAAW,CACTC,EAAAA,YACA,CACEC,QAASC,EAAAA,sBACTC,wKAfmBC,EAAAA,yBADAC,EAAAA,cALmBC,EAAAA,sBAArBC,EAAAA,2BASdnH,SAVA4G,EAAAA,mBAMAQ,EAAAA,sBAKAxI,sBCFL,SAAAyI,EACYC,GAAAzI,KAAAyI,mBAAAA,SAGZD,EAAArI,UAAAuI,UAAA,SAAUjJ,GACN,OAAOO,KAAKyI,mBAAmBE,YAAc,wDAA0DlJ,4BAV9GmJ,EAAAA,KAAIhI,KAAA,CAAC,CACF8E,KAAM,2DAJDmD,EAAAA,sBCIT,IAAMC,EAAY,CAACN,KAgBnB,iCAdCO,EAAAA,SAAQnI,KAAA,CAAC,CACRoI,aAAYrJ,EAAMmJ,GAClBG,QAAS,CAEPC,EAAAA,yBACAC,EAAAA,oBAEFC,QAAOzJ,EAEFmJ,EAAS,CACZI,EAAAA,yBACAC,EAAAA,0CCHF,SAAAE,EACUC,EACAb,GADAzI,KAAAsJ,YAAAA,EACAtJ,KAAAyI,mBAAAA,SAIVY,EAAAlJ,UAAAoJ,WAAA,SAAW3G,GACT,OAAKA,EACE5C,KAAKyI,mBAAmBE,YAAc,wDAA0D/F,EADvF,IAIlByG,EAAAlJ,UAAAqJ,WAAA,SAAWC,EAAYC,GACrB,IAAMC,EAAW,IAAIC,SAKrB,OAJAD,EAASE,OAAO,eAAgB,MAChCF,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQJ,EAAK/D,MAC7BiE,EAASE,OAAO,OAAQJ,EAAKK,MACtB9J,KAAKsJ,YAAYS,QAAgC,CACtDC,OAAQ,OACRC,IAAK,8CACLC,KAAMP,EACNQ,OAAQ,CAAET,YAAaA,MAK3BL,EAAAlJ,UAAAiK,gBAAA,SAAgBxH,GACd,OAAO5C,KAAKsJ,YAAYS,QAAmB,CACzCC,OAAQ,MACRC,IAAK,oDACLE,OAAQ,CAAEvH,GAAEA,GACZyH,aAAc,0LAlCnB1J,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAXGyJ,EAAAA,mBAApBzB,EAAAA,sBCMT,IAAA0B,EAIE,SAAYC,EAAuBC,QAAvB,IAAAD,IAAAA,EAAA,SAAuB,IAAAC,IAAAA,EAAA,IACjCzK,KAAKwK,SAAWA,EAChBxK,KAAKyK,QAAUA,GAInBC,EAME,SAAYF,EAAkBC,EAAiBhB,GAC7CzJ,KAAKwK,SAAWA,EAChBxK,KAAKyK,QAAUA,EACfzK,KAAKyJ,KAAOA,EAEZzJ,KAAK2K,SAAwB,MAAb3K,KAAKyJ,MAIzBmB,EAIE,WACE5K,KAAK6K,MAAQ,IAAIN,EACjBvK,KAAK8K,YAAa,gBAgEpB,SAAAC,EACUtG,EACAgE,EACAuC,GAHV,IAAA1F,EAAAtF,KACUA,KAAAyE,eAAAA,EACAzE,KAAAyI,mBAAAA,EACAzI,KAAAgL,YAAAA,EAvDDhL,KAAAiL,WAAqB,QAGrBjL,KAAAkL,YAAsB,QAGtBlL,KAAAmL,YAAsB,QAGtBnL,KAAAoL,aAAuB,QAGvBpL,KAAAqL,cAAwB,KAGxBrL,KAAAsL,YAAsB,EAYtBtL,KAAAuL,QAAkB,EAGlBvL,KAAAwL,iBAA2B,EAG3BxL,KAAAyL,WAA0B,GAG3BzL,KAAA0L,YAAwB,GAGhC1L,KAAA2L,UAAyB,GAGjB3L,KAAA4L,YAA8B,GAGtC5L,KAAA6L,UAAuB,IAAIjB,EAwC3B5K,KAAA8L,aAAe,SAACrC,GAEd,KAD+B,eAAdA,EAAKK,MAAuC,cAAdL,EAAKK,MAGlD,OADAxE,EAAKb,eAAe/E,MAAM,qBACnB,EAGT,IAAI8K,EAAWf,EAAK/D,KAEhBqG,EAAgBzG,EAAKmG,WAAWO,WAAU,SAAAvG,GAAK,OAAAA,EAAE+E,UAAYA,MAAa,EAC1EyB,EAAe3G,EAAKqG,UAAUK,WAAU,SAAAvG,GAAK,OAAAA,EAAE+E,UAAYA,MAAa,EAC5E,GAAIuB,GAAiBE,EAAc,OAAO,EAG1C,IAAIC,EAAezC,EAWnB,OAVAnE,EAAK6G,UAAUD,GAAS,SAACE,GAClB9G,EAAK+G,WAKV/G,EAAKsG,YAAYpM,KAAK0M,GACtB5G,EAAKqG,UAAUnM,KAAK,IAAI+K,EAAUC,EAAU4B,KAL1C9G,EAAKb,eAAe/E,MAAM,eAQvB,UA/DTjB,OAAA6N,eAAIvB,EAAA5K,UAAA,YAAS,KAAb,WACE,IAAIoM,EAAcvM,KAAKyL,WAAW5L,OAASG,KAAK4L,YAAY/L,OAC5D,OAA6B,MAAtBG,KAAKqL,eAAyBkB,EAAcvM,KAAKqL,+CAS1DN,EAAA5K,UAAAY,SAAA,aAGAgK,EAAA5K,UAAAqM,YAAA,WAAA,IAAAlH,EAAAtF,KACEA,KAAKyL,WAAazL,KAAKyL,WACpBgB,QAAO,SAAAhH,GAAK,OAAAA,EAAEgF,WACdpD,KAAI,SAAA5B,GAAK,OAAA,IAAI8E,EAAU9E,EAAE+E,SAAUlF,EAAK0F,YAAYzB,WAAW9D,EAAEgF,aAEpEzK,KAAK4L,YAAc,GACnB5L,KAAK2L,UAAY,GACjB3L,KAAK0L,YAAc,IAGrBX,EAAA5K,UAAAuM,MAAA,WACE1M,KAAKyL,WAAa,GAClBzL,KAAK0L,YAAc,GACnB1L,KAAK4L,YAAc,GACnB5L,KAAK2L,UAAY,IAsCXZ,EAAA5K,UAAAgM,UAAA,SAAUC,EAAWO,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAAM,OAAAH,EAASC,EAAOG,OAAQC,eAC9DJ,EAAOK,cAAcb,IAGvBrB,EAAA5K,UAAAoD,WAAA,SAAWiH,GACT,IAAI0C,EAAelN,KAAKyL,WAAWO,WAAU,SAAAvG,GAAK,OAAAA,EAAE+E,UAAYA,MAAa,EACzE2C,EAAcnN,KAAK2L,UAAUK,WAAU,SAAAvG,GAAK,OAAAA,EAAE+E,UAAYA,MAAa,EAG3E,GAAI0C,EAGF,OAFAlN,KAAKyL,WAAazL,KAAKyL,WAAWgB,QAAO,SAAAhH,GAAK,OAAAA,EAAE+E,UAAYA,UAC5DxK,KAAK0L,YAAYlM,KAAKgL,GAKpB2C,IACFnN,KAAK2L,UAAY3L,KAAK2L,UAAUc,QAAO,SAAAhH,GAAK,OAAAA,EAAE+E,UAAYA,KAC1DxK,KAAK4L,YAAc5L,KAAK4L,YAAYa,QAAO,SAAAhH,GAAK,OAAAA,EAAEC,MAAQ8E,OAK9DO,EAAA5K,UAAAiN,cAAA,SAAc9M,EAAgBuK,QAAA,IAAAA,IAAAA,EAAA,IAAuBN,GACnDvK,KAAK6L,UAAUhB,MAAQA,EACvB7K,KAAK6L,UAAUf,WAAaxK,GAG9ByK,EAAA5K,UAAAkN,mBAAA,WACE,OAAOrN,KAAK0L,aAIdX,EAAA5K,UAAAmN,kBAAA,WAEE,OAD8BtN,KAAK4L,YAAYvE,KAAI,SAAC5B,GAAW,OAAA,IAAIiF,EAASjF,EAAEC,KAAM,GAAID,OAI1FsF,EAAA5K,UAAAoN,eAAA,WAAA,IAAAjI,EAAAtF,KACMyL,EAAazL,KAAKyL,WAAWgB,QAAO,SAAAhH,GAAK,OAACH,EAAKoG,YAAY8B,SAAS/H,EAAE+E,aAAWnD,KAAI,SAAA5B,GAAK,OAAA,IAAIiF,EAASjF,EAAE+E,SAAU/E,EAAEgF,QAAS,SAC9HgD,EAA0BzN,KAAK4L,YAAYvE,KAAI,SAAC5B,GAAW,OAAA,IAAIiF,EAASjF,EAAEC,KAAM,GAAID,MAExF,OAAOgG,EAAW3L,OAAO2N,6BArK5BzM,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,eACVC,SAAA,q2GAxCOmH,EAAAA,sBACmBQ,EAAAA,0BAFnBQ,yCA+CNqE,EAAAA,2BAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,6BAGAA,EAAAA,0BAGAA,EAAAA,6BAGAA,EAAAA,8BAGAA,EAAAA,kCAGAA,EAAAA,sBAGAA,EAAAA,+BAGAA,EAAAA,0BAGAA,EAAAA,SC/EH,IAAAC,EAIE,SAAYnD,EAAuBC,QAAvB,IAAAD,IAAAA,EAAA,SAAuB,IAAAC,IAAAA,EAAA,IACjCzK,KAAKwK,SAAWA,EAChBxK,KAAKyK,QAAUA,GAInBmD,EAME,SAAYpD,EAAkBC,EAAiBhB,GAC7CzJ,KAAKwK,SAAWA,EAChBxK,KAAKyK,QAAUA,EACfzK,KAAKyJ,KAAOA,EAEZzJ,KAAK2K,SAAwB,MAAb3K,KAAKyJ,mBAiBvB,SAAAoE,EACUnJ,GADV,IAAAY,EAAAtF,KACUA,KAAA0E,oBAAAA,EANV1E,KAAAyL,WAAyB,GAEzBzL,KAAA8N,SAA2B,GAa3B9N,KAAA8L,aAAe,SAACrC,GAGd,OAFYnE,EAAKmG,WAAWO,WAAU,SAAAvG,GAAK,OAAAA,EAAE+E,UAAYf,EAAK/D,SAAS,GACrEJ,EAAKwI,SAAS9B,WAAU,SAAAvG,GAAK,OAAAA,EAAEC,MAAQ+D,EAAK/D,SAAS,IAEvDJ,EAAKwI,SAAWxI,EAAKwI,SAAShO,OAAO2J,KADnB,UAPpBoE,EAAA1N,UAAAY,SAAA,aAYA8M,EAAA1N,UAAA4N,OAAA,SAAO9D,GAAP,IAAA3E,EAAAtF,KACEA,KAAK0E,oBACFkC,KAAK,SAAU,QACfpB,WAAU,SAACuB,GACNA,IAAWC,EAAAA,aAAaC,OAAOC,UACjC5B,EAAKmG,WAAanG,EAAKmG,WAAWgB,QAAO,SAAAhH,GAAK,OAAAA,GAAKwE,UAK3D4D,EAAA1N,UAAAmN,kBAAA,WAEE,OAD8BtN,KAAK8N,SAASzG,KAAI,SAAC5B,GAAW,OAAA,IAAImI,EAASnI,EAAEC,KAAM,GAAID,gCA1CxFzE,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,iBACVC,SAAA,q3BA7BqBoH,EAAAA,2DAkCpBoF,EAAAA,0BCHD,SAAAM,EACUxJ,EACAwG,EACAnG,EACAF,EACAD,GALV,IAAAY,EAAAtF,KACUA,KAAAwE,OAAAA,EACAxE,KAAAgL,YAAAA,EACAhL,KAAA6E,eAAAA,EACA7E,KAAA2E,YAAAA,EACA3E,KAAA0E,oBAAAA,EAdV1E,KAAAiO,UAAoB,CAAC,IAAIC,KAAQ,IAAIA,MACrClO,KAAAmO,cAA6B,GAC7BnO,KAAAoO,aAA2B,GAC3BpO,KAAAqO,MAAqC,GAErCrO,KAAAsO,WAAqB,EAErBtO,KAAAuO,WAAqB,GACrBvO,KAAAwO,gBAAkB,GA0IVxO,KAAAyO,WAAa,SAACC,EAAelE,GACnC,OAAO,IAAIxI,KAAK,CAAC0M,GAAUlE,EAAU,CAAEV,KAAM,8BAnI7C9J,KAAK2O,OAAS3O,KAAK6E,eAAe+J,SAASC,SAASvN,IAAI,UACxDtB,KAAK2E,YAAYvB,4BAA4B,eAAgBpD,KAAK2O,OAAS3O,KAAK2O,OAAS3O,KAAK8O,WAAWtJ,WAAU,SAAAC,GACjHH,EAAKyJ,UAAYtJ,YAIrBuI,EAAA7N,UAAAY,SAAA,WAGEf,KAAKgP,UACLhP,KAAKwC,YAGPwL,EAAA7N,UAAA6O,QAAA,WAAA,IAAA1J,EAAAtF,KACEA,KAAKiP,KAAO,CACV9J,OAAQ,KACR+J,MAAO,GACPC,SAAU,GACVlF,IAAK,GACLmF,QAAS,GACTC,SAAS,EACTC,UAAW,GACXC,QAAS,GACTC,YAAa,EACbC,SAAU,EACVrI,oBAAqB,GACrBI,WAAY,IAEdxH,KAAKwO,gBAAkB,GACvBxO,KAAKiO,UAAY,CAAC,IAAIC,KAAQ,IAAIA,MAElClO,KAAKmO,cAAgB,GACrBnO,KAAKoO,aAAe,GACpBpO,KAAKuO,WAAa,GAEdvO,KAAK2O,QACP3O,KAAK2E,YAAYd,YAAY7D,KAAK2O,QAAQnJ,WAAU,SAACC,GACnDH,EAAK2J,KAAOxJ,EACZ,IAAIiK,EAAKjK,EAAE6J,UAAY,IAAIpB,KAAKzI,EAAE6J,WAAa,IAAIpB,KAC/CyB,EAAKlK,EAAE8J,QAAU,IAAIrB,KAAKzI,EAAE8J,SAAW,IAAIrB,KAC/C5I,EAAK2I,UAAY,CAACyB,EAAIC,GAEtBrK,EAAK6I,cAAgB1I,EAAE+B,WAAWH,KAAI,SAAAuI,GAAK,OAAA,IAAIrF,EAAUqF,EAAElK,KAAMkK,EAAEnI,YACnEnC,EAAK8I,aAAe3I,EAAE2B,oBAAoBC,KAAI,SAAAuI,GAAK,OAAA,IAAIjC,EAASiC,EAAElK,KAAMJ,EAAK0F,YAAYzB,WAAWqG,EAAEtI,YACtG,IAAIuI,EAAkBpK,EAAE+B,WAAWwE,WAAU,SAAA4D,GAAK,OAAAA,EAAEE,WAChDD,GAAmB,IAAGvK,EAAKiJ,WAAa9I,EAAE+B,WAAWqI,GAAiBpI,SAEtEhC,EAAE2J,UACJ9J,EAAKX,YAAYlB,kBAAkBgC,EAAE2J,SAAS5J,WAAU,SAAAC,GACtDH,EAAKkJ,gBAAkB/I,EAAEC,QAG3BJ,EAAK0F,YAAYZ,gBAAgB3E,EAAE2J,SAAS5J,WAAU,SAAAyJ,GACpD,IAAMc,EAAO,IAAIC,KAAK,CAACf,GAAO,CAAEnF,KAAM,6BAClC8C,EAAS,IAAIC,WACjBD,EAAOqD,OAAS,WACd3K,EAAK2J,KAAKG,QAAUxC,EAAOG,OAAOC,YAEpCJ,EAAOsD,WAAWH,WAQ5B/B,EAAA7N,UAAAqC,SAAA,WAAA,IAAA8C,EAAAtF,KAOEA,KAAK2E,YAAYnC,SANL,CACVwC,UAAW,EACXC,eAAgB,IAChBkL,QAAS,aAGsB3K,WAAU,SAACC,GAC1CH,EAAK+I,MAAQ5I,EAAEiB,MACVpB,EAAKqJ,SAAQrJ,EAAK2J,KAAK9J,OAASG,EAAKT,eAAe+J,SAASwB,cAAc9O,IAAI,eAIxF0M,EAAA7N,UAAAoD,WAAA,SAAWiH,GAAX,IAAAlF,EAAAtF,KACEA,KAAK0E,oBAAoBkC,KAAK,QAAQ4D,EAAQ,MAAO,QAClDhF,WAAU,SAACuH,GACNA,GAAU/F,EAAAA,aAAaC,OAAOC,SAElC5B,EAAK+K,mBAAmB9M,WAAWiH,OAIzCwD,EAAA7N,UAAA2O,QAAA,WACE,OAAQwB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAAGxD,YAG/CgB,EAAA7N,UAAAsQ,KAAA,WAAA,MAAAnL,EAAAtF,KASM2G,EAAkC+J,EAAAA,UAAY1Q,KAAKiP,MACvDtI,EAAK2I,UAAYtP,KAAKiO,UAAU,GAAG0C,mBACnChK,EAAK4I,QAA2B,QAApBqB,EAAG5Q,KAAKiO,UAAU,UAAE,IAAA2C,OAAA,EAAAA,EAAED,mBAGlC,IAAIE,EAAiBC,EAAAA,GAAG,IACxB,GAAInK,EAAK6I,aAAejO,EAAAA,GAAGC,IAAII,MAAMmP,YAAYC,GAAI,CAEnD,IAAMjB,EAAO,IAAIC,KAAK,CAACrJ,EAAKyI,SAAU,CAAEtF,KAAM,6BAC1CmH,EAAqBC,EAAAA,OAAW,IAAIhD,KAAQ,kBAAoB,IAAMlO,KAAK8O,UAAY,OACvF9O,KAAKwO,kBAAiByC,EAAqBjR,KAAKwO,iBACpD,IAAI/E,EAAOzJ,KAAKyO,WAAWsB,EAAMkB,GACjCJ,EAAiB7Q,KAAKgL,YAAYxB,WAAWC,EAAMzJ,KAAK+O,UAAUnM,IAAIuO,KAAK9J,EAAAA,KAAI,SAAA5B,GAAK,OAAAA,EAAE7C,OAIxF,IAAIwO,EAAepR,KAAKqR,aAAa1K,GACjC2K,EAActR,KAAKuR,aAAa5K,GACpCgB,EAAAA,SAAS,CAACyJ,EAAcE,EAAaT,IAAiBrL,WAAU,SAAAC,GAC9DkB,EAAKa,WAAa/B,EAAE,GACpBkB,EAAKS,oBAAsB3B,EAAE,GAC7BkB,EAAKyI,QAAU3J,EAAE,GACjBH,EAAKkM,SAAS7K,OAYlBqH,EAAA7N,UAAAoR,aAAA,SAAa5K,GAAb,IAAArB,EAAAtF,KACMyR,EAAwCf,EAAAA,UAAY/J,GACpD+K,EAAiB1R,KAAK2R,kBAAkBrE,oBAExCsE,EAAiB5R,KAAK2R,kBAAkBlG,WAAWpE,KAAI,SAAA5B,GAAK,OAAAA,EAAE+E,YAGlE,GAFAiH,EAAWrK,oBAAsBqK,EAAWrK,oBAAoBqF,QAAO,SAAAhH,GAAK,OAAAmM,EAAeC,MAAK,SAAAjC,GAAK,OAAAA,GAAKnK,EAAEC,WAE/E,GAAzBgM,EAAe7R,OACjB,OAAOiR,EAAAA,GAAGW,EAAWrK,qBAGvB,IAAI0K,EAAcJ,EAAerK,KAAI,SAAA0K,GACnC,OAAOzM,EAAK0F,YAAYxB,WAAWuI,EAAStI,KAAMnE,EAAKyJ,UAAUnM,OAGnE,OAAO+E,EAAAA,SAASmK,GAAaX,KAAK9J,EAAAA,KAAI,SAAA5B,GAOpC,OANqDA,EAAE4B,KAAI,SAAAuI,GACzD,MAAO,CACLlK,KAAMkK,EAAElK,KACR4B,OAAQsI,EAAEhN,OAGA9C,OAAO2R,EAAWrK,0BAIpC4G,EAAA7N,UAAAkR,aAAA,SAAa1K,GAAb,IAAArB,EAAAtF,KACMyR,EAAwCf,EAAAA,UAAY/J,GACpDqL,EAAkBhS,KAAKqQ,mBAAmB/C,oBAG1CsE,EAAiB5R,KAAKqQ,mBAAmB5E,WAAWpE,KAAI,SAAA5B,GAAK,OAAAA,EAAE+E,YAGnE,GAFAiH,EAAWjK,WAAaiK,EAAWjK,WAAWiF,QAAO,SAAAhH,GAAK,OAAAmM,EAAeC,MAAK,SAAAjC,GAAK,OAAAA,GAAKnK,EAAEC,WAE5D,GAA1BsM,EAAgBnS,OAClB,OAAOiR,EAAAA,GAAGW,EAAWjK,YAIvB,IAAIsK,EAAcE,EAAgB3K,KAAI,SAAA0K,GACpC,OAAOzM,EAAK0F,YAAYxB,WAAWuI,EAAStI,KAAMnE,EAAKyJ,UAAUnM,OAGnE,OAAO+E,EAAAA,SAASmK,GAAaX,KAAK9J,EAAAA,KAAI,SAAA5B,GAQpC,OAP+CA,EAAE4B,KAAI,SAAAuI,GACnD,MAAO,CACLlK,KAAMkK,EAAElK,KACRoK,QAAUxK,EAAKiJ,YAAcqB,EAAElK,KAC/B+B,QAASmI,EAAEhN,OAGD9C,OAAO2R,EAAWjK,iBAKpCwG,EAAA7N,UAAAqR,SAAA,SAAS7K,GAAT,IAAArB,EAAAtF,MAEOA,KAAK2O,OAGC3O,KAAK2E,YAAYV,WAAWjE,KAAK2O,OAAQhI,GAFzC3G,KAAK2E,YAAYZ,WAAW4C,IAKhCnB,WAAU,SAACC,GAChBH,EAAKd,OAAO4B,SAAS,CAAC,0CAlO3BpF,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,YACVC,SAAA,krLAduBkH,EAAAA,cAQhBiB,SARAd,EAAAA,sBAMApH,SAPcmH,EAAAA,mEAmBpB2J,EAAAA,UAASrR,KAAA,CAAC,iDACVqR,EAAAA,UAASrR,KAAA,CAAC,yCCVX,SAAAsR,EAAoBpN,GAAA9E,KAAA8E,iBAAAA,SAEpBoN,EAAA/R,UAAAgS,QAAA,WACE,OAAOnS,KAAK8E,iBAAiBtE,QAAQ,gCALxCG,EAAAA,sDANQZ,KAeT,IAAMqS,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWxR,EACXqR,QAAS,CAAED,YAAeA,GAC1BK,SAAU,CACR,CACEF,KAAM,GACNC,UAAWhO,GAEb,CACE+N,KAAK,SACLC,UAAUtE,GAEZ,CACEqE,KAAK,iBACLC,UAAUtE,QAalB,iCAPCjF,EAAAA,SAAQnI,KAAA,CAAC,CACRqI,QAAS,CAACuJ,EAAAA,aAAaC,SAASL,IAChChJ,QAAS,CAACoJ,EAAAA,cACV1K,UAAU,CACRoK,yBCAF,SAAAQ,EACUlO,EACAD,EACAI,EACEvD,EACMwD,EACRoG,EACAvG,EACAI,EACAH,EACAI,GAVV,IAAAQ,EAAAtF,KACUA,KAAAwE,OAAAA,EACAxE,KAAAuE,kBAAAA,EACAvE,KAAA2E,YAAAA,EACE3E,KAAAoB,SAAAA,EACMpB,KAAA4E,KAAAA,EACR5E,KAAAgL,YAAAA,EACAhL,KAAAyE,eAAAA,EACAzE,KAAA6E,eAAAA,EACA7E,KAAA0E,oBAAAA,EACA1E,KAAA8E,iBAAAA,EAnBV9E,KAAA2S,MAAqC,GACrC3S,KAAA4S,MAAQ,EACR5S,KAAAmO,cAA6B,GAC7BnO,KAAA6S,WAAY,EAEZ7S,KAAA8S,SAAsC,GAEtC9S,KAAA+S,gBAAkB,KAgBhB/S,KAAK6E,eAAeuL,cAAc5K,WAAU,SAAAC,GAC1CH,EAAKyN,gBAAkBtN,EAAEnE,IAAI,UAE7BgE,EAAKX,YAAYvB,4BAA4B,eAAekC,EAAKyN,gBAAgBzN,EAAKyN,gBAAgBzN,EAAKwJ,WAAWtJ,WAAU,SAAAC,GAC9HH,EAAKyJ,UAAYtJ,eAIvBiN,EAAAvS,UAAA0H,YAAA,WACK7H,KAAKgG,KAAKhG,KAAKgG,IAAIO,eAGxBmM,EAAAvS,UAAA2O,QAAA,WACE,OAAQwB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAAGxD,YAG/C0F,EAAAvS,UAAAY,SAAA,WAAA,IAAAuE,EAAAtF,KACEA,KAAKgG,IAAMhG,KAAKuE,kBAAkBgB,SAAQ,qBAAsBC,WAC9D,SAACC,GACC,OAAQA,EAAEC,MACR,IAAK,OACHJ,EAAK0N,KAAKvN,EAAEG,OAAOhD,IACnB,MACF,IAAK,SACH0C,EAAKpC,WAAWuC,EAAEG,QAClB,MACF,IAAK,MACHN,EAAK2N,UAMbjT,KAAKkT,UAGPR,EAAAvS,UAAA+S,OAAA,WAAA,IAAA5N,EAAAtF,KAEMyC,EAA0C,CAC5CuC,UAAW,EACXC,eAAgB,GAChBkL,QAAS,YAOXnQ,KAAK4E,KAAKuB,aAJoB,SAACK,GAC7B,OAAOlB,EAAKX,YAAYnC,SAASC,MAGU+C,WAAU,SAACiB,GAGtD,GAFAnB,EAAKqN,MAAQlM,EAAIC,MACjBpB,EAAKsN,MAAQnM,EAAIpB,WACbC,EAAKyN,gBAAiB,CACxB,IAAII,EAAS7N,EAAKqN,MAAMS,MAAK,SAAA3N,GAAK,OAAAA,EAAE7C,IAAM0C,EAAKyN,mBAC/CzN,EAAK+N,WAAWF,QAKtBT,EAAAvS,UAAAkT,WAAA,SAAW5S,GACT,GAAY,MAARA,EAGF,OAFAT,KAAKwE,OAAO4B,SAAS,CAAC,oBACtBpG,KAAK8E,iBAAiBtE,QAAQ,MAGhCR,KAAKwE,OAAO4B,SAAS,CAAC,cAAe,CAAEC,YAAa,CAAElB,OAAU1E,EAAKmC,MACrE5C,KAAK8E,iBAAiBtE,QAAQC,IAGhCiS,EAAAvS,UAAA+C,WAAA,SAAWzC,GAAX,IAAA6E,EAAAtF,KACEA,KAAK0E,oBACFkC,KAAK,2BAA4B,OAAQ,CACxCC,WAAY,KACZC,QAAS,OAEVtB,WAAU,SAACuB,GACNA,IAAWC,EAAAA,aAAaC,OAAOC,SACjC5B,EAAKX,YAAYzB,WAAWzC,EAAKmC,IAAI4C,WAAU,SAAAC,GAC7CH,EAAKb,eAAemD,QAAQ,SAC5BtC,EAAKV,KAAKtD,MACVgE,EAAKd,OAAO4B,SAAS,CAAC,sBAQhCsM,EAAAvS,UAAAmT,aAAA,WACEtT,KAAK6S,WAAY,GAGnBH,EAAAvS,UAAAsQ,KAAA,WAAA,IAAAnL,EAAAtF,KACE,GAAKA,KAAKuT,KAAKC,MAAf,CACA,IAAIC,EAAmBzT,KAAKqQ,mBAAmBhD,qBAC5CoG,EAAiB5T,OAAO,EACzBG,KAAK2E,YAAYpB,WAAWkQ,EAAiB,IAAIjO,WAAU,WACzDF,EAAKkE,gBAEFxJ,KAAKwJ,eAKdkJ,EAAAvS,UAAAqJ,WAAA,WAAA,IAAAlE,EAAAtF,KACM0T,EAAmB1T,KAAKqQ,mBAAmB9C,iBAC3CjG,EAAS,GACb,GAAKoM,EAAiB7T,OAAS,EAAI,CACjC,GAAIG,KAAK8S,SAASa,SAAWD,EAAiB,GAAGlJ,SAE/C,YADAxK,KAAK4T,SAAS5T,KAAK8S,SAASa,SAG9B3T,KAAKgL,YAAYxB,WAAWkK,EAAiB,GAAGjK,KAAMzJ,KAAK+O,UAAUnM,IAAI4C,WAAU,SAAAC,GACjF6B,EAAS7B,EAAE7C,GACX0C,EAAKsO,SAAStM,WAEXtH,KAAK4T,SAAS,KAGvBlB,EAAAvS,UAAAyT,SAAA,SAAStM,GAAT,IAGMuM,EAHNvO,EAAAtF,KACMyC,EAAKhE,OAAAqV,OAAArV,OAAAqV,OAAArV,OAAAqV,OAAA,GAAQ9T,KAAK8S,UAAa9S,KAAKuT,KAAK9T,OAAK,CAAEmD,GAAI5C,KAAK8S,SAASlQ,KACtEH,EAAMkR,QAAUrM,EAEZ7E,EAAMG,GAAIiR,EAAS7T,KAAK2E,YAAY3B,WAAWP,EAAMG,GAAIH,IAE3DA,EAAMsR,GAAKtR,EAAMyD,YACjB2N,EAAS7T,KAAK2E,YAAY7B,WAAWL,IAEvCoR,EAAOrO,WAAU,SAACC,GAChBH,EAAKb,eAAemD,QAAQ,SAC5BtC,EAAKuN,WAAY,EACjBvN,EAAKV,KAAKtD,UAIdoR,EAAAvS,UAAA8S,IAAA,WACEjT,KAAK8S,SAAW,GAChB9S,KAAKmO,cAAgB,GACrBnO,KAAKgU,aAGPtB,EAAAvS,UAAA6S,KAAA,SAAKpQ,GAAL,IAAA0C,EAAAtF,KACEA,KAAK2E,YAAYhC,YAAYC,GAAI4C,WAAU,SAAAC,GACzCH,EAAKwN,SAAWrN,EAChBH,EAAK6I,cAAgB,GACjB1I,EAAEkO,SAASrO,EAAK6I,cAAc3O,KAAK,IAAI+K,EAAU9E,EAAEkO,QAASlO,EAAEkO,UAClErO,EAAK0O,gBAITtB,EAAAvS,UAAA8T,UAAA,WACE,IAAMhF,EAAO,IAAIiF,EAAAA,aAAalU,KAAKoB,SAAUpB,KAAK8S,UAClD9S,KAAKuT,KAAO,KACZvT,KAAKuT,KAAOY,EAAAA,sBAAsBlF,IAGpCyD,EAAAvS,UAAA6T,UAAA,WACEhU,KAAKiU,YACLjU,KAAK6S,WAAY,6BAlMpB7R,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,UACVC,SAAA,2zCAEA4G,UAAW,CACTC,EAAAA,YACA,CACEC,QAASC,EAAAA,sBACTC,sMATGE,EAAAA,cATgBD,EAAAA,yBARhBhH,SAHWkD,EAAAA,gBAKX0D,EAAAA,mBAJAsB,SAiBPhB,EAAAA,sBAEeE,EAAAA,sBAHfD,EAAAA,2BAbOvI,kDA8BNkS,EAAAA,UAASrR,KAAA,CAAC,2CCtBb,SAAAwT,YAEEA,EAAAjU,UAAAY,SAAA,uCAPDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,SACVC,SAAA,0yDC4BF,IAAMmT,GAAY,CAChBC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,mBACAC,EAAAA,aACAC,EAAAA,wBA8BF,SAAAC,YACSA,EAAA5C,SAAP,WACE,MAAO,CACL6C,SAAUD,EACVvN,UAAW,KAIRuN,EAAAE,QAAP,WACE,OAAO,IAAIC,EAAAA,kBAAkBH,EAAW5C,aAEnC4C,EAAAI,SAAP,WACE,OAAO,IAAID,EAAAA,kBAAkBH,EAAW5C,uCAvC3C1J,EAAAA,SAAQnI,KAAA,CAAC,CACRoI,aAAc,CACZlI,EACAwD,EACA0J,EACA0E,GACA7E,EACAuG,GACArJ,GAEF9B,QAAOtJ,EAAA,CACL+V,EACAC,EAAAA,WACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,aACAC,GACG1B,GAAS,CAEZ2B,EAAAA,YAAYC,YAGdnO,UAAW,CAET3G,yBCpDF,SAAAA,IAnBQnB,KAAAkW,WAAa,IAAIC,EAAAA,QACjBnW,KAAAoW,QAAU,IAAID,EAAAA,QAENnW,KAAAqW,YAAcrW,KAAKkW,WAAWI,eAC9BtW,KAAAuW,SAAWvW,KAAKoW,QAAQE,sBAExCnV,EAAAhB,UAAAqW,mBAAA,aAIArV,EAAAhB,UAAAsW,iBAAA,SAAiBC,GACVA,GACH1W,KAAKoW,QAAQ9W,KAAK,iCAfvBqB,EAAAA,sECUC,SAAA2D,EAAoBnD,EACVwV,GADU3W,KAAAmB,YAAAA,EACVnB,KAAA2W,aAAAA,EAHV3W,KAAA4W,aAA0C,UAK1CtS,EAAAnE,UAAAY,SAAA,WAAA,IAAAuE,EAAAtF,KACEA,KAAK6W,aAAe7W,KAAKmB,YAAYkV,YAAY7Q,WAAU,SAAAuH,GACzDzH,EAAKsR,aAAe7J,MAIxBzI,EAAAnE,UAAA2W,YAAA,SAAYlU,KAaZ0B,EAAAnE,UAAA0H,YAAA,WACM7H,KAAK6W,cACP7W,KAAK6W,aAAatQ,yCAhCvBvF,EAAAA,UAASJ,KAAA,CAAC,CACTM,SAAA,w8CANOC,UAGcmH,EAAAA,yCCGrB,SAAAxH,YAEAA,EAAAX,UAAAY,SAAA,uCARDC,EAAAA,UAASJ,KAAA,CAAC,CACTM,SAAA,yJCuBA,SAAA6V,EACUpS,EACAqS,EACAvS,GAFAzE,KAAA2E,YAAAA,EACA3E,KAAAgX,SAAAA,EACAhX,KAAAyE,eAAAA,EAbDzE,KAAAiX,UAAoB,EAG7BjX,KAAAkX,mBAA+B,GAE/BlX,KAAAiP,KAAgC,GAYhCjP,KAAAmX,UAA8C,UAI9CJ,EAAA5W,UAAA0H,YAAA,WACM7H,KAAK6W,cACP7W,KAAK6W,aAAatQ,eAKtBwQ,EAAA5W,UAAAY,SAAA,WAAA,IAAAuE,EAAAtF,KACEA,KAAK6W,aAAe7W,KAAK2E,YAAY4R,SAAS/Q,WAAU,SAAAC,GACtDH,EAAK2J,KAAOxJ,MAKhBsR,EAAA5W,UAAAiX,UAAA,WACEpX,KAAKmX,UAAU3X,QAGjBuX,EAAA5W,UAAAkX,aAAA,SAAaC,GACXtX,KAAKmX,UAAUI,OAAOD,EAAO,IAG/BP,EAAA5W,UAAAqX,gBAAA,SAAgB5U,GAEd5C,KAAKkX,mBAAmB1X,KAAKoD,IAG/BmU,EAAA5W,UAAAsQ,KAAA,aASAsG,EAAA5W,UAAAsX,OAAA,aAcAV,EAAA5W,UAAAuX,WAAA,aAQAX,EAAA5W,UAAAwX,WAAA,aAQAZ,EAAA5W,UAAAzB,OAAA,aAMAqY,EAAA5W,UAAAyX,WAAA,SAAWlB,KAQXK,EAAA5W,UAAAuM,MAAA,uCA5GD1L,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,gBACVC,SAAA,60DANOC,UAFA0W,EAAAA,gBAImCxP,EAAAA,qDASzCqF,EAAAA,2BCPD,SAAAwE,EAAoBvN,GAAA3E,KAAA2E,YAAAA,SAEpBuN,EAAA/R,UAAAgS,QAAA,WACEnS,KAAK2E,YAAY6R,gDALpB7V,EAAAA,uDAFQQ,wBAaP,SAAA2W,EAAoBnT,GAAA3E,KAAA2E,YAAAA,SAEpBmT,EAAA3X,UAAAgS,QAAA,SAAQ4F,GACN,IAAIC,EAAQD,EAAM5N,OAAO6N,MACrBA,GAAOhY,KAAK2E,YAAY8R,iBAAiBuB,8BANhDrX,EAAAA,uDAXQQ,MAsBT,IAAMiR,GAAiB,CACrB,CACEC,KAAM,GACNC,UAAWxR,GACXyR,SAAU,CACR,CACEF,KAAM,GACNC,UAAWhO,GACX6N,QAAS,CAAED,YAAaA,KAE1B,CACEG,KAAM,SACNC,UAAWyE,GACX5E,QAAS,CAAE2F,kBAAmBA,WActC,kCARC/O,EAAAA,SAAQnI,KAAA,CAAC,CACRqI,QAAS,CAACuJ,EAAAA,aAAaC,SAASL,KAChChJ,QAAS,CAACoJ,EAAAA,cACV1K,UAAW,CACToK,GACA4F,0BC9BJ,SAAAG,YACSA,EAAAxF,SAAP,WACE,MAAO,CACL6C,SAAU2C,EACVnQ,UAAW,KAIRmQ,EAAA1C,QAAP,WACE,OAAO,IAAIC,EAAAA,kBAAkByC,EAAoBxF,aAE5CwF,EAAAxC,SAAP,WACE,OAAO,IAAID,EAAAA,kBAAkByC,EAAoBxF,uCArBpD1J,EAAAA,SAAQnI,KAAA,CAAC,CACRoI,aAAc,CAAC1E,GAAexD,GAAiBiW,IAC/C9N,QAAS,CACPyM,EACAwC,EAAAA,YACAC,IAEFrQ,UAAW,CAAC3G,eCNQkU,GAAWI,SAAQ2C,GAInBH,GAAoBxC,SAZpCrD,GAAiB,CACrB,CAAEC,KAAM,GAAIgG,UAAW,OAAQC,WAAY,QAC3C,CACEjG,KAAM,GACNkG,YAAa,CAACC,EAAAA,UAAWC,EAAAA,iBACzBlG,SAAU,CACR,CACEF,KAAM,OACNqG,aAAYC,IAEd,CACEtG,KAAM,MACNqG,aAAYN,UAcpB,kCAJCrP,EAAAA,SAAQnI,KAAA,CAAC,CACPqI,QAAS,CAACuJ,EAAAA,aAAaC,SAASL,KACjChJ,QAAS,CAACoJ,EAAAA,oCCdZ,SAAAoG,YACSA,EAAAnG,SAAP,WACE,MAAO,CACL6C,SAAUsD,EACV9Q,UAAW,KAIR8Q,EAAArD,QAAP,WACE,OAAO,IAAIC,EAAAA,kBAAkBoD,EAAenG,uCAnB/C1J,EAAAA,SAAQnI,KAAA,CAAC,CACRqI,QAAS,CACPyM,EACAC,EAAAA,WACAkD,IAEFzP,QAAS,CACPsM","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nexport namespace Post\r\n{\r\n    export interface State\r\n    {\r\n        Blog: Fs.Cms.Blogs.Dtos.BlogDto;\r\n    }\r\n}\r\n  \r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostStateService {\r\n    private store = new InternalStore({} as Post.State);\r\n\r\n    getBlog(): Observable<Fs.Cms.Blogs.Dtos.BlogDto> {\r\n        return this.store.sliceState(state => state.Blog);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n        this.store.patch({ Blog: blog })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injector, Injectable, Type } from '@angular/core';\r\nimport { Fs, Volo } from '@fs-tw/cms/proxy';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class PageService {\r\n  private blogService: Fs.Cms.Blogs.BlogsApiService;\r\n  private postService: Fs.Cms.Posts.PostsApiService;\r\n  private directoriesApiService: Fs.Abp.File.Directories.DirectoriesApiService;\r\n  private fileDescriptorService: Volo.FileManagement.Files.FileDescriptorService;\r\n  \r\n  constructor(private injector: Injector) {\r\n    this.blogService = injector.get(Fs.Cms.Blogs.BlogsApiService);\r\n    this.postService = injector.get(Fs.Cms.Posts.PostsApiService);\r\n    this.directoriesApiService = injector.get(\r\n      Fs.Abp.File.Directories.DirectoriesApiService\r\n    );\r\n    this.fileDescriptorService = injector.get(\r\n      Volo.FileManagement.Files.FileDescriptorService\r\n    );\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({ id: id });\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deleteBlog(id:string){\r\n    return this.blogService.deleteByBlogPrimaryKey({id});\r\n  }\r\n  //#endregion\r\n\r\n  //#region File\r\n  findByProviderByKeyAndGroup(key: string, group?: string) {\r\n    return this.directoriesApiService.findByProviderByKeyAndGroup(key, group);\r\n  }\r\n\r\n  deleteFile(id: string) {\r\n    return this.fileDescriptorService.deleteById(id);\r\n  }\r\n\r\n  getFileDescriptor(id:string){\r\n    return this.fileDescriptorService.getById(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n\r\n  getPostById(id: string) {\r\n    return this.postService.getByPostPrimaryKey({ id: id });\r\n  }\r\n\r\n  createPost(input: Fs.Cms.Posts.Dtos.PostCreateDto) {\r\n    return this.postService.createByPostCreate(input);\r\n  }\r\n\r\n  updatePost(id: string, input: Fs.Cms.Posts.Dtos.PostUpdateDto) {\r\n    return this.postService.updateByPostPrimaryKeyAndPostUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.postService.deleteByPostPrimaryKey({ id });\r\n  }\r\n  //#endregion\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n\r\n@Component({\r\n  selector: 'fs-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Post,\r\n    },\r\n  ],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  sub: Subscription;\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n  hookToQueryScribe: Subscription;\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",  \r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n\r\n  constructor(\r\n    private extensionsService: ExtensionsService,\r\n    private router: Router,\r\n    private toasterService: ToasterService,\r\n    private confirmationService: ConfirmationService,\r\n    private pageService: PageService,\r\n    public readonly list: ListService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private postStateService: PostStateService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.extensionsService.Actions$[eCmsRouteNames.Post].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.gotoDetail(x.record.id)\r\n            break;\r\n          case 'Delete':\r\n            this.deleteItem(x.record)\r\n            break;\r\n        }\r\n      });\r\n\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.sub = this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"全部\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.hookToQuery();\r\n    })\r\n  }\r\n\r\n  gotoDetail(id?: string) {\r\n    if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n    else this.router.navigate([\"/cms/post/detail\"], {\r\n      queryParams: {\r\n        blogId: this.postParams.blogId\r\n      }\r\n    });\r\n  }\r\n\r\n  hookToQuery() {\r\n\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    const query = (query) => {\r\n      query.keyword = this.postParams.keyword;\r\n      query.blogId = this.postParams.blogId;\r\n      return this.pageService.getPostsByBlogId(query)\r\n    };\r\n\r\n    this.hookToQueryScribe = this.list.hookToQuery(query).subscribe((res) => {\r\n      this.posts = res.items;\r\n      this.totalCount = res.totalCount;\r\n    });\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          let files = item.attachmentFileInfos.map(x => x.fileId)\r\n          let images = item.postImages.map(x => x.imageId);\r\n          let deleteFileActions = files.concat(images).map(x => this.pageService.deleteFile(x));\r\n          forkJoin(deleteFileActions).subscribe();\r\n\r\n          this.pageService.deletePost(item.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { EnvironmentService } from '@abp/ng.core'\r\n\r\n\r\n@Pipe({\r\n    name: 'getFileById'\r\n})\r\nexport class GetFileByIdPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private environmentService: EnvironmentService,\r\n    ) { }\r\n\r\n    transform(value: string): any {\r\n        return this.environmentService.getApiUrl() + \"/api/file-management/file-descriptor/file-content?id=\" + value\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n// import { NgAlainBasicModule } from '@fs-tw/theme-ng-alain/basic';\r\nimport { ThemeAlainMsSharedModule } from '@fs-tw/theme-alain-ms/shared';\r\nimport { UiExtensionsModule } from '@fs-tw/theme-alain-ms/shared/extensions'\r\nimport { GetFileByIdPipe } from './pipe/get-file.pipe';\r\nconst COMPONENT = [GetFileByIdPipe]\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENT],\r\n  imports: [\r\n    // NgAlainBasicModule,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ],\r\n  exports: [\r\n    // NgAlainBasicModule,\r\n    ...COMPONENT,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, RestService, AuditedEntityDto } from '@abp/ng.core';\r\n// import { FileDescriptorDto } from '@volo/abp.ng.file-management'\r\n\r\n// TODO USE @volo/abp.ng.file-management FileDescriptorDto\r\nexport interface FileDescriptorDto extends AuditedEntityDto<string> {\r\n  directoryId?: string;\r\n  name: string;\r\n  mimeType: string;\r\n  size: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FileService {\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private environmentService: EnvironmentService,\r\n  ) {\r\n  }\r\n\r\n  getFileUrl(id) {\r\n    if (!id) return \"\";\r\n    return this.environmentService.getApiUrl() + \"/api/file-management/file-descriptor/file-content?id=\" + id\r\n  }\r\n\r\n  uploadFile(file: File, directoryId: string) {    \r\n    const formData = new FormData();\r\n    formData.append(\"relativePath\", null);\r\n    formData.append(\"file\", file);\r\n    formData.append(\"name\", file.name);   \r\n    formData.append(\"type\", file.type);\r\n    return this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/upload`,\r\n      body: formData,\r\n      params: { directoryId: directoryId }\r\n    });\r\n  }\r\n\r\n\r\n  getFileBlobById(id: string) {\r\n    return this.restService.request<any, Blob>({\r\n      method: 'GET',\r\n      url: `/api/file-management/file-descriptor/file-content`,\r\n      params: { id },\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { FileService } from '../../../shared'\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { ConfigStateService,EnvironmentService } from '@abp/ng.core';\r\n\r\nexport class ImageFile {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class SaveFile {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\nclass ViewImage {\r\n  image: ImageFile;\r\n  isVisabled: boolean;\r\n\r\n  constructor() {\r\n    this.image = new ImageFile();\r\n    this.isVisabled = false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'image-picker',\r\n  templateUrl: './image-picker.component.html',\r\n  styleUrls: ['./image-picker.component.css']\r\n})\r\nexport class ImagePickerComponent implements OnInit {\r\n\r\n  /** 縮圖寬度，單位 px，預設 104px */\r\n  @Input() imageWidth: string = '104px';\r\n\r\n  /** 縮圖高度，單位 px ，預設 104px */\r\n  @Input() imageHeight: string = '104px';\r\n\r\n  /** 外框寬度，單位 px ，預設 104px */\r\n  @Input() borderWidth: string = '104px';\r\n\r\n  /** 外框高度，單位 px ，預設 104px */\r\n  @Input() borderHeight: string = '104px';\r\n\r\n  /** 上傳最大數量 */\r\n  @Input() maxImageCount: number = null;\r\n\r\n  /** 是否可同時選多張圖片 */\r\n  @Input() isMultiple: boolean = true;\r\n\r\n  /** 顯示圖片 Template ，縮圖比例功能會失效 */\r\n  @Input() imageTemplate: TemplateRef<any>;\r\n\r\n  /** 上傳圖片 Template，可完整替換成其他形式，如︰按鈕上傳 */\r\n  @Input() uploadTemplate: TemplateRef<any>;\r\n  \r\n  /** 上傳按鈕文字 Template，若 uploadTemplate 有值則無效 */\r\n  @Input() uploadTextTemplate: TemplateRef<any>;\r\n\r\n  /** 是否排列在同一行，同一行時行寬同 imageWidth */\r\n  @Input() inLine: boolean = true;\r\n\r\n  /** 上傳按鈕顯示於前面 */\r\n  @Input() showFrontButton: boolean = true;\r\n\r\n  /** 原已上傳圖片 */\r\n  @Input() existFiles: ImageFile[] = [];\r\n\r\n  /** 原已上傳圖片被刪除的檔名 */\r\n  private deleteFiles: string[] = [];\r\n\r\n  /** 本次上傳所顯示圖片 */\r\n  showFiles: ImageFile[] = [];\r\n\r\n  /** 本次上傳圖片 */\r\n  private uploadFiles: NzUploadFile[] = [];\r\n\r\n  /** 顯示預覽圖 modal */\r\n  viewImage: ViewImage = new ViewImage();\r\n\r\n  get canUpload(): boolean {\r\n    let imageNumber = this.existFiles.length + this.uploadFiles.length;\r\n    return this.maxImageCount == null || imageNumber < this.maxImageCount;\r\n  }\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private environmentService:EnvironmentService,\r\n    private fileService: FileService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.existFiles = this.existFiles\r\n      .filter(x => x.fileUrl)\r\n      .map(x => new ImageFile(x.fileName, this.fileService.getFileUrl(x.fileUrl)));\r\n\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n    this.deleteFiles = [];\r\n  }\r\n\r\n  clear() {\r\n    this.existFiles = [];\r\n    this.deleteFiles = [];\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  // private getHttpUrl(url: string): string {\r\n  //   let result = url;\r\n  //   if (url.includes(\"http\")) return result;\r\n\r\n  //   return this.environmentService.getApiUrl() + url;\r\n  // }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n      return false;\r\n    }\r\n\r\n    let fileName = file.name;\r\n\r\n    let hasExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let hasShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    if (hasExistImage || hasShowImage) return false;\r\n\r\n\r\n    let imgFile: any = file;\r\n    this.getBase64(imgFile, (img) => {\r\n      if (!this.canUpload) {\r\n        this.toasterService.error(\"圖片數已達上限\");\r\n        return;\r\n      }\r\n\r\n      this.uploadFiles.push(imgFile);\r\n      this.showFiles.push(new ImageFile(fileName, img));\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  private getBase64(img: File, callback: (img: string) => void): void {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    let inExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let inShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n\r\n    // 現有圖片刪除\r\n    if (inExistImage) {\r\n      this.existFiles = this.existFiles.filter(x => x.fileName != fileName);\r\n      this.deleteFiles.push(fileName);\r\n      return;\r\n    }\r\n\r\n    // 上傳圖片刪除\r\n    if (inShowImage) {\r\n      this.showFiles = this.showFiles.filter(x => x.fileName != fileName);\r\n      this.uploadFiles = this.uploadFiles.filter(x => x.name != fileName);\r\n    }\r\n\r\n  }\r\n\r\n  controllModal(state: boolean, image: ImageFile = new ImageFile()) {  \r\n    this.viewImage.image = image;\r\n    this.viewImage.isVisabled = state;\r\n  }\r\n\r\n  getDeleteFileNames(): string[] {\r\n    return this.deleteFiles;\r\n  }\r\n\r\n\r\n  getNewUploadFiles():SaveFile[]{\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    return updateFiles;\r\n  }\r\n\r\n  getUploadFiles(): SaveFile[] {\r\n    let existFiles = this.existFiles.filter(x => !this.deleteFiles.includes(x.fileName)).map(x => new SaveFile(x.fileName, x.fileUrl, null));\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    \r\n    return existFiles.concat(updateFiles);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n\r\nexport class FileInfo {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class FileData {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  @Input()\r\n  existFiles: FileInfo[] = [];\r\n\r\n  fileList: NzUploadFile[] = [];\r\n\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let exist = this.existFiles.findIndex(x => x.fileName == file.name) > -1 ||\r\n      this.fileList.findIndex(x => x.name == file.name) > -1;\r\n    if (exist) return false;\r\n    this.fileList = this.fileList.concat(file);\r\n    return false;\r\n  };\r\n\r\n  delete(url) {\r\n    this.confirmationService\r\n      .warn('確認刪除嗎？', '系統訊息')\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.existFiles = this.existFiles.filter(x => x != url);\r\n        }\r\n      });\r\n  }\r\n\r\n  getNewUploadFiles(): FileData[] {\r\n    let updateFiles: FileData[] = this.fileList.map((x: any) => new FileData(x.name, '', x));\r\n    return updateFiles;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport * as dns from 'date-fns'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../image-picker/image-picker.component';\r\nimport { FileService, FileDescriptorDto } from '../../../shared'\r\nimport { map } from 'rxjs/operators';\r\nimport { FileInfo } from '../upload-file/upload-file.component';\r\n\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  @ViewChild(\"DefaultUploadFile\") defaultUploadFile: UploadFileComponent;\r\n  postId: string;\r\n  data: Fs.Cms.Posts.Dtos.PostDto;\r\n  dateRange: Date[] = [new Date(), new Date()];\r\n  defaultImages: ImageFile[] = [];\r\n  defaultFiles: FileInfo[] = [];\r\n  blogs: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n\r\n  isLoading: boolean = false;\r\n  directory\r\n  coverImage: string = '';\r\n  contentFileName = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fileService: FileService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pageService: PageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\r\n    this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Posts\", this.postId ? this.postId : this.getRand()).subscribe(x => {\r\n      this.directory = x;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.getPost();\r\n    this.getBlogs();\r\n  }\r\n\r\n  getPost() {\r\n    this.data = {\r\n      blogId: null,\r\n      title: '',\r\n      subtitle: '',\r\n      url: '',\r\n      content: '',\r\n      disable: false,\r\n      startTime: '',\r\n      endTime: '',\r\n      displayMode: 0,\r\n      sequence: 0,\r\n      attachmentFileInfos: [],\r\n      postImages: []\r\n    } as Fs.Cms.Posts.Dtos.PostDto;\r\n    this.contentFileName = \"\";\r\n    this.dateRange = [new Date(), new Date()];\r\n\r\n    this.defaultImages = [];\r\n    this.defaultFiles = [];\r\n    this.coverImage = ''\r\n\r\n    if (this.postId) {\r\n      this.pageService.getPostById(this.postId).subscribe((x) => {\r\n        this.data = x;\r\n        let st = x.startTime ? new Date(x.startTime) : new Date();\r\n        let ed = x.endTime ? new Date(x.endTime) : new Date();\r\n        this.dateRange = [st, ed];\r\n\r\n        this.defaultImages = x.postImages.map(y => new ImageFile(y.name, y.imageId));\r\n        this.defaultFiles = x.attachmentFileInfos.map(y => new FileInfo(y.name, this.fileService.getFileUrl(y.fileId)))\r\n        let coverImageIndex = x.postImages.findIndex(y => y.isCover);\r\n        if (coverImageIndex > -1) this.coverImage = x.postImages[coverImageIndex].imageId;\r\n\r\n        if (x.content) {\r\n          this.pageService.getFileDescriptor(x.content).subscribe(x => {\r\n            this.contentFileName = x.name;\r\n          })\r\n\r\n          this.fileService.getFileBlobById(x.content).subscribe(data => {\r\n            const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n            let reader = new FileReader();\r\n            reader.onload = () => {\r\n              this.data.content = reader.result.toString();\r\n            }\r\n            reader.readAsText(blob);\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  getBlogs() {\r\n    let input = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogs = x.items;\r\n      if (!this.postId) this.data.blogId = this.activatedRoute.snapshot.queryParamMap.get('blogId');\r\n    })\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    this.confirmationService.warn(`確定刪除 ${fileName} 嗎？`, \"系統訊息\")\r\n      .subscribe((result) => {\r\n        if (result != Confirmation.Status.confirm) return;\r\n\r\n        this.defaultImagePicker.deleteFile(fileName);\r\n      })\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  save() {\r\n    // TODO: 刪除檔案、加標籤\r\n    // let deleteImages = this.defaultImagePicker.getDeleteFileNames();\r\n    // let deleteTargets = item.postImages.filter(x => deleteImages.some(y => y == x.name));\r\n    // let deleteActions = deleteTargets.map(x=>{\r\n    //   return this.pageService.deleteFile(x.imageId);\r\n    // })\r\n    // forkJoin(deleteActions).subscribe(x=>{})\r\n\r\n    let item: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(this.data);\r\n    item.startTime = this.dateRange[0].toLocalISOString();\r\n    item.endTime = this.dateRange[1]?.toLocalISOString();\r\n\r\n\r\n    let contentAction$ = of(\"\");\r\n    if (item.displayMode == Fs.Cms.Posts.DisplayMode.內文) {\r\n      // let now = new Date();\r\n      const blob = new Blob([item.content], { type: \"text/plain;charset=utf-8\" });\r\n      let useContentFileName = dns.format(new Date(), 'yyyyMMddHHmmss') + '-' + this.getRand() + \".txt\"//now.toLocaleDateString() + \"_\" + now.toLocaleTimeString() + \"_\" + (Math.floor(Math.random() * 100) + 1) + \".txt\";\r\n      if (this.contentFileName) useContentFileName = this.contentFileName;\r\n      let file = this.blobToFile(blob, useContentFileName);\r\n      contentAction$ = this.fileService.uploadFile(file, this.directory.id).pipe(map(x => x.id));\r\n    }\r\n\r\n\r\n    let imagesAction = this.uploadImage$(item);\r\n    let filesAction = this.uploadFiles$(item);\r\n    forkJoin([imagesAction, filesAction, contentAction$]).subscribe(x => {\r\n      item.postImages = x[0];\r\n      item.attachmentFileInfos = x[1];\r\n      item.content = x[2];\r\n      this.savePost(item);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  private blobToFile = (theBlob: Blob, fileName: string): File => {\r\n    return new File([theBlob], fileName, { type: \"text/plain;charset=utf-8\" })\r\n  }\r\n\r\n\r\n  uploadFiles$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.AttachmentFileInfo[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadFiles = this.defaultUploadFile.getNewUploadFiles();\r\n\r\n    let existFileNames = this.defaultUploadFile.existFiles.map(x => x.fileName);\r\n    domainItem.attachmentFileInfos = domainItem.attachmentFileInfos.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadFiles.length == 0) {\r\n      return of(domainItem.attachmentFileInfos);\r\n    }\r\n\r\n    let fileActions = newUploadFiles.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.AttachmentFileInfo[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          fileId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.attachmentFileInfos)\r\n    }))\r\n  }\r\n\r\n  uploadImage$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.PostImageDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadImages = this.defaultImagePicker.getNewUploadFiles();\r\n\r\n\r\n    let existFileNames = this.defaultImagePicker.existFiles.map(x => x.fileName);\r\n    domainItem.postImages = domainItem.postImages.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadImages.length == 0) {\r\n      return of(domainItem.postImages);\r\n    }\r\n\r\n\r\n    let fileActions = newUploadImages.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.PostImageDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          isCover: (this.coverImage == y.name),\r\n          imageId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.postImages)\r\n    }))\r\n\r\n  }\r\n\r\n  savePost(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    let action: Observable<any>;\r\n    if (!this.postId) {\r\n      action = this.pageService.createPost(item);\r\n    } else {\r\n      action = this.pageService.updatePost(this.postId, item);\r\n    }\r\n\r\n    action.subscribe((x) => {\r\n      this.router.navigate([\"cms/post\"]);\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve } from '@angular/router';\r\n\r\nimport { PostStateService } from './providers/post-state.service';\r\n\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DetailComponent } from './components/detail/detail.component';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private postStateService: PostStateService) { }\r\n\r\n  resolve() {\r\n    return this.postStateService.setBlog(null);\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    resolve: { 'RouteConfig': RouteConfig },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent\r\n      },\r\n      {\r\n        path:'detail',\r\n        component:DetailComponent,\r\n      },\r\n      {\r\n        path:'detail/:postId',\r\n        component:DetailComponent,\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule], \r\n  providers:[\r\n    RouteConfig\r\n  ]\r\n})\r\nexport class PostRoutingModule { }\r\n","import { Component, Injector, OnInit, ViewChild,OnDestroy } from '@angular/core';\r\nimport { FileService } from '../../../../shared'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { PostStateService } from '../../../providers/post-state.service';\r\nimport { ListService } from '@abp/ng.core';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER,\r\n  FormPropData,\r\n  generateFormFromProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\nimport { Observable, Subscriber, Subscription } from 'rxjs';\r\nimport {\r\n  Confirmation,\r\n  ConfirmationService,\r\n  ToasterService,\r\n} from '@abp/ng.theme.shared';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'fs-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Blog,\r\n    },\r\n  ],\r\n})\r\nexport class ListComponent implements OnInit,OnDestroy {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  datas: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n  count = 0;\r\n  defaultImages: ImageFile[] = [];\r\n  isVisible = false;\r\n  form: FormGroup;\r\n  selected: Fs.Cms.Blogs.Dtos.BlogDto = {} as Fs.Cms.Blogs.Dtos.BlogDto\r\n  directory;\r\n  defaultSelectId = null;\r\n  sub: Subscription;\r\n  constructor(\r\n    private router: Router,\r\n    private extensionsService: ExtensionsService,\r\n    private pageService: PageService,\r\n    protected injector: Injector,\r\n    public readonly list: ListService,\r\n    private fileService: FileService,\r\n    private toasterService: ToasterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private confirmationService: ConfirmationService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n    \r\n\r\n    this.activatedRoute.queryParamMap.subscribe(x => {\r\n      this.defaultSelectId = x.get(\"blogId\");\r\n\r\n      this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Blogs\",this.defaultSelectId?this.defaultSelectId:this.getRand()).subscribe(x => {\r\n        this.directory = x;\r\n      })\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    if(this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.extensionsService.Actions$[eCmsRouteNames.Blog].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.edit(x.record.id);\r\n            break;\r\n          case 'Delete':\r\n            this.deleteBlog(x.record)\r\n            break;\r\n          case 'Add':\r\n            this.add();\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n\r\n    let input: Fs.Cms.Blogs.Dtos.BlogGetListDto = {\r\n      skipCount: 0,\r\n      maxResultCount: 10,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    const customerStreamCreator = (query) => {\r\n      return this.pageService.getBlogs(input)\r\n    };\r\n\r\n    this.list.hookToQuery(customerStreamCreator).subscribe((res) => {\r\n      this.datas = res.items;\r\n      this.count = res.totalCount;\r\n      if (this.defaultSelectId) {\r\n        let select = this.datas.find(x => x.id == this.defaultSelectId);\r\n        this.showDetail(select)\r\n      }\r\n    });\r\n  }\r\n\r\n  showDetail(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    if (blog == null) {\r\n      this.router.navigate(['./cms/post'])\r\n      this.postStateService.setBlog(null);\r\n      return;\r\n    }\r\n    this.router.navigate(['./cms/post'], { queryParams: { 'blogId': blog.id } })\r\n    this.postStateService.setBlog(blog);\r\n  }\r\n\r\n  deleteBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？(此Blog下的文章將移至不分類)', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.pageService.deleteBlog(blog.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n            this.router.navigate([\"./cms/post\"])\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();    \r\n    if(deleteImageNames.length>0){\r\n      this.pageService.deleteFile(deleteImageNames[0]).subscribe(()=>{\r\n        this.uploadFile();\r\n      });\r\n    } else this.uploadFile();\r\n    \r\n  }\r\n\r\n\r\n  uploadFile(){\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let fileId = \"\";\r\n    if ((uploadImageInfos.length > 0)) {\r\n      if (this.selected.iconUrl == uploadImageInfos[0].fileName) {\r\n        this.saveBlog(this.selected.iconUrl);\r\n        return;\r\n      }\r\n      this.fileService.uploadFile(uploadImageInfos[0].file, this.directory.id).subscribe(x => {\r\n        fileId = x.id;\r\n        this.saveBlog(fileId);\r\n      })\r\n    } else this.saveBlog(\"\");\r\n  }\r\n\r\n  saveBlog(fileId?) {\r\n    let input = { ...this.selected, ...this.form.value, id: this.selected.id };\r\n    input.iconUrl = fileId;\r\n    let action: Observable<any>;\r\n    if (input.id) action = this.pageService.updateBlog(input.id, input);\r\n    else {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    }\r\n    action.subscribe((x) => {\r\n      this.toasterService.success('修改成功！');\r\n      this.isVisible = false;\r\n      this.list.get();\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as any;\r\n    this.defaultImages = []\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.pageService.getBlogById(id).subscribe(x => {\r\n      this.selected = x;\r\n      this.defaultImages = []\r\n      if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, x.iconUrl))\r\n      this.openModal();\r\n    })\r\n  }\r\n\r\n  buildForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.form = null;\r\n    this.form = generateFormFromProps(data);\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isVisible = true;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { group } from '@angular/animations';\r\n// import { PostTagMapDto, TagGroupDto } from '@fs-tw/cms/proxy';\r\n// import * as _ from 'lodash';\r\n// import { Observable } from 'rxjs';\r\n// import { take } from 'rxjs/operators';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // postTagsDict: { [tagCodeId: string]: PostTagMapDto; } = {};\r\n\r\n  // @Input() postId: string;\r\n\r\n  // @Input()\r\n  // set postTags(val: PostTagMapDto[]) {    \r\n  //   for (let item of val) {\r\n  //     this.postTagsDict[item.tagCodeId] = item;\r\n  //   }\r\n\r\n  //   this.existTagCodeIds = val.map(x => x.tagCodeId);\r\n\r\n  //   this.pageService.getAllTags().pipe(take(1)).subscribe(x => {\r\n  //     this.tagGroups = x;\r\n  //     for (let group of this.tagGroups) {\r\n  //       for (let tag of group.tags) {\r\n  //         if (this.existTagCodeIds.includes(tag.id)) {\r\n  //           tag.check = true;\r\n  //           continue;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // existTagCodeIds: string[] = [];\r\n  // tagGroups: any[] = []\r\n  // constructor(\r\n  //   private pageService: PageService,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // checkParent(group: any) {\r\n  //   group.check = !group.check;\r\n  //   for (let item of group.tags) {\r\n  //     item.check = group.check;\r\n  //   }\r\n\r\n  // }\r\n  // checkChild(tag: any) {\r\n  //   tag.check = !tag.check;\r\n  // }\r\n\r\n\r\n  // save(postId?: string): Observable<any>[] {\r\n  //   if(!this.postId) this.postId = postId;\r\n  //   let tags: any[] = _.flatMap(this.tagGroups, \"tags\").filter(x => x.check);\r\n  //   let deleteTargetIds: string[] = _.xorWith(this.existTagCodeIds, tags.map(x => x.id));\r\n  //   let action: Observable<any>[] = [];\r\n  //   for (let tagCodeId of deleteTargetIds) {\r\n  //     if (this.postTagsDict[tagCodeId]) {\r\n  //       action.push(this.pageService.deletePostTagMap(this.postTagsDict[tagCodeId].id));\r\n  //     } else {\r\n  //       action.push(this.pageService.createPostTagMap(this.postId, tagCodeId));\r\n  //     }\r\n  //   }\r\n  //   return action;\r\n  // }\r\n}\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { SEModule } from '@delon/abc/se';\r\n\r\nimport { PostRoutingModule } from './post-routing.module';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SharedModule } from '../shared/shared.module'\r\n\r\nimport { DetailComponent } from './components/detail/detail.component';\r\nimport { ListComponent } from './components/main/list/list.component';\r\nimport { PageService } from './providers/page.service';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\nimport { ImagePickerComponent } from './components/image-picker/image-picker.component';\r\n\r\nconst NzModules = [\r\n  NzGridModule,\r\n  NzInputModule,\r\n  NzTableModule,\r\n  NzDropDownModule,\r\n  NzButtonModule,\r\n  NzIconModule,\r\n  NzModalModule,\r\n  NzRadioModule,\r\n  NzUploadModule,\r\n  NzSpinModule,\r\n  NzCardModule,\r\n  NzSelectModule,\r\n  NzDatePickerModule,\r\n  NzTabsModule,\r\n  SEModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    MainComponent,\r\n    DetailComponent,\r\n    ListComponent,\r\n    UploadFileComponent,\r\n    TagComponent,\r\n    ImagePickerComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    PostRoutingModule,\r\n    ...NzModules,\r\n    // NgxsModule.forFeature([PostState]),\r\n    QuillModule.forRoot()\r\n\r\n  ],\r\n  providers: [\r\n    // PostsStateService,\r\n    PageService\r\n  ]\r\n})\r\nexport class PostModule {\r\n  static forChild(): ModuleWithProviders<PostModule> {\r\n    return {\r\n      ngModule: PostModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { take, tap } from 'rxjs/operators';\r\n@Injectable()\r\nexport class PageService {\r\n\r\n  private allTagData = new Subject<any[]>();\r\n  private tagData = new Subject<any>();\r\n\r\n  public readonly allTagData$ = this.allTagData.asObservable();\r\n  public readonly tagData$ = this.tagData.asObservable();\r\n\r\n  getTageListFromApi() {\r\n    // this.tagsApiService.tagGroupGetList().pipe(tap(x => this.allTagData.next(x))).subscribe()\r\n  }\r\n\r\n  getTagOneFromApi(groupId: string) {\r\n    if (!groupId) {\r\n      this.tagData.next(null);\r\n      return;\r\n    };\r\n    // this.tagsApiService.tagGroupGetByIdById(groupId).pipe(tap(x => this.tagData.next(x))).subscribe();\r\n  }\r\n\r\n\r\n  constructor(\r\n    //private tagsApiService: Fs.Cms.Tags.TagsApiService\r\n  ) { }\r\n\r\n\r\n  /**call api */\r\n\r\n  // //create\r\n  // createGroup(tagGroup: TagGroupForCreateDto) {\r\n  //   return this.tagsApiService.tagGroupCreateByInput(tagGroup);\r\n  // }\r\n\r\n  // createGroupAndTags(id: string, tags: TagForCreateDto[]) {\r\n  //   return this.tagsApiService.tagGroupAddTagsByIdAndTags(id, tags);\r\n  // }\r\n\r\n  // // update\r\n  // updateGroup(id: string, newTagGroupName: string) {\r\n  //   return this.tagsApiService.tagGroupUpdateByIdAndInput(id, { tagGroupName: newTagGroupName });\r\n  // }\r\n\r\n  // updateTag(id: string, newtagName: string) {\r\n  //   return this.tagsApiService.putTagByIdAndInput(id, { name: newtagName });\r\n  // }\r\n\r\n  // // delate\r\n  // deleteGroup(groupId: string) {\r\n  //   return this.tagsApiService.tagGroupDeleteById(groupId)\r\n  // }\r\n\r\n  // delteTag(tagId: string) {\r\n  //   return this.tagsApiService.tagDeleteById(tagId);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { PageService } from '../../providers/page.service';\r\nimport {Fs } from '@fs-tw/cms/proxy';\r\nimport { Subscription } from 'rxjs';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n@Component({\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  tagGroupList: Fs.Cms.Tags.Dtos.TagDto[] = [];\r\n  subscription: Subscription;\r\n  constructor(private PageService: PageService,\r\n    private confirmation: ConfirmationService,) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.PageService.allTagData$.subscribe(result => {\r\n      this.tagGroupList = result;\r\n    })\r\n  }\r\n\r\n  deleteGroup(id: string) {\r\n    // this.confirmation\r\n    //   .warn(`確認要刪除嗎？`, '系統訊息')\r\n    //   .pipe(\r\n    //     filter(res => res === Confirmation.Status.confirm),\r\n    //     switchMap(() => this.PageService.deleteGroup(id)),\r\n    //     take(1)\r\n    //   )\r\n    //   .subscribe(() => {\r\n    //     this.PageService.getTageListFromApi();\r\n    //   });\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { Location } from '@angular/common'\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { tap } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'fs-tag-detail',\r\n  templateUrl: './tag-detail.component.html',\r\n  styleUrls: ['./tag-detail.component.less'],\r\n})\r\nexport class TagDetailComponent implements OnInit {\r\n\r\n  @Input() isCreate: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  deleteTargetTagIds: string[] = []\r\n\r\n  data: Fs.Cms.Tags.Dtos.TagDto = {\r\n   \r\n   \r\n  } as any;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private location: Location,\r\n    private toasterService: ToasterService,\r\n  ) { }\r\n\r\n\r\n  inputList:  Fs.Cms.Tags.Dtos.TagCreateDto[] = [\r\n    // { name: '' }\r\n  ];\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.pageService.tagData$.subscribe(x => {\r\n      this.data = x;\r\n    })\r\n  }\r\n\r\n\r\n  addOption() {\r\n    this.inputList.push();\r\n  }\r\n\r\n  removeOption(index: number) {\r\n    this.inputList.splice(index, 1);\r\n  }\r\n\r\n  removeOldOption(id: string) {\r\n    // this.data.tags = this.data.tags.filter(x => x.id != id);\r\n    this.deleteTargetTagIds.push(id);\r\n  }\r\n\r\n  save() {\r\n    // if (this.inputList.filter(x => x.name == '').length > 0 && this.data.tagGroupName != '') {\r\n    //   this.toasterService.error(\"不能有空值！\")\r\n    //   return;\r\n    // }\r\n    // if (this.isCreate) this.create()\r\n    // else this.update();\r\n  }\r\n\r\n  update() {\r\n    // this.pageService.updateGroup(this.data.id, this.data.tagGroupName).subscribe(x => {\r\n    //   let createTarget = this.pageService.createGroupAndTags(this.data.id, this.inputList);\r\n    //   let target = this.updateTags().concat(this.deleteTags());\r\n    //   target.push(createTarget)\r\n    //   forkJoin(target).subscribe(()=>{\r\n    //     this.location.back();\r\n    //     this.toasterService.success(\"修改成功！\")\r\n    //   })\r\n      \r\n    // })\r\n  }\r\n\r\n\r\n  updateTags() {\r\n    // let obsList = this.data.tags.map(x => {\r\n    //   return this.pageService.updateTag(x.id, x.name)\r\n    // });\r\n    // return obsList\r\n    // forkJoin(obsList).subscribe();\r\n  }\r\n\r\n  deleteTags() {\r\n    // let obsList = this.deleteTargetTagIds.map(x => {\r\n    //   return this.pageService.delteTag(x);\r\n    // })\r\n    // return obsList;\r\n    // forkJoin(obsList).subscribe()\r\n  }\r\n\r\n  create() {\r\n    // this.pageService.createGroup({\r\n    //   tagGroupName: this.data.tagGroupName\r\n    // }).pipe(tap(x => this.createTags(x.id))).subscribe()\r\n  }\r\n\r\n  createTags(groupId: string) {\r\n    // this.pageService.createGroupAndTags(groupId, this.inputList).subscribe(() => {\r\n    //   this.pageService.getTageListFromApi();\r\n    //   this.toasterService.success(\"新增成功！\");\r\n    //   this.clear();\r\n    // })\r\n  }\r\n\r\n  clear() {\r\n    // this.inputList = [\r\n    //   { name: '' }\r\n    // ];\r\n    // this.deleteTargetTagIds = [];\r\n    // this.data = {\r\n    //   id: '',\r\n    //   tagGroupName: '',\r\n    //   tags: [\r\n    //     {\r\n    //       id: '',\r\n    //       name: ''\r\n    //     }\r\n    //   ]\r\n    // };\r\n  }\r\n}\r\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { PageService } from './providers/page.service';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve() {\r\n    this.pageService.getTageListFromApi();\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DetailRouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let tagId = route.params.tagId;\r\n    if (tagId) this.pageService.getTagOneFromApi(tagId);\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent,\r\n        resolve: { RouteConfig: RouteConfig },\r\n      },\r\n      {\r\n        path: ':tagId',\r\n        component: TagDetailComponent,\r\n        resolve: { DetailRouteConfig: DetailRouteConfig }\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    RouteConfig,\r\n    DetailRouteConfig\r\n  ]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\n\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { LazyModuleFactory } from '@abp/ng.core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { PageService } from './providers/page.service';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, LayoutComponent, TagDetailComponent],\r\n  imports: [\r\n    SharedModule,\r\n    NzTagModule,\r\n    TagManagementRoutingModule\r\n  ],\r\n  providers: [PageService]\r\n})\r\nexport class TagManagementModule {\r\n  static forChild(): ModuleWithProviders<TagManagementModule> {\r\n    return {\r\n      ngModule: TagManagementModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { PostModule } from './post/post.module';\r\nimport { TagManagementModule } from './tag-management/tag-management.module'\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'post' },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        loadChildren: PostModule.forEarly\r\n      },\r\n      {\r\n        path: 'tag',\r\n        loadChildren: TagManagementModule.forEarly\r\n      },\r\n      // {\r\n      //   path: 'storage',\r\n      //   loadChildren: StorageModule.forEarly\r\n      // }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsAdminRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { CmsAdminRoutingModule } from './cms-admin-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    CmsAdminRoutingModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CmsAdminModule {\r\n  static forChild(): ModuleWithProviders<CmsAdminModule> {\r\n    return {\r\n      ngModule: CmsAdminModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<CmsAdminModule> {\r\n    return new LazyModuleFactory(CmsAdminModule.forChild());\r\n  }\r\n\r\n}\r\n"]}