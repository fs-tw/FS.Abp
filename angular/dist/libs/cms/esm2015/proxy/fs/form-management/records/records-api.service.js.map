{"version":3,"file":"records-api.service.js","sourceRoot":"","sources":["../../../../../../../../libs/cms/proxy/src/fs/form-management/records/records-api.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;AAK3C,MAAM,OAAO,iBAAiB;IA0B5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAzB5C,YAAO,GAAG,SAAS,CAAC;QAEpB,2BAAsB,GAAG,CAAC,aAA+B,EAAE,EAAE,CAC3D,IAAI,CAAC,WAAW,CAAC,OAAO,CAA4C;YAClE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,qCAAqC;YAC1C,MAAM,EAAE,EAAE,MAAM,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,aAAa,CAAC,SAAS,EAAE,cAAc,EAAE,aAAa,CAAC,cAAc,EAAE;SACvL,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,+BAA0B,GAAG,CAAC,iBAAuC,EAAE,EAAE,CACvE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAgD;YACtE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,0CAA0C;YAC/C,MAAM,EAAE,EAAE,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,OAAO,EAAE,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,iBAAiB,CAAC,SAAS,EAAE,cAAc,EAAE,iBAAiB,CAAC,cAAc,EAAE;SAC3M,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,YAAO,GAAG,GAAG,EAAE,CACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAgB;YACtC,MAAM,EAAE,SAAS;YACjB,GAAG,EAAE,8BAA8B;SACpC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAEkB,CAAC;;;;YA7BjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW","sourcesContent":["import type { MetaData, RecordGetListDto, RecordItemGetListDto, RecordItemWithDetailsDto, RecordWithDetailsDto } from './dtos/models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecordsApiService {\r\n  apiName = 'Default';\r\n\r\n  getListByRecordGetList = (RecordGetList: RecordGetListDto) =>\r\n    this.restService.request<any, PagedResultDto<RecordWithDetailsDto>>({\r\n      method: 'GET',\r\n      url: `/api/form-management/records/record`,\r\n      params: { fields: RecordGetList.fields, value: RecordGetList.value, sorting: RecordGetList.sorting, skipCount: RecordGetList.skipCount, maxResultCount: RecordGetList.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getListByRecordItemGetList = (RecordItemGetList: RecordItemGetListDto) =>\r\n    this.restService.request<any, PagedResultDto<RecordItemWithDetailsDto>>({\r\n      method: 'GET',\r\n      url: `/api/form-management/records/record-item`,\r\n      params: { fields: RecordItemGetList.fields, value: RecordItemGetList.value, sorting: RecordItemGetList.sorting, skipCount: RecordItemGetList.skipCount, maxResultCount: RecordItemGetList.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  options = () =>\r\n    this.restService.request<any, MetaData>({\r\n      method: 'OPTIONS',\r\n      url: `/api/form-management/records`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n"]}