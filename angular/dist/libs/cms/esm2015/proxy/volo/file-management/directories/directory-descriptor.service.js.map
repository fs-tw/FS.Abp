{"version":3,"file":"directory-descriptor.service.js","sourceRoot":"","sources":["../../../../../../../../libs/cms/proxy/src/volo/file-management/directories/directory-descriptor.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;AAK3C,MAAM,OAAO,0BAA0B;IAyDrC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAxD5C,YAAO,GAAG,gBAAgB,CAAC;QAE3B,kBAAa,GAAG,CAAC,KAA2B,EAAE,EAAE,CAC9C,IAAI,CAAC,WAAW,CAAC,OAAO,CAA8B;YACpD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,2CAA2C;YAChD,IAAI,EAAE,KAAK;SACZ,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,eAAU,GAAG,CAAC,EAAU,EAAE,EAAE,CAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY;YAClC,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,6CAA6C,EAAE,EAAE;SACvD,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,YAAO,GAAG,CAAC,EAAU,EAAE,EAAE,CACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAA8B;YACpD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,6CAA6C,EAAE,EAAE;SACvD,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,sBAAiB,GAAG,CAAC,KAAmC,EAAE,EAAE,CAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAA2C;YACjE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,2CAA2C;YAChD,MAAM,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE;SACvE,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,sBAAiB,GAAG,CAAC,QAAgB,EAAE,EAAE,CACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAiD;YACvE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,2DAA2D;YAChE,MAAM,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE;SAC/B,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,gBAAW,GAAG,CAAC,KAAyB,EAAE,EAAE,CAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAA8B;YACpD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,gDAAgD;YACrD,IAAI,EAAE,KAAK;SACZ,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,uBAAkB,GAAG,CAAC,EAAU,EAAE,KAA2B,EAAE,EAAE,CAC/D,IAAI,CAAC,WAAW,CAAC,OAAO,CAA8B;YACpD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,6CAA6C,EAAE,EAAE;YACtD,IAAI,EAAE,KAAK;SACZ,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAEkB,CAAC;;;;YA5DjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW","sourcesContent":["import type { CreateDirectoryInput, DirectoryContentDto, DirectoryContentRequestInput, DirectoryDescriptorDto, DirectoryDescriptorInfoDto, MoveDirectoryInput, RenameDirectoryInput } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectoryDescriptorService {\n  apiName = 'FileManagement';\n\n  createByInput = (input: CreateDirectoryInput) =>\n    this.restService.request<any, DirectoryDescriptorDto>({\n      method: 'POST',\n      url: `/api/file-management/directory-descriptor`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  deleteById = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/file-management/directory-descriptor/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getById = (id: string) =>\n    this.restService.request<any, DirectoryDescriptorDto>({\n      method: 'GET',\n      url: `/api/file-management/directory-descriptor/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getContentByInput = (input: DirectoryContentRequestInput) =>\n    this.restService.request<any, PagedResultDto<DirectoryContentDto>>({\n      method: 'GET',\n      url: `/api/file-management/directory-descriptor`,\n      params: { filter: input.filter, sorting: input.sorting, id: input.id },\n    },\n    { apiName: this.apiName });\n\n  getListByParentId = (parentId: string) =>\n    this.restService.request<any, ListResultDto<DirectoryDescriptorInfoDto>>({\n      method: 'GET',\n      url: `/api/file-management/directory-descriptor/sub-directories`,\n      params: { parentId: parentId },\n    },\n    { apiName: this.apiName });\n\n  moveByInput = (input: MoveDirectoryInput) =>\n    this.restService.request<any, DirectoryDescriptorDto>({\n      method: 'POST',\n      url: `/api/file-management/directory-descriptor/move`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  renameByIdAndInput = (id: string, input: RenameDirectoryInput) =>\n    this.restService.request<any, DirectoryDescriptorDto>({\n      method: 'POST',\n      url: `/api/file-management/directory-descriptor/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n"]}