{"version":3,"file":"file-descriptor.service.js","sourceRoot":"","sources":["../../../../../../../../libs/cms/proxy/src/volo/file-management/files/file-descriptor.service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CreateFileInput, FileDescriptorDto, FileUploadPreInfoDto, FileUploadPreInfoRequest, MoveFileInput, RenameFileInput } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { RemoteStreamContent } from '../../abp/content/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileDescriptorService {\r\n  apiName = 'FileManagement';\r\n\r\n  createByInput = (input: CreateFileInput) =>\r\n    this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  deleteById = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/file-management/file-descriptor/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  downloadById = (id: string) =>\r\n    this.restService.request<any, RemoteStreamContent>({\r\n      method: 'GET',\r\n      url: `/api/file-management/file-descriptor/download/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getById = (id: string) =>\r\n    this.restService.request<any, FileDescriptorDto>({\r\n      method: 'GET',\r\n      url: `/api/file-management/file-descriptor/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getContentById = (id: string) =>\r\n    this.restService.request<any, number[]>({\r\n      method: 'GET',\r\n      url: `/api/file-management/file-descriptor/content`,\r\n      params: { id: id },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getListByDirectoryId = (directoryId: string) =>\r\n    this.restService.request<any, ListResultDto<FileDescriptorDto>>({\r\n      method: 'GET',\r\n      url: `/api/file-management/file-descriptor`,\r\n      params: { directoryId: directoryId },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getPreInfoByInput = (input: FileUploadPreInfoRequest[]) =>\r\n    this.restService.request<any, FileUploadPreInfoDto[]>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/pre-upload-info`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  moveByInput = (input: MoveFileInput) =>\r\n    this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/move`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  renameByIdAndInput = (id: string, input: RenameFileInput) =>\r\n    this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n"]}