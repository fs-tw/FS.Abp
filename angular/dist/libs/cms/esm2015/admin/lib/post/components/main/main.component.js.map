{"version":3,"file":"main.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAkB,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAKzD,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAC3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AAEtE,GAAG;AACH,yDAAyD;AACzD,gDAAgD;AAChD,4FAA4F;AAC5F,+CAA+C;AAC/C,mDAAmD;AACnD,4EAA4E;AAC5E,+DAA+D;AAC/D,8EAA8E;AAC9E,8DAA8D;AAM9D,MAAM,OAAO,aAAa;IAiBxB,YACU,MAAc,EACd,WAAwB,EACxB,gBAAkC;QAFlC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAd5C,eAAU,GAA2C;YACnD,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SAC6B,CAAC;QAE5C,UAAK,GAA2C,EAAE,CAAC;QACnD,eAAU,GAAW,CAAC,CAAC;QACvB,YAAO,GAAY,KAAK,CAAC;IAMrB,CAAC;IAIL,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;YAErD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,UAAU,CAAC,EAAW;QACpB,IAAI,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,GAAG,EAAE,CAAC,CAAC,CAAC;;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAExE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YACjE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;QACjC,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,UAAU,CAAC,IAA0C;IAErD,CAAC;;;YA/DF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,qkHAAoC;;aAErC;;;YAtBwB,MAAM;YAKtB,WAAW;YACX,gBAAgB","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n// \r\n// import { PostWithDetailsDto } from '@fs-tw/cms/proxy';\r\n// import { CodesDto } from '@fs-tw/theme-core';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Select, Store } from '@ngxs/store';\r\n// import { Observable, Subscription } from 'rxjs';\r\n// import { Deletepost, GetPosts } from '../../providers/post/post.actions';\r\n// import { PostState } from '../../providers/post/post.state';\r\n// import { PostsStateService } from '../../providers/post/poststate.service';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",\r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private pageService: PageService,\r\n    private postStateService: PostStateService\r\n  ) { }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.changePage(1);\r\n    })\r\n  }\r\n\r\n  gotoDetail(id?: string) {\r\n    if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n    else this.router.navigate([\"/cms/post/detail\"]);\r\n  }\r\n\r\n  changePage(page: number) {\r\n    this.postParams.skipCount = (page - 1) * this.postParams.maxResultCount;\r\n\r\n    this.loading = true;\r\n    this.pageService.getPostsByBlogId(this.postParams).subscribe((x) => {\r\n      this.loading = false;\r\n      this.posts = x.items;\r\n      this.totalCount = x.totalCount;\r\n    })\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostWithDetailsDto) {\r\n\r\n  }\r\n\r\n  // ngOnDestroy(): void {\r\n  //   if (this.subscription) {\r\n  //     this.subscription.unsubscribe();\r\n  //   }\r\n  // }\r\n\r\n  // blogName: string = \"\";\r\n\r\n  // ngOnInit(): void {\r\n  //   this.subscription = this.activatedRoute.queryParams.subscribe(x => {\r\n  //     if (x.blog) {\r\n  //       this.blogId = x.blog\r\n  //       this.blogName = x.name;\r\n  //       if (x.blog == 'all') this.blogId = \"\";\r\n  //     } else {\r\n  //       let query = this.postsStateService.getPostQuery();\r\n  //       this.keyword = query.param.value;\r\n  //       this.blogId = query.param.blogCodeId\r\n  //       this.blogName = query.blogName;\r\n  //     }\r\n  //     this.changePage(1);\r\n  //   });\r\n  // }\r\n\r\n  // gotoDetail(id?: string) {\r\n  //   if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n  //   else this.router.navigate([\"/cms/post/detail\"]);\r\n  // }\r\n\r\n  // deleteItem(data: PostWithDetailsDto) {\r\n  //   this.confirmationService.warn(\r\n  //     `確定要刪除 ${data.title}嗎？`,\r\n  //     '系統訊息', {\r\n  //     cancelText: \"關閉\",\r\n  //     yesText: \"確定\"\r\n  //   }).subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.store.dispatch(new Deletepost(data.id))\r\n  //       this.toasterService.success(\"刪除成功！\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // changePage(event: number) {\r\n  //   this.loading = true;\r\n  //   this.store.dispatch(\r\n  //     new GetPosts(\r\n  //       {\r\n  //         param: {\r\n  //           value: this.keyword,\r\n  //           fields: \"Title,Subtitle\",\r\n  //           blogCodeId: this.blogId,\r\n  //           skipCount: (event - 1) * 10,\r\n  //           maxResultCount: 10,\r\n  //           sorting: \"\"\r\n  //         },\r\n  //         blogName: this.blogName\r\n  //       }\r\n  //     )).subscribe(() => this.loading = false);\r\n  // }\r\n\r\n  // search() {\r\n  //   this.changePage(1);\r\n  // }\r\n\r\n}\r\n"]}