{"version":3,"file":"detail.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport * as dns from 'date-fns'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../image-picker/image-picker.component';\r\nimport { FileService, FileDescriptorDto } from '../../../shared'\r\nimport { map } from 'rxjs/operators';\r\nimport { FileInfo } from '../upload-file/upload-file.component';\r\n\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  @ViewChild(\"DefaultUploadFile\") defaultUploadFile: UploadFileComponent;\r\n  postId: string;\r\n  data: Fs.Cms.Posts.Dtos.PostDto;\r\n  dateRange: Date[] = [new Date(), new Date()];\r\n  defaultImages: ImageFile[] = [];\r\n  defaultFiles: FileInfo[] = [];\r\n  blogs: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n\r\n  isLoading: boolean = false;\r\n  directory\r\n  coverImage: string = '';\r\n  contentFileName = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fileService: FileService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pageService: PageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\r\n    this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Posts\", this.postId ? this.postId : this.getRand()).subscribe(x => {\r\n      this.directory = x;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.getPost();\r\n    this.getBlogs();\r\n  }\r\n\r\n  getPost() {\r\n    this.data = {\r\n      blogId: null,\r\n      title: '',\r\n      subtitle: '',\r\n      url: '',\r\n      content: '',\r\n      disable: false,\r\n      startTime: '',\r\n      endTime: '',\r\n      displayMode: 0,\r\n      sequence: 0,\r\n      attachmentFileInfos: [],\r\n      postImages: []\r\n    } as Fs.Cms.Posts.Dtos.PostDto;\r\n    this.contentFileName = \"\";\r\n    this.dateRange = [new Date(), new Date()];\r\n\r\n    this.defaultImages = [];\r\n    this.defaultFiles = [];\r\n    this.coverImage = ''\r\n\r\n    if (this.postId) {\r\n      this.pageService.getPostById(this.postId).subscribe((x) => {\r\n        this.data = x;\r\n        let st = x.startTime ? new Date(x.startTime) : new Date();\r\n        let ed = x.endTime ? new Date(x.endTime) : new Date();\r\n        this.dateRange = [st, ed];\r\n\r\n        this.defaultImages = x.postImages.map(y => new ImageFile(y.name, y.imageId));\r\n        this.defaultFiles = x.attachmentFileInfos.map(y => new FileInfo(y.name, this.fileService.getFileUrl(y.fileId)))\r\n        let coverImageIndex = x.postImages.findIndex(y => y.isCover);\r\n        if (coverImageIndex > -1) this.coverImage = x.postImages[coverImageIndex].imageId;\r\n\r\n        if (x.content) {\r\n          this.pageService.getFileDescriptor(x.content).subscribe(x => {\r\n            this.contentFileName = x.name;\r\n          })\r\n\r\n          this.fileService.getFileBlobById(x.content).subscribe(data => {\r\n            const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n            let reader = new FileReader();\r\n            reader.onload = () => {\r\n              this.data.content = reader.result.toString();\r\n            }\r\n            reader.readAsText(blob);\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  getBlogs() {\r\n    let input = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogs = x.items;\r\n      if (!this.postId) this.data.blogId = this.activatedRoute.snapshot.queryParamMap.get('blogId');\r\n    })\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    this.confirmationService.warn(`確定刪除 ${fileName} 嗎？`, \"系統訊息\")\r\n      .subscribe((result) => {\r\n        if (result != Confirmation.Status.confirm) return;\r\n\r\n        this.defaultImagePicker.deleteFile(fileName);\r\n      })\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  save() {\r\n    // TODO: 刪除檔案、加標籤\r\n    // let deleteImages = this.defaultImagePicker.getDeleteFileNames();\r\n    // let deleteTargets = item.postImages.filter(x => deleteImages.some(y => y == x.name));\r\n    // let deleteActions = deleteTargets.map(x=>{\r\n    //   return this.pageService.deleteFile(x.imageId);\r\n    // })\r\n    // forkJoin(deleteActions).subscribe(x=>{})\r\n\r\n    let item: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(this.data);\r\n    item.startTime = this.dateRange[0].toLocalISOString();\r\n    item.endTime = this.dateRange[1]?.toLocalISOString();\r\n\r\n\r\n    let contentAction$ = of(\"\");\r\n    if (item.displayMode == Fs.Cms.Posts.DisplayMode.內文) {\r\n      // let now = new Date();\r\n      const blob = new Blob([item.content], { type: \"text/plain;charset=utf-8\" });\r\n      let useContentFileName = dns.format(new Date(), 'yyyyMMddHHmmss') + '-' + this.getRand() + \".txt\"//now.toLocaleDateString() + \"_\" + now.toLocaleTimeString() + \"_\" + (Math.floor(Math.random() * 100) + 1) + \".txt\";\r\n      if (this.contentFileName) useContentFileName = this.contentFileName;\r\n      let file = this.blobToFile(blob, useContentFileName);\r\n      contentAction$ = this.fileService.uploadFile(file, this.directory.id).pipe(map(x => x.id));\r\n    }\r\n\r\n\r\n    let imagesAction = this.uploadImage$(item);\r\n    let filesAction = this.uploadFiles$(item);\r\n    forkJoin([imagesAction, filesAction, contentAction$]).subscribe(x => {\r\n      item.postImages = x[0];\r\n      item.attachmentFileInfos = x[1];\r\n      item.content = x[2];\r\n      this.savePost(item);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  private blobToFile = (theBlob: Blob, fileName: string): File => {\r\n    return new File([theBlob], fileName, { type: \"text/plain;charset=utf-8\" })\r\n  }\r\n\r\n\r\n  uploadFiles$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.AttachmentFileInfo[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadFiles = this.defaultUploadFile.getNewUploadFiles();\r\n\r\n    let existFileNames = this.defaultUploadFile.existFiles.map(x => x.fileName);\r\n    domainItem.attachmentFileInfos = domainItem.attachmentFileInfos.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadFiles.length == 0) {\r\n      return of(domainItem.attachmentFileInfos);\r\n    }\r\n\r\n    let fileActions = newUploadFiles.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.AttachmentFileInfo[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          fileId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.attachmentFileInfos)\r\n    }))\r\n  }\r\n\r\n  uploadImage$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.PostImageDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadImages = this.defaultImagePicker.getNewUploadFiles();\r\n\r\n\r\n    let existFileNames = this.defaultImagePicker.existFiles.map(x => x.fileName);\r\n    domainItem.postImages = domainItem.postImages.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadImages.length == 0) {\r\n      return of(domainItem.postImages);\r\n    }\r\n\r\n\r\n    let fileActions = newUploadImages.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.PostImageDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          isCover: (this.coverImage == y.name),\r\n          imageId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.postImages)\r\n    }))\r\n\r\n  }\r\n\r\n  savePost(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    let action: Observable<any>;\r\n    if (!this.postId) {\r\n      action = this.pageService.createPost(item);\r\n    } else {\r\n      action = this.pageService.updatePost(this.postId, item);\r\n    }\r\n\r\n    action.subscribe((x) => {\r\n      this.router.navigate([\"cms/post\"]);\r\n    })\r\n  }\r\n\r\n}\r\n"]}