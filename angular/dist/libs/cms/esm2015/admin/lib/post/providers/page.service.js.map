{"version":3,"file":"page.service.js","sourceRoot":"","sources":["../../../../../../../../libs/cms/admin/src/lib/post/providers/page.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAQ,MAAM,eAAe,CAAC;AAC3D,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAE5C,WAAW;AAEX,MAAM,OAAO,WAAW;IAMtB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CACvC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAC9C,CAAC;QACF,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CACvC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qBAAqB,CAChD,CAAC;IACJ,CAAC;IAED,eAAe;IACf,QAAQ,CAAC,KAAuC;QAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,UAAU,CAAC,KAAsC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,EAAU,EAAE,KAAsC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,mCAAmC,CACzD,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,KAAK,CACN,CAAC;IACJ,CAAC;IACD,YAAY;IAEZ,cAAc;IACd,2BAA2B,CAAC,GAAW,EAAE,KAAc;QACrD,OAAO,IAAI,CAAC,qBAAqB,CAAC,2BAA2B,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,YAAY;IAEZ,cAAc;IACd,gBAAgB,CAAC,KAA6C;QAC5D,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,UAAU,CAAC,KAAsC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,EAAU,EAAE,KAAsC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,mCAAmC,CACzD,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,KAAK,CACN,CAAC;IACJ,CAAC;;;YApEF,UAAU;;;YAJF,QAAQ","sourcesContent":["import { Injector, Injectable, Type } from '@angular/core';\r\nimport { Fs, Volo } from '@fs-tw/cms/proxy';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class PageService {\r\n  private blogService: Fs.Cms.Blogs.BlogsApiService;\r\n  private postService: Fs.Cms.Posts.PostsApiService;\r\n  private directoriesApiService: Fs.Abp.File.Directories.DirectoriesApiService;\r\n  private fileDescriptorService: Volo.FileManagement.Files.FileDescriptorService;\r\n\r\n  constructor(private injector: Injector) {\r\n    this.blogService = injector.get(Fs.Cms.Blogs.BlogsApiService);\r\n    this.postService = injector.get(Fs.Cms.Posts.PostsApiService);\r\n    this.directoriesApiService = injector.get(\r\n      Fs.Abp.File.Directories.DirectoriesApiService\r\n    );\r\n    this.fileDescriptorService = injector.get(\r\n      Volo.FileManagement.Files.FileDescriptorService\r\n    );\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({ id: id });\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region File\r\n  findByProviderByKeyAndGroup(key: string, group?: string) {\r\n    return this.directoriesApiService.findByProviderByKeyAndGroup(key, group);\r\n  }\r\n\r\n  deleteFile(id: string) {\r\n    return this.fileDescriptorService.deleteById(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n\r\n  getPostById(id: string) {\r\n    return this.postService.getByPostPrimaryKey({ id: id });\r\n  }\r\n\r\n  createPost(input: Fs.Cms.Posts.Dtos.PostCreateDto) {\r\n    return this.postService.createByPostCreate(input);\r\n  }\r\n\r\n  updatePost(id: string, input: Fs.Cms.Posts.Dtos.PostUpdateDto) {\r\n    return this.postService.updateByPostPrimaryKeyAndPostUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n"]}