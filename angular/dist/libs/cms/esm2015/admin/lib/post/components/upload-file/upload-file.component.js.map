{"version":3,"file":"upload-file.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAiB,MAAM,eAAe,CAAC;;AACzD,6EAA6E;AAC7E,2FAA2F;AAC3F,uCAAuC;AACvC,oDAAoD;AACpD,uDAAuD;AACvD,mDAAmD;AAOnD,MAAM,OAAO,mBAAmB;IAE9B,QAAQ;IAER,CAAC;;sFAJU,mBAAmB;wDAAnB,mBAAmB;uFAAnB,mBAAmB;cAL/B,SAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n// import { ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { Confirmation, ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { Store } from '@ngxs/store';\r\n// import { NzModalRef } from 'ng-zorro-antd/modal';\r\n// import { NzUploadFile } from 'ng-zorro-antd/upload';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // @Input()\r\n  // existFileUrls: string[] = [];\r\n\r\n  // fileUrl: string[] = [];\r\n  // tplModal: NzModalRef;\r\n  // loading: boolean = false;\r\n  // fileList: NzUploadFile[] = [];\r\n  // constructor(\r\n  //   private toasterService: ToasterService,\r\n  //   private confirmationService: ConfirmationService,\r\n  //   private fileService: FileService,\r\n  //   private store: Store,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  // getUrl(x: string) {    \r\n  //   if (x.includes('http')) {\r\n  //     return x;\r\n  //   } else {\r\n  //     return this.fileService.getFileByName(x);\r\n  //   }\r\n  // }\r\n\r\n  // getFileName(x: string) {\r\n  //   let splitStr = x.split(\"\\\\\");\r\n  //   return splitStr[splitStr.length - 1];\r\n  // }\r\n\r\n  // delete(url) {\r\n  //   this.confirmationService\r\n  //   .warn('確認刪除嗎？', '系統訊息', {\r\n  //     messageLocalizationParams: [name],\r\n  //   })\r\n  //   .subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.existFileUrls = this.existFileUrls.filter(x => x != url);\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n\r\n\r\n  // beforeUpload = (file: NzUploadFile): boolean => {\r\n  //   let exist = this.existFileUrls.findIndex(x => x == file.name) > -1 ||\r\n  //     this.fileList.findIndex(x => x.name == file.name) > -1;\r\n  //   if (exist) return false;\r\n  //   this.fileList = this.fileList.concat(file);\r\n  //   return false;\r\n  // };\r\n\r\n  // save(): string[] {\r\n  //   this.loading = true;\r\n  //   const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('');\r\n  //   const formData = new FormData();\r\n  //   let urlList: string[] = this.existFileUrls;\r\n  //   this.fileList.forEach((file: any) => {\r\n  //     let url = `cms\\\\posts\\\\${randomName}\\\\${file.name}`;\r\n  //     urlList.push(url);\r\n  //     formData.append('files[]', file, url);\r\n  //   });    \r\n  //   this.fileService.uploadFileByFormData(formData).subscribe(() => {\r\n  //   }, (error) => {\r\n  //     this.loading = false;\r\n  //     this.toasterService.error(\"上傳失敗\");\r\n  //   });\r\n  //   return urlList;\r\n  // }\r\n}\r\n"]}