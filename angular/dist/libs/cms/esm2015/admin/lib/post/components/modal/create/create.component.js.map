{"version":3,"file":"create.component.js","sourceRoot":"","sources":["../../../../../../../../../../libs/cms/admin/src/lib/post/components/modal/create/create.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\n\r\n// import { ConfigStateService } from '@abp/ng.core';\r\n// import { NzUploadFile } from 'ng-zorro-antd/upload';\r\n// import { Observable } from 'rxjs';\r\n// import * as _ from 'lodash';\r\n\r\n// import { ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { BlogDto } from '@fs-tw/cms/proxy';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n// import { PageService } from '../../../providers/page.service';\r\n// import { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'fs-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.less']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker : ImagePickerComponent;\r\n\r\n  @Input()\r\n  blogId: string;\r\n\r\n  @Output()\r\n  onSave = new EventEmitter();\r\n\r\n  isVisible = false;\r\n\r\n  data: Fs.Cms.Blogs.Dtos.BlogDto;\r\n  defaultImages: ImageFile[] = [];\r\n\r\n  constructor(\r\n    private pageService: PageService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  showModal() {\r\n    this.data = {\r\n      no: \"\",\r\n      displayName: \"\",\r\n      description: \"\",\r\n      parentId: null,\r\n      disable: false,\r\n      listStyle: \"\",\r\n      sequence: 0,\r\n      url: \"\",\r\n      iconUrl: \"\"\r\n    } as Fs.Cms.Blogs.Dtos.BlogDto;\r\n\r\n    this.defaultImages = [];\r\n\r\n    if (this.blogId) {\r\n      this.pageService.getBlogById(this.blogId).subscribe((x) => {\r\n        this.data = x;\r\n\r\n        // 已上傳圖片\r\n        this.defaultImages = [new ImageFile('test', 'https://dummyimage.com/140x98/000/fff')];\r\n        // if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, 'http://' + x.iconUrl));\r\n      });\r\n    }\r\n\r\n    this.isVisible = true;\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    // 補上傳、刪除檔案 api\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();\r\n\r\n    const formData = new FormData();\r\n    for(let item of uploadImageInfos) {\r\n      if (item.isUpload) formData.append('files[]', item.file, '');\r\n    }\r\n    console.log(uploadImageInfos, deleteImageNames);\r\n\r\n\r\n    let input: Fs.Cms.Blogs.Dtos.BlogDto = _.cloneDeep(this.data);\r\n    \r\n    let action: Observable<any>;\r\n    if (!this.blogId) {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    } else {\r\n      action = this.pageService.updateBlog(this.blogId, input);\r\n    }\r\n\r\n    action.subscribe(() => {\r\n      this.onSave.emit();\r\n      this.handleCancel();\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n\r\n  // @Input() input: BlogDto;\r\n  // @Output() onSave = new EventEmitter();\r\n  // @Input() isParent = false;\r\n\r\n\r\n  // i: BlogDto = {\r\n  //   enable: true\r\n  // } as BlogDto;\r\n\r\n  // uploadFile: NzUploadFile = null;\r\n  // iconUrl: string;\r\n  // hasImg: boolean = false;\r\n\r\n  // constructor(\r\n  //   private store: Store,\r\n  //   private configStateService: ConfigStateService,\r\n  //   private toasterService: ToasterService,\r\n  //   private pageService: PageService,\r\n  //   private cmsFileService: FileService\r\n  // ) { }\r\n\r\n  // ngOnInit() {\r\n\r\n  // }\r\n\r\n  \r\n\r\n  // getImageUrl(img: string) {\r\n  //   return this.cmsFileService.getFileByName(img);\r\n  //   // return this.configStateService.getApiUrl() + \"/api/themes/file/\" + img.replace(/\\\\/g, \"%5C\") + \"?p=\" +  Math.floor(Math.random()*999)+1;\r\n  // }\r\n\r\n  // handleCancel() {\r\n  //   this.isVisible = false;\r\n  // }\r\n\r\n  // save() {\r\n  //   let act: Observable<any>;\r\n  //   if (!this.input) {\r\n  //     act = this.pageService.createBlog(this.i);\r\n  //   }\r\n  //   else {\r\n  //     act = this.pageService.updateBlog({ ...this.input, ...this.i }, this.input.codesId)\r\n  //   }\r\n  //   act.subscribe(x => {\r\n  //     this.handleCancel();\r\n\r\n  //     if (this.uploadFile) {\r\n  //       this.saveImage(x);\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.onSave.emit();\r\n  //     if (this.input) {\r\n  //       this.toasterService.success(\"更新成功！\");\r\n  //       return;\r\n  //     }\r\n  //     this.toasterService.success(\"新增成功！\");\r\n  //   })\r\n  // }\r\n\r\n  // //#region 圖片上傳\r\n  // saveImage(blog: BlogDto) {\r\n  //   const formData = new FormData();\r\n  //   let file: any = this.uploadFile;\r\n  //   let fileExName = file.type === 'image/png' ? \".png\" : \".jpg\";\r\n  //   let url = `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`;\r\n  //   formData.append('files[]', file, `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`);\r\n    \r\n  //   this.cmsFileService.uploadFileByFormData(formData).subscribe(x=>{\r\n  //     blog.iconUrl = url\r\n  //     this.pageService.updateBlog(blog, blog.codesId)\r\n  //       .subscribe((x) => {\r\n  //         this.onSave.emit();\r\n  //         if (this.input) {\r\n  //           this.toasterService.success(\"更新成功！\");\r\n  //           return;\r\n  //         }\r\n  //         this.toasterService.success(\"新增成功！\");\r\n  //       }, error => {\r\n  //         this.toasterService.error(\"上傳更新失敗\")\r\n  //       })\r\n  //   });   \r\n  // }\r\n\r\n  // beforeUpload = (file: NzUploadFile): boolean => {\r\n  //   let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  //   if (!isJpgOrPng) {\r\n  //     this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n  //     return\r\n  //   }\r\n\r\n  //   let imgFile: any = file;\r\n  //   this.getBase64(imgFile, (img) => {\r\n  //     this.uploadFile = file;\r\n  //     this.iconUrl = img;\r\n  //     this.hasImg = true;\r\n  //   });\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // private getBase64(img: File, callback: (img: string) => void): void {\r\n  //   const reader = new FileReader();\r\n  //   reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n  //   reader.readAsDataURL(img);\r\n  // }\r\n\r\n  // resetIcon() {\r\n  //   this.uploadFile = null;\r\n  //   this.iconUrl = \"assets/img/info.png\";\r\n  //   this.i.iconUrl = \"\";\r\n  //   this.hasImg = false;\r\n  // }\r\n  // //#endregion\r\n\r\n}\r\n"]}