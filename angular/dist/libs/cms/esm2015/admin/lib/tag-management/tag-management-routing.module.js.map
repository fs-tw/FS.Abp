{"version":3,"file":"tag-management-routing.module.js","sourceRoot":"","sources":["../../../../../../../libs/cms/admin/src/lib/tag-management/tag-management-routing.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAU,YAAY,EAAmD,MAAM,iBAAiB,CAAC;AACxG,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,8CAA8C,CAAC;AAClF,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAGvD,MAAM,OAAO,WAAW;IACtB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;IACxC,CAAC;;;YANF,UAAU;;;YAFF,WAAW;;AAYpB,MAAM,OAAO,iBAAiB;IAC5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO,CAAC,KAA6B;QACnC,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,KAAK;YAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;;;YAPF,UAAU;;;YAXF,WAAW;;AAsBpB,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,eAAe;QAC1B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,aAAa;gBACxB,OAAO,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE;aACtC;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,kBAAkB;gBAC7B,OAAO,EAAE,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;aAClD;SACF;KACF;CACF,CAAC;AAUF,MAAM,OAAO,0BAA0B;;;YARtC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE;oBACT,WAAW;oBACX,iBAAiB;iBAClB;aACF","sourcesContent":["import { Injectable, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { PageService } from './providers/page.service';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve() {\r\n    this.pageService.getTageListFromApi();\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DetailRouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let tagId = route.params.tagId;\r\n    if (tagId) this.pageService.getTagOneFromApi(tagId);\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent,\r\n        resolve: { RouteConfig: RouteConfig },\r\n      },\r\n      {\r\n        path: ':tagId',\r\n        component: TagDetailComponent,\r\n        resolve: { DetailRouteConfig: DetailRouteConfig }\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    RouteConfig,\r\n    DetailRouteConfig\r\n  ]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n"]}