{"version":3,"file":"tag-detail.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/cms/admin/src/lib/tag-management/components/tag-detail/tag-detail.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AAGzD,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAA;AAE1C,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,OAAO,EAAqC,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAOzF,MAAM,OAAO,kBAAkB;IAY7B,YACU,WAAwB,EACxB,QAAkB,EAClB,cAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAb/B,aAAQ,GAAY,KAAK,CAAC;QAGnC,uBAAkB,GAAa,EAAE,CAAA;QAEjC,SAAI,GAA4B,EAGxB,CAAC;QAST,cAAS,GAAqC;QAC5C,eAAe;SAChB,CAAC;IALE,CAAC;IAOL,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC1D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,CAAC,CAAC,CAAA;IACJ,CAAC;IAGD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,2DAA2D;QAC3D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,IAAI;QACF,6FAA6F;QAC7F,wCAAwC;QACxC,YAAY;QACZ,IAAI;QACJ,mCAAmC;QACnC,sBAAsB;IACxB,CAAC;IAED,MAAM;QACJ,sFAAsF;QACtF,0FAA0F;QAC1F,8DAA8D;QAC9D,8BAA8B;QAC9B,qCAAqC;QACrC,4BAA4B;QAC5B,2CAA2C;QAC3C,OAAO;QAEP,KAAK;IACP,CAAC;IAGD,UAAU;QACR,0CAA0C;QAC1C,oDAAoD;QACpD,MAAM;QACN,iBAAiB;QACjB,iCAAiC;IACnC,CAAC;IAED,UAAU;QACR,mDAAmD;QACnD,yCAAyC;QACzC,KAAK;QACL,kBAAkB;QAClB,gCAAgC;IAClC,CAAC;IAED,MAAM;QACJ,iCAAiC;QACjC,yCAAyC;QACzC,uDAAuD;IACzD,CAAC;IAED,UAAU,CAAC,OAAe;QACxB,iFAAiF;QACjF,2CAA2C;QAC3C,0CAA0C;QAC1C,kBAAkB;QAClB,KAAK;IACP,CAAC;IAED,KAAK;QACH,qBAAqB;QACrB,iBAAiB;QACjB,KAAK;QACL,gCAAgC;QAChC,gBAAgB;QAChB,YAAY;QACZ,sBAAsB;QACtB,YAAY;QACZ,QAAQ;QACR,gBAAgB;QAChB,iBAAiB;QACjB,QAAQ;QACR,MAAM;QACN,KAAK;IACP,CAAC;;;YA3HF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,g4DAA0C;;aAE3C;;;YARQ,WAAW;YAFX,QAAQ;YAI2B,cAAc;;;uBASvD,KAAK","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { Location } from '@angular/common'\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { tap } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'fs-tag-detail',\r\n  templateUrl: './tag-detail.component.html',\r\n  styleUrls: ['./tag-detail.component.less'],\r\n})\r\nexport class TagDetailComponent implements OnInit {\r\n\r\n  @Input() isCreate: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  deleteTargetTagIds: string[] = []\r\n\r\n  data: Fs.Cms.Tags.Dtos.TagDto = {\r\n   \r\n   \r\n  } as any;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private location: Location,\r\n    private toasterService: ToasterService,\r\n  ) { }\r\n\r\n\r\n  inputList:  Fs.Cms.Tags.Dtos.TagCreateDto[] = [\r\n    // { name: '' }\r\n  ];\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.pageService.tagData$.subscribe(x => {\r\n      this.data = x;\r\n    })\r\n  }\r\n\r\n\r\n  addOption() {\r\n    this.inputList.push();\r\n  }\r\n\r\n  removeOption(index: number) {\r\n    this.inputList.splice(index, 1);\r\n  }\r\n\r\n  removeOldOption(id: string) {\r\n    // this.data.tags = this.data.tags.filter(x => x.id != id);\r\n    this.deleteTargetTagIds.push(id);\r\n  }\r\n\r\n  save() {\r\n    // if (this.inputList.filter(x => x.name == '').length > 0 && this.data.tagGroupName != '') {\r\n    //   this.toasterService.error(\"不能有空值！\")\r\n    //   return;\r\n    // }\r\n    // if (this.isCreate) this.create()\r\n    // else this.update();\r\n  }\r\n\r\n  update() {\r\n    // this.pageService.updateGroup(this.data.id, this.data.tagGroupName).subscribe(x => {\r\n    //   let createTarget = this.pageService.createGroupAndTags(this.data.id, this.inputList);\r\n    //   let target = this.updateTags().concat(this.deleteTags());\r\n    //   target.push(createTarget)\r\n    //   forkJoin(target).subscribe(()=>{\r\n    //     this.location.back();\r\n    //     this.toasterService.success(\"修改成功！\")\r\n    //   })\r\n      \r\n    // })\r\n  }\r\n\r\n\r\n  updateTags() {\r\n    // let obsList = this.data.tags.map(x => {\r\n    //   return this.pageService.updateTag(x.id, x.name)\r\n    // });\r\n    // return obsList\r\n    // forkJoin(obsList).subscribe();\r\n  }\r\n\r\n  deleteTags() {\r\n    // let obsList = this.deleteTargetTagIds.map(x => {\r\n    //   return this.pageService.delteTag(x);\r\n    // })\r\n    // return obsList;\r\n    // forkJoin(obsList).subscribe()\r\n  }\r\n\r\n  create() {\r\n    // this.pageService.createGroup({\r\n    //   tagGroupName: this.data.tagGroupName\r\n    // }).pipe(tap(x => this.createTags(x.id))).subscribe()\r\n  }\r\n\r\n  createTags(groupId: string) {\r\n    // this.pageService.createGroupAndTags(groupId, this.inputList).subscribe(() => {\r\n    //   this.pageService.getTageListFromApi();\r\n    //   this.toasterService.success(\"新增成功！\");\r\n    //   this.clear();\r\n    // })\r\n  }\r\n\r\n  clear() {\r\n    // this.inputList = [\r\n    //   { name: '' }\r\n    // ];\r\n    // this.deleteTargetTagIds = [];\r\n    // this.data = {\r\n    //   id: '',\r\n    //   tagGroupName: '',\r\n    //   tags: [\r\n    //     {\r\n    //       id: '',\r\n    //       name: ''\r\n    //     }\r\n    //   ]\r\n    // };\r\n  }\r\n}\r\n"]}