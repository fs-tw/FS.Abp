{"version":3,"file":"fs-tw-cms-admin.js","sources":["../../../../libs/cms/admin/src/lib/post/providers/post-state.service.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/post/providers/page.service.ts","../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts","../../../../libs/cms/admin/src/lib/shared/pipe/get-file.pipe.ts","../../../../libs/cms/admin/src/lib/shared/shared.module.ts","../../../../libs/cms/admin/src/lib/shared/file.service.ts","../../../../libs/cms/admin/src/lib/post/components/image-picker/image-picker.component.ts","../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts","../../../../libs/cms/admin/src/lib/post/post-routing.module.ts","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.ts","../../../../libs/cms/admin/src/lib/post/post.module.ts","../../../../libs/cms/admin/src/lib/tag-management/providers/page.service.ts","../../../../libs/cms/admin/src/lib/tag-management/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/tag-management/components/tag-detail/tag-detail.component.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management-routing.module.ts","../../../../libs/cms/admin/src/lib/tag-management/tag-management.module.ts","../../../../libs/cms/admin/src/lib/cms-admin-routing.module.ts","../../../../libs/cms/admin/src/lib/cms-admin.module.ts","../../../../libs/cms/admin/src/fs-tw-cms-admin.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nexport namespace Post\r\n{\r\n    export interface State\r\n    {\r\n        Blog: Fs.Cms.Blogs.Dtos.BlogDto;\r\n    }\r\n}\r\n  \r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostStateService {\r\n    private store = new InternalStore({} as Post.State);\r\n\r\n    getBlog(): Observable<Fs.Cms.Blogs.Dtos.BlogDto> {\r\n        return this.store.sliceState(state => state.Blog);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n        this.store.patch({ Blog: blog })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injector, Injectable, Type } from '@angular/core';\r\nimport { Fs, Volo } from '@fs-tw/cms/proxy';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class PageService {\r\n  private blogService: Fs.Cms.Blogs.BlogsApiService;\r\n  private postService: Fs.Cms.Posts.PostsApiService;\r\n  private directoriesApiService: Fs.Abp.File.Directories.DirectoriesApiService;\r\n  private fileDescriptorService: Volo.FileManagement.Files.FileDescriptorService;\r\n  \r\n  constructor(private injector: Injector) {\r\n    this.blogService = injector.get(Fs.Cms.Blogs.BlogsApiService);\r\n    this.postService = injector.get(Fs.Cms.Posts.PostsApiService);\r\n    this.directoriesApiService = injector.get(\r\n      Fs.Abp.File.Directories.DirectoriesApiService\r\n    );\r\n    this.fileDescriptorService = injector.get(\r\n      Volo.FileManagement.Files.FileDescriptorService\r\n    );\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({ id: id });\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deleteBlog(id:string){\r\n    return this.blogService.deleteByBlogPrimaryKey({id});\r\n  }\r\n  //#endregion\r\n\r\n  //#region File\r\n  findByProviderByKeyAndGroup(key: string, group?: string) {\r\n    return this.directoriesApiService.findByProviderByKeyAndGroup(key, group);\r\n  }\r\n\r\n  deleteFile(id: string) {\r\n    return this.fileDescriptorService.deleteById(id);\r\n  }\r\n\r\n  getFileDescriptor(id:string){\r\n    return this.fileDescriptorService.getById(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n\r\n  getPostById(id: string) {\r\n    return this.postService.getByPostPrimaryKey({ id: id });\r\n  }\r\n\r\n  createPost(input: Fs.Cms.Posts.Dtos.PostCreateDto) {\r\n    return this.postService.createByPostCreate(input);\r\n  }\r\n\r\n  updatePost(id: string, input: Fs.Cms.Posts.Dtos.PostUpdateDto) {\r\n    return this.postService.updateByPostPrimaryKeyAndPostUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.postService.deleteByPostPrimaryKey({ id });\r\n  }\r\n  //#endregion\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n\r\n@Component({\r\n  selector: 'fs-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Post,\r\n    },\r\n  ],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  sub: Subscription;\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n  hookToQueryScribe: Subscription;\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",  \r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n\r\n  constructor(\r\n    private extensionsService: ExtensionsService,\r\n    private router: Router,\r\n    private toasterService: ToasterService,\r\n    private confirmationService: ConfirmationService,\r\n    private pageService: PageService,\r\n    public readonly list: ListService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private postStateService: PostStateService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.extensionsService.Actions$[eCmsRouteNames.Post].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.gotoDetail(x.record.id)\r\n            break;\r\n          case 'Delete':\r\n            this.deleteItem(x.record)\r\n            break;\r\n        }\r\n      });\r\n\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.sub = this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"全部\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.hookToQuery();\r\n    })\r\n  }\r\n\r\n  gotoDetail(id?: string) {\r\n    if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n    else this.router.navigate([\"/cms/post/detail\"], {\r\n      queryParams: {\r\n        blogId: this.postParams.blogId\r\n      }\r\n    });\r\n  }\r\n\r\n  hookToQuery() {\r\n\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    const query = (query) => {\r\n      query.keyword = this.postParams.keyword;\r\n      query.blogId = this.postParams.blogId;\r\n      return this.pageService.getPostsByBlogId(query)\r\n    };\r\n\r\n    this.hookToQueryScribe = this.list.hookToQuery(query).subscribe((res) => {\r\n      this.posts = res.items;\r\n      this.totalCount = res.totalCount;\r\n    });\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          let files = item.attachmentFileInfos.map(x => x.fileId)\r\n          let images = item.postImages.map(x => x.imageId);\r\n          let deleteFileActions = files.concat(images).map(x => this.pageService.deleteFile(x));\r\n          forkJoin(deleteFileActions).subscribe();\r\n\r\n          this.pageService.deletePost(item.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.hookToQueryScribe) this.hookToQueryScribe.unsubscribe();\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n\r\nexport class FileInfo {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class FileData {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  @Input()\r\n  existFiles: FileInfo[] = [];\r\n\r\n  fileList: NzUploadFile[] = [];\r\n\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let exist = this.existFiles.findIndex(x => x.fileName == file.name) > -1 ||\r\n      this.fileList.findIndex(x => x.name == file.name) > -1;\r\n    if (exist) return false;\r\n    this.fileList = this.fileList.concat(file);\r\n    return false;\r\n  };\r\n\r\n  delete(url) {\r\n    this.confirmationService\r\n      .warn('確認刪除嗎？', '系統訊息')\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.existFiles = this.existFiles.filter(x => x != url);\r\n        }\r\n      });\r\n  }\r\n\r\n  getNewUploadFiles(): FileData[] {\r\n    let updateFiles: FileData[] = this.fileList.map((x: any) => new FileData(x.name, '', x));\r\n    return updateFiles;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { EnvironmentService } from '@abp/ng.core'\r\n\r\n\r\n@Pipe({\r\n    name: 'getFileById'\r\n})\r\nexport class GetFileByIdPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private environmentService: EnvironmentService,\r\n    ) { }\r\n\r\n    transform(value: string): any {\r\n        return this.environmentService.getApiUrl() + \"/api/file-management/file-descriptor/file-content?id=\" + value\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n// import { NgAlainBasicModule } from '@fs-tw/theme-ng-alain/basic';\r\nimport { ThemeAlainMsSharedModule } from '@fs-tw/theme-alain-ms/shared';\r\nimport { UiExtensionsModule } from '@fs-tw/theme-alain-ms/shared/extensions'\r\nimport { GetFileByIdPipe } from './pipe/get-file.pipe';\r\nconst COMPONENT = [GetFileByIdPipe]\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENT],\r\n  imports: [\r\n    // NgAlainBasicModule,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ],\r\n  exports: [\r\n    // NgAlainBasicModule,\r\n    ...COMPONENT,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, RestService, AuditedEntityDto } from '@abp/ng.core';\r\n// import { FileDescriptorDto } from '@volo/abp.ng.file-management'\r\n\r\n// TODO USE @volo/abp.ng.file-management FileDescriptorDto\r\nexport interface FileDescriptorDto extends AuditedEntityDto<string> {\r\n  directoryId?: string;\r\n  name: string;\r\n  mimeType: string;\r\n  size: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FileService {\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private environmentService: EnvironmentService,\r\n  ) {\r\n  }\r\n\r\n  getFileUrl(id) {\r\n    if (!id) return \"\";\r\n    return this.environmentService.getApiUrl() + \"/api/file/files/file-content?id=\" + id\r\n  }\r\n\r\n  uploadFile(file: File, directoryId: string) {    \r\n    const formData = new FormData();\r\n    formData.append(\"relativePath\", null);\r\n    formData.append(\"file\", file);\r\n    formData.append(\"name\", file.name);   \r\n    formData.append(\"type\", file.type);\r\n    return this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/upload`,\r\n      body: formData,\r\n      params: { directoryId: directoryId }\r\n    });\r\n  }\r\n\r\n\r\n  getFileBlobById(id: string) {\r\n    return this.restService.request<any, Blob>({\r\n      method: 'GET',\r\n      url: `/api/file/files/file-content`,\r\n      params: { id },\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { FileService } from '../../../shared'\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { ConfigStateService,EnvironmentService } from '@abp/ng.core';\r\n\r\nexport class ImageFile {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class SaveFile {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\nclass ViewImage {\r\n  image: ImageFile;\r\n  isVisabled: boolean;\r\n\r\n  constructor() {\r\n    this.image = new ImageFile();\r\n    this.isVisabled = false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'image-picker',\r\n  templateUrl: './image-picker.component.html',\r\n  styleUrls: ['./image-picker.component.css']\r\n})\r\nexport class ImagePickerComponent implements OnInit {\r\n\r\n  /** 縮圖寬度，單位 px，預設 104px */\r\n  @Input() imageWidth: string = '104px';\r\n\r\n  /** 縮圖高度，單位 px ，預設 104px */\r\n  @Input() imageHeight: string = '104px';\r\n\r\n  /** 外框寬度，單位 px ，預設 104px */\r\n  @Input() borderWidth: string = '104px';\r\n\r\n  /** 外框高度，單位 px ，預設 104px */\r\n  @Input() borderHeight: string = '104px';\r\n\r\n  /** 上傳最大數量 */\r\n  @Input() maxImageCount: number = null;\r\n\r\n  /** 是否可同時選多張圖片 */\r\n  @Input() isMultiple: boolean = true;\r\n\r\n  /** 顯示圖片 Template ，縮圖比例功能會失效 */\r\n  @Input() imageTemplate: TemplateRef<any>;\r\n\r\n  /** 上傳圖片 Template，可完整替換成其他形式，如︰按鈕上傳 */\r\n  @Input() uploadTemplate: TemplateRef<any>;\r\n  \r\n  /** 上傳按鈕文字 Template，若 uploadTemplate 有值則無效 */\r\n  @Input() uploadTextTemplate: TemplateRef<any>;\r\n\r\n  /** 是否排列在同一行，同一行時行寬同 imageWidth */\r\n  @Input() inLine: boolean = true;\r\n\r\n  /** 上傳按鈕顯示於前面 */\r\n  @Input() showFrontButton: boolean = true;\r\n\r\n  /** 原已上傳圖片 */\r\n  @Input() existFiles: ImageFile[] = [];\r\n\r\n  /** 原已上傳圖片被刪除的檔名 */\r\n  private deleteFiles: string[] = [];\r\n\r\n  /** 本次上傳所顯示圖片 */\r\n  showFiles: ImageFile[] = [];\r\n\r\n  /** 本次上傳圖片 */\r\n  private uploadFiles: NzUploadFile[] = [];\r\n\r\n  /** 顯示預覽圖 modal */\r\n  viewImage: ViewImage = new ViewImage();\r\n\r\n  get canUpload(): boolean {\r\n    let imageNumber = this.existFiles.length + this.uploadFiles.length;\r\n    return this.maxImageCount == null || imageNumber < this.maxImageCount;\r\n  }\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private environmentService:EnvironmentService,\r\n    private fileService: FileService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.existFiles = this.existFiles\r\n      .filter(x => x.fileUrl)\r\n      .map(x => new ImageFile(x.fileName, this.fileService.getFileUrl(x.fileUrl)));\r\n\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n    this.deleteFiles = [];\r\n  }\r\n\r\n  clear() {\r\n    this.existFiles = [];\r\n    this.deleteFiles = [];\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  // private getHttpUrl(url: string): string {\r\n  //   let result = url;\r\n  //   if (url.includes(\"http\")) return result;\r\n\r\n  //   return this.environmentService.getApiUrl() + url;\r\n  // }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n      return false;\r\n    }\r\n\r\n    let fileName = file.name;\r\n\r\n    let hasExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let hasShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    if (hasExistImage || hasShowImage) return false;\r\n\r\n\r\n    let imgFile: any = file;\r\n    this.getBase64(imgFile, (img) => {\r\n      if (!this.canUpload) {\r\n        this.toasterService.error(\"圖片數已達上限\");\r\n        return;\r\n      }\r\n\r\n      this.uploadFiles.push(imgFile);\r\n      this.showFiles.push(new ImageFile(fileName, img));\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  private getBase64(img: File, callback: (img: string) => void): void {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    let inExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let inShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n\r\n    // 現有圖片刪除\r\n    if (inExistImage) {\r\n      this.existFiles = this.existFiles.filter(x => x.fileName != fileName);\r\n      this.deleteFiles.push(fileName);\r\n      return;\r\n    }\r\n\r\n    // 上傳圖片刪除\r\n    if (inShowImage) {\r\n      this.showFiles = this.showFiles.filter(x => x.fileName != fileName);\r\n      this.uploadFiles = this.uploadFiles.filter(x => x.name != fileName);\r\n    }\r\n\r\n  }\r\n\r\n  controllModal(state: boolean, image: ImageFile = new ImageFile()) {  \r\n    this.viewImage.image = image;\r\n    this.viewImage.isVisabled = state;\r\n  }\r\n\r\n  getDeleteFileNames(): string[] {\r\n    return this.deleteFiles;\r\n  }\r\n\r\n\r\n  getNewUploadFiles():SaveFile[]{\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    return updateFiles;\r\n  }\r\n\r\n  getUploadFiles(): SaveFile[] {\r\n    let existFiles = this.existFiles.filter(x => !this.deleteFiles.includes(x.fileName)).map(x => new SaveFile(x.fileName, x.fileUrl, null));\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    \r\n    return existFiles.concat(updateFiles);\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport * as dns from 'date-fns'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../image-picker/image-picker.component';\r\nimport { FileService, FileDescriptorDto } from '../../../shared'\r\nimport { map } from 'rxjs/operators';\r\nimport { FileInfo } from '../upload-file/upload-file.component';\r\n\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  @ViewChild(\"DefaultUploadFile\") defaultUploadFile: UploadFileComponent;\r\n  postId: string;\r\n  data: Fs.Cms.Posts.Dtos.PostDto;\r\n  dateRange: Date[] = [new Date(), new Date()];\r\n  defaultImages: ImageFile[] = [];\r\n  defaultFiles: FileInfo[] = [];\r\n  blogs: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n\r\n  isLoading: boolean = false;\r\n  directory\r\n  coverImage: string = '';\r\n  contentFileName = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fileService: FileService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pageService: PageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\r\n    this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Posts\", this.postId ? this.postId : this.getRand()).subscribe(x => {\r\n      this.directory = x;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.getPost();\r\n    this.getBlogs();\r\n  }\r\n\r\n  getPost() {\r\n    this.data = {\r\n      blogId: null,\r\n      title: '',\r\n      subtitle: '',\r\n      url: '',\r\n      content: '',\r\n      disable: false,\r\n      startTime: '',\r\n      endTime: '',\r\n      displayMode: 0,\r\n      sequence: 0,\r\n      attachmentFileInfos: [],\r\n      postImages: []\r\n    } as Fs.Cms.Posts.Dtos.PostDto;\r\n    this.contentFileName = \"\";\r\n    this.dateRange = [new Date(), new Date()];\r\n\r\n    this.defaultImages = [];\r\n    this.defaultFiles = [];\r\n    this.coverImage = ''\r\n\r\n    if (this.postId) {\r\n      this.pageService.getPostById(this.postId).subscribe((x) => {\r\n        this.data = x;\r\n        let st = x.startTime ? new Date(x.startTime) : new Date();\r\n        let ed = x.endTime ? new Date(x.endTime) : new Date();\r\n        this.dateRange = [st, ed];\r\n\r\n        this.defaultImages = x.postImages.map(y => new ImageFile(y.name, y.imageId));\r\n        this.defaultFiles = x.attachmentFileInfos.map(y => new FileInfo(y.name, this.fileService.getFileUrl(y.fileId)))\r\n        let coverImageIndex = x.postImages.findIndex(y => y.isCover);\r\n        if (coverImageIndex > -1) this.coverImage = x.postImages[coverImageIndex].imageId;\r\n\r\n        if (x.content) {\r\n          this.pageService.getFileDescriptor(x.content).subscribe(x => {\r\n            this.contentFileName = x.name;\r\n          })\r\n\r\n          this.fileService.getFileBlobById(x.content).subscribe(data => {\r\n            const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\r\n            let reader = new FileReader();\r\n            reader.onload = () => {\r\n              this.data.content = reader.result.toString();\r\n            }\r\n            reader.readAsText(blob);\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  getBlogs() {\r\n    let input = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogs = x.items;\r\n      if (!this.postId) this.data.blogId = this.activatedRoute.snapshot.queryParamMap.get('blogId');\r\n    })\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    this.confirmationService.warn(`確定刪除 ${fileName} 嗎？`, \"系統訊息\")\r\n      .subscribe((result) => {\r\n        if (result != Confirmation.Status.confirm) return;\r\n\r\n        this.defaultImagePicker.deleteFile(fileName);\r\n      })\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  save() {\r\n    // TODO: 刪除檔案、加標籤\r\n    // let deleteImages = this.defaultImagePicker.getDeleteFileNames();\r\n    // let deleteTargets = item.postImages.filter(x => deleteImages.some(y => y == x.name));\r\n    // let deleteActions = deleteTargets.map(x=>{\r\n    //   return this.pageService.deleteFile(x.imageId);\r\n    // })\r\n    // forkJoin(deleteActions).subscribe(x=>{})\r\n\r\n    let item: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(this.data);\r\n    item.startTime = this.dateRange[0].toLocalISOString();\r\n    item.endTime = this.dateRange[1]?.toLocalISOString();\r\n\r\n\r\n    let contentAction$ = of(\"\");\r\n    if (item.displayMode == Fs.Cms.Posts.DisplayMode.內文) {\r\n      // let now = new Date();\r\n      const blob = new Blob([item.content], { type: \"text/plain;charset=utf-8\" });\r\n      let useContentFileName = dns.format(new Date(), 'yyyyMMddHHmmss') + '-' + this.getRand() + \".txt\"//now.toLocaleDateString() + \"_\" + now.toLocaleTimeString() + \"_\" + (Math.floor(Math.random() * 100) + 1) + \".txt\";\r\n      if (this.contentFileName) useContentFileName = this.contentFileName;\r\n      let file = this.blobToFile(blob, useContentFileName);\r\n      contentAction$ = this.fileService.uploadFile(file, this.directory.id).pipe(map(x => x.id));\r\n    }\r\n\r\n\r\n    let imagesAction = this.uploadImage$(item);\r\n    let filesAction = this.uploadFiles$(item);\r\n    forkJoin([imagesAction, filesAction, contentAction$]).subscribe(x => {\r\n      item.postImages = x[0];\r\n      item.attachmentFileInfos = x[1];\r\n      item.content = x[2];\r\n      this.savePost(item);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  private blobToFile = (theBlob: Blob, fileName: string): File => {\r\n    return new File([theBlob], fileName, { type: \"text/plain;charset=utf-8\" })\r\n  }\r\n\r\n\r\n  uploadFiles$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.AttachmentFileInfoDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadFiles = this.defaultUploadFile.getNewUploadFiles();\r\n\r\n    let existFileNames = this.defaultUploadFile.existFiles.map(x => x.fileName);\r\n    domainItem.attachmentFileInfos = domainItem.attachmentFileInfos.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadFiles.length == 0) {\r\n      return of(domainItem.attachmentFileInfos);\r\n    }\r\n\r\n    let fileActions = newUploadFiles.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.AttachmentFileInfoDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          fileId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.attachmentFileInfos)\r\n    }))\r\n  }\r\n\r\n  uploadImage$(item: Fs.Cms.Posts.Dtos.PostDto): Observable<Fs.Cms.Posts.Dtos.PostImageDto[]> {\r\n    let domainItem: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(item)\r\n    let newUploadImages = this.defaultImagePicker.getNewUploadFiles();\r\n\r\n\r\n    let existFileNames = this.defaultImagePicker.existFiles.map(x => x.fileName);\r\n    domainItem.postImages = domainItem.postImages.filter(x => existFileNames.some(y => y == x.name));\r\n\r\n    if (newUploadImages.length == 0) {\r\n      return of(domainItem.postImages);\r\n    }\r\n\r\n\r\n    let fileActions = newUploadImages.map(savefile => {\r\n      return this.fileService.uploadFile(savefile.file, this.directory.id)\r\n    })\r\n\r\n    return forkJoin(fileActions).pipe(map(x => {\r\n      let result: Fs.Cms.Posts.Dtos.PostImageDto[] = x.map(y => {\r\n        return {\r\n          name: y.name,\r\n          isCover: (this.coverImage == y.name),\r\n          imageId: y.id\r\n        }\r\n      })\r\n      return result.concat(domainItem.postImages)\r\n    }))\r\n\r\n  }\r\n\r\n  savePost(item: Fs.Cms.Posts.Dtos.PostDto) {\r\n    let action: Observable<any>;\r\n    if (!this.postId) {\r\n      action = this.pageService.createPost(item);\r\n    } else {\r\n      action = this.pageService.updatePost(this.postId, item);\r\n    }\r\n\r\n    action.subscribe((x) => {\r\n      this.router.navigate([\"cms/post\"]);\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve } from '@angular/router';\r\n\r\nimport { PostStateService } from './providers/post-state.service';\r\n\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DetailComponent } from './components/detail/detail.component';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private postStateService: PostStateService) { }\r\n\r\n  resolve() {\r\n    return this.postStateService.setBlog(null);\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    resolve: { 'RouteConfig': RouteConfig },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent\r\n      },\r\n      {\r\n        path:'detail',\r\n        component:DetailComponent,\r\n      },\r\n      {\r\n        path:'detail/:postId',\r\n        component:DetailComponent,\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule], \r\n  providers:[\r\n    RouteConfig\r\n  ]\r\n})\r\nexport class PostRoutingModule { }\r\n","import { Component, Injector, OnInit, ViewChild,OnDestroy } from '@angular/core';\r\nimport { FileService } from '../../../../shared'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { PostStateService } from '../../../providers/post-state.service';\r\nimport { ListService } from '@abp/ng.core';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER,\r\n  FormPropData,\r\n  generateFormFromProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\nimport { Observable, Subscriber, Subscription } from 'rxjs';\r\nimport {\r\n  Confirmation,\r\n  ConfirmationService,\r\n  ToasterService,\r\n} from '@abp/ng.theme.shared';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'fs-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Blog,\r\n    },\r\n  ],\r\n})\r\nexport class ListComponent implements OnInit,OnDestroy {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  datas: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n  count = 0;\r\n  defaultImages: ImageFile[] = [];\r\n  isVisible = false;\r\n  form: FormGroup;\r\n  selected: Fs.Cms.Blogs.Dtos.BlogDto = {} as Fs.Cms.Blogs.Dtos.BlogDto\r\n  directory;\r\n  defaultSelectId = null;\r\n  sub: Subscription;\r\n  constructor(\r\n    private router: Router,\r\n    private extensionsService: ExtensionsService,\r\n    private pageService: PageService,\r\n    protected injector: Injector,\r\n    public readonly list: ListService,\r\n    private fileService: FileService,\r\n    private toasterService: ToasterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private confirmationService: ConfirmationService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n    \r\n\r\n    this.activatedRoute.queryParamMap.subscribe(x => {\r\n      this.defaultSelectId = x.get(\"blogId\");\r\n\r\n      this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Blogs\",this.defaultSelectId?this.defaultSelectId:this.getRand()).subscribe(x => {\r\n        this.directory = x;\r\n      })\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    if(this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n  getRand() {\r\n    return (Math.floor(Math.random() * 100) + 1).toString();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.extensionsService.Actions$[eCmsRouteNames.Blog].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.edit(x.record.id);\r\n            break;\r\n          case 'Delete':\r\n            this.deleteBlog(x.record)\r\n            break;\r\n          case 'Add':\r\n            this.add();\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n\r\n    let input: Fs.Cms.Blogs.Dtos.BlogGetListDto = {\r\n      skipCount: 0,\r\n      maxResultCount: 10,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    const customerStreamCreator = (query) => {\r\n      return this.pageService.getBlogs(input)\r\n    };\r\n\r\n    this.list.hookToQuery(customerStreamCreator).subscribe((res) => {\r\n      this.datas = res.items;\r\n      this.count = res.totalCount;\r\n      if (this.defaultSelectId) {\r\n        let select = this.datas.find(x => x.id == this.defaultSelectId);\r\n        this.showDetail(select)\r\n      }\r\n    });\r\n  }\r\n\r\n  showDetail(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    if (blog == null) {\r\n      this.router.navigate(['./cms/post'])\r\n      this.postStateService.setBlog(null);\r\n      return;\r\n    }\r\n    this.router.navigate(['./cms/post'], { queryParams: { 'blogId': blog.id } })\r\n    this.postStateService.setBlog(blog);\r\n  }\r\n\r\n  deleteBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    this.confirmationService\r\n      .warn('確認要刪除嗎？(此Blog下的文章將移至不分類)', '系統訊息', {\r\n        cancelText: \"取消\",\r\n        yesText: \"確定\"\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.pageService.deleteBlog(blog.id).subscribe(x => {\r\n            this.toasterService.success(\"刪除成功！\")\r\n            this.list.get();\r\n            this.router.navigate([\"./cms/post\"])\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();    \r\n    if(deleteImageNames.length>0){\r\n      this.pageService.deleteFile(deleteImageNames[0]).subscribe(()=>{\r\n        this.uploadFile();\r\n      });\r\n    } else this.uploadFile();\r\n    \r\n  }\r\n\r\n\r\n  uploadFile(){\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let fileId = \"\";\r\n    if ((uploadImageInfos.length > 0)) {\r\n      if (this.selected.iconUrl == uploadImageInfos[0].fileName) {\r\n        this.saveBlog(this.selected.iconUrl);\r\n        return;\r\n      }\r\n      this.fileService.uploadFile(uploadImageInfos[0].file, this.directory.id).subscribe(x => {\r\n        fileId = x.id;\r\n        this.saveBlog(fileId);\r\n      })\r\n    } else this.saveBlog(\"\");\r\n  }\r\n\r\n  saveBlog(fileId?) {\r\n    let input = { ...this.selected, ...this.form.value, id: this.selected.id };\r\n    input.iconUrl = fileId;\r\n    let action: Observable<any>;\r\n    if (input.id) action = this.pageService.updateBlog(input.id, input);\r\n    else {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    }\r\n    action.subscribe((x) => {\r\n      this.toasterService.success('修改成功！');\r\n      this.isVisible = false;\r\n      this.list.get();\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as any;\r\n    this.defaultImages = []\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.pageService.getBlogById(id).subscribe(x => {\r\n      this.selected = x;\r\n      this.defaultImages = []\r\n      if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, x.iconUrl))\r\n      this.openModal();\r\n    })\r\n  }\r\n\r\n  buildForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.form = null;\r\n    this.form = generateFormFromProps(data);\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isVisible = true;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { group } from '@angular/animations';\r\n// import { PostTagMapDto, TagGroupDto } from '@fs-tw/cms/proxy';\r\n// import * as _ from 'lodash';\r\n// import { Observable } from 'rxjs';\r\n// import { take } from 'rxjs/operators';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // postTagsDict: { [tagCodeId: string]: PostTagMapDto; } = {};\r\n\r\n  // @Input() postId: string;\r\n\r\n  // @Input()\r\n  // set postTags(val: PostTagMapDto[]) {    \r\n  //   for (let item of val) {\r\n  //     this.postTagsDict[item.tagCodeId] = item;\r\n  //   }\r\n\r\n  //   this.existTagCodeIds = val.map(x => x.tagCodeId);\r\n\r\n  //   this.pageService.getAllTags().pipe(take(1)).subscribe(x => {\r\n  //     this.tagGroups = x;\r\n  //     for (let group of this.tagGroups) {\r\n  //       for (let tag of group.tags) {\r\n  //         if (this.existTagCodeIds.includes(tag.id)) {\r\n  //           tag.check = true;\r\n  //           continue;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // existTagCodeIds: string[] = [];\r\n  // tagGroups: any[] = []\r\n  // constructor(\r\n  //   private pageService: PageService,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // checkParent(group: any) {\r\n  //   group.check = !group.check;\r\n  //   for (let item of group.tags) {\r\n  //     item.check = group.check;\r\n  //   }\r\n\r\n  // }\r\n  // checkChild(tag: any) {\r\n  //   tag.check = !tag.check;\r\n  // }\r\n\r\n\r\n  // save(postId?: string): Observable<any>[] {\r\n  //   if(!this.postId) this.postId = postId;\r\n  //   let tags: any[] = _.flatMap(this.tagGroups, \"tags\").filter(x => x.check);\r\n  //   let deleteTargetIds: string[] = _.xorWith(this.existTagCodeIds, tags.map(x => x.id));\r\n  //   let action: Observable<any>[] = [];\r\n  //   for (let tagCodeId of deleteTargetIds) {\r\n  //     if (this.postTagsDict[tagCodeId]) {\r\n  //       action.push(this.pageService.deletePostTagMap(this.postTagsDict[tagCodeId].id));\r\n  //     } else {\r\n  //       action.push(this.pageService.createPostTagMap(this.postId, tagCodeId));\r\n  //     }\r\n  //   }\r\n  //   return action;\r\n  // }\r\n}\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { SEModule } from '@delon/abc/se';\r\n\r\nimport { PostRoutingModule } from './post-routing.module';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SharedModule } from '../shared/shared.module'\r\n\r\nimport { DetailComponent } from './components/detail/detail.component';\r\nimport { ListComponent } from './components/main/list/list.component';\r\nimport { PageService } from './providers/page.service';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\nimport { ImagePickerComponent } from './components/image-picker/image-picker.component';\r\n\r\nconst NzModules = [\r\n  NzGridModule,\r\n  NzInputModule,\r\n  NzTableModule,\r\n  NzDropDownModule,\r\n  NzButtonModule,\r\n  NzIconModule,\r\n  NzModalModule,\r\n  NzRadioModule,\r\n  NzUploadModule,\r\n  NzSpinModule,\r\n  NzCardModule,\r\n  NzSelectModule,\r\n  NzDatePickerModule,\r\n  NzTabsModule,\r\n  SEModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    MainComponent,\r\n    DetailComponent,\r\n    ListComponent,\r\n    UploadFileComponent,\r\n    TagComponent,\r\n    ImagePickerComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    PostRoutingModule,\r\n    ...NzModules,\r\n    // NgxsModule.forFeature([PostState]),\r\n    QuillModule.forRoot()\r\n\r\n  ],\r\n  providers: [\r\n    // PostsStateService,\r\n    PageService\r\n  ]\r\n})\r\nexport class PostModule {\r\n  static forChild(): ModuleWithProviders<PostModule> {\r\n    return {\r\n      ngModule: PostModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { take, tap } from 'rxjs/operators';\r\n@Injectable()\r\nexport class PageService {\r\n\r\n  private allTagData = new Subject<any[]>();\r\n  private tagData = new Subject<any>();\r\n\r\n  public readonly allTagData$ = this.allTagData.asObservable();\r\n  public readonly tagData$ = this.tagData.asObservable();\r\n\r\n  getTageListFromApi() {\r\n    // this.tagsApiService.tagGroupGetList().pipe(tap(x => this.allTagData.next(x))).subscribe()\r\n  }\r\n\r\n  getTagOneFromApi(groupId: string) {\r\n    if (!groupId) {\r\n      this.tagData.next(null);\r\n      return;\r\n    };\r\n    // this.tagsApiService.tagGroupGetByIdById(groupId).pipe(tap(x => this.tagData.next(x))).subscribe();\r\n  }\r\n\r\n\r\n  constructor(\r\n    //private tagsApiService: Fs.Cms.Tags.TagsApiService\r\n  ) { }\r\n\r\n\r\n  /**call api */\r\n\r\n  // //create\r\n  // createGroup(tagGroup: TagGroupForCreateDto) {\r\n  //   return this.tagsApiService.tagGroupCreateByInput(tagGroup);\r\n  // }\r\n\r\n  // createGroupAndTags(id: string, tags: TagForCreateDto[]) {\r\n  //   return this.tagsApiService.tagGroupAddTagsByIdAndTags(id, tags);\r\n  // }\r\n\r\n  // // update\r\n  // updateGroup(id: string, newTagGroupName: string) {\r\n  //   return this.tagsApiService.tagGroupUpdateByIdAndInput(id, { tagGroupName: newTagGroupName });\r\n  // }\r\n\r\n  // updateTag(id: string, newtagName: string) {\r\n  //   return this.tagsApiService.putTagByIdAndInput(id, { name: newtagName });\r\n  // }\r\n\r\n  // // delate\r\n  // deleteGroup(groupId: string) {\r\n  //   return this.tagsApiService.tagGroupDeleteById(groupId)\r\n  // }\r\n\r\n  // delteTag(tagId: string) {\r\n  //   return this.tagsApiService.tagDeleteById(tagId);\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { PageService } from '../../providers/page.service';\r\nimport {Fs } from '@fs-tw/cms/proxy';\r\nimport { Subscription } from 'rxjs';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n@Component({\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  tagGroupList: Fs.Cms.Tags.Dtos.TagDto[] = [];\r\n  subscription: Subscription;\r\n  constructor(private PageService: PageService,\r\n    private confirmation: ConfirmationService,) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.PageService.allTagData$.subscribe(result => {\r\n      this.tagGroupList = result;\r\n    })\r\n  }\r\n\r\n  deleteGroup(id: string) {\r\n    // this.confirmation\r\n    //   .warn(`確認要刪除嗎？`, '系統訊息')\r\n    //   .pipe(\r\n    //     filter(res => res === Confirmation.Status.confirm),\r\n    //     switchMap(() => this.PageService.deleteGroup(id)),\r\n    //     take(1)\r\n    //   )\r\n    //   .subscribe(() => {\r\n    //     this.PageService.getTageListFromApi();\r\n    //   });\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { Location } from '@angular/common'\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { PageService } from '../../providers/page.service';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { tap } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'fs-tag-detail',\r\n  templateUrl: './tag-detail.component.html',\r\n  styleUrls: ['./tag-detail.component.less'],\r\n})\r\nexport class TagDetailComponent implements OnInit {\r\n\r\n  @Input() isCreate: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  deleteTargetTagIds: string[] = []\r\n\r\n  data: Fs.Cms.Tags.Dtos.TagDto = {\r\n   \r\n   \r\n  } as any;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private location: Location,\r\n    private toasterService: ToasterService,\r\n  ) { }\r\n\r\n\r\n  inputList:  Fs.Cms.Tags.Dtos.TagCreateDto[] = [\r\n    // { name: '' }\r\n  ];\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.pageService.tagData$.subscribe(x => {\r\n      this.data = x;\r\n    })\r\n  }\r\n\r\n\r\n  addOption() {\r\n    this.inputList.push();\r\n  }\r\n\r\n  removeOption(index: number) {\r\n    this.inputList.splice(index, 1);\r\n  }\r\n\r\n  removeOldOption(id: string) {\r\n    // this.data.tags = this.data.tags.filter(x => x.id != id);\r\n    this.deleteTargetTagIds.push(id);\r\n  }\r\n\r\n  save() {\r\n    // if (this.inputList.filter(x => x.name == '').length > 0 && this.data.tagGroupName != '') {\r\n    //   this.toasterService.error(\"不能有空值！\")\r\n    //   return;\r\n    // }\r\n    // if (this.isCreate) this.create()\r\n    // else this.update();\r\n  }\r\n\r\n  update() {\r\n    // this.pageService.updateGroup(this.data.id, this.data.tagGroupName).subscribe(x => {\r\n    //   let createTarget = this.pageService.createGroupAndTags(this.data.id, this.inputList);\r\n    //   let target = this.updateTags().concat(this.deleteTags());\r\n    //   target.push(createTarget)\r\n    //   forkJoin(target).subscribe(()=>{\r\n    //     this.location.back();\r\n    //     this.toasterService.success(\"修改成功！\")\r\n    //   })\r\n      \r\n    // })\r\n  }\r\n\r\n\r\n  updateTags() {\r\n    // let obsList = this.data.tags.map(x => {\r\n    //   return this.pageService.updateTag(x.id, x.name)\r\n    // });\r\n    // return obsList\r\n    // forkJoin(obsList).subscribe();\r\n  }\r\n\r\n  deleteTags() {\r\n    // let obsList = this.deleteTargetTagIds.map(x => {\r\n    //   return this.pageService.delteTag(x);\r\n    // })\r\n    // return obsList;\r\n    // forkJoin(obsList).subscribe()\r\n  }\r\n\r\n  create() {\r\n    // this.pageService.createGroup({\r\n    //   tagGroupName: this.data.tagGroupName\r\n    // }).pipe(tap(x => this.createTags(x.id))).subscribe()\r\n  }\r\n\r\n  createTags(groupId: string) {\r\n    // this.pageService.createGroupAndTags(groupId, this.inputList).subscribe(() => {\r\n    //   this.pageService.getTageListFromApi();\r\n    //   this.toasterService.success(\"新增成功！\");\r\n    //   this.clear();\r\n    // })\r\n  }\r\n\r\n  clear() {\r\n    // this.inputList = [\r\n    //   { name: '' }\r\n    // ];\r\n    // this.deleteTargetTagIds = [];\r\n    // this.data = {\r\n    //   id: '',\r\n    //   tagGroupName: '',\r\n    //   tags: [\r\n    //     {\r\n    //       id: '',\r\n    //       name: ''\r\n    //     }\r\n    //   ]\r\n    // };\r\n  }\r\n}\r\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { PageService } from './providers/page.service';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve() {\r\n    this.pageService.getTageListFromApi();\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DetailRouteConfig implements Resolve<any> {\r\n  constructor(private pageService: PageService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let tagId = route.params.tagId;\r\n    if (tagId) this.pageService.getTagOneFromApi(tagId);\r\n  }\r\n}\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent,\r\n        resolve: { RouteConfig: RouteConfig },\r\n      },\r\n      {\r\n        path: ':tagId',\r\n        component: TagDetailComponent,\r\n        resolve: { DetailRouteConfig: DetailRouteConfig }\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    RouteConfig,\r\n    DetailRouteConfig\r\n  ]\r\n})\r\nexport class TagManagementRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\n\r\nimport { TagManagementRoutingModule } from './tag-management-routing.module';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { LazyModuleFactory } from '@abp/ng.core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TagDetailComponent } from './components/tag-detail/tag-detail.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { PageService } from './providers/page.service';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, LayoutComponent, TagDetailComponent],\r\n  imports: [\r\n    SharedModule,\r\n    NzTagModule,\r\n    TagManagementRoutingModule\r\n  ],\r\n  providers: [PageService]\r\n})\r\nexport class TagManagementModule {\r\n  static forChild(): ModuleWithProviders<TagManagementModule> {\r\n    return {\r\n      ngModule: TagManagementModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<TagManagementModule> {\r\n    return new LazyModuleFactory(TagManagementModule.forChild());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { PostModule } from './post/post.module';\r\nimport { TagManagementModule } from './tag-management/tag-management.module'\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'post' },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        loadChildren: PostModule.forEarly\r\n      },\r\n      {\r\n        path: 'tag',\r\n        loadChildren: TagManagementModule.forEarly\r\n      },\r\n      // {\r\n      //   path: 'storage',\r\n      //   loadChildren: StorageModule.forEarly\r\n      // }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsAdminRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { CmsAdminRoutingModule } from './cms-admin-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    CmsAdminRoutingModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CmsAdminModule {\r\n  static forChild(): ModuleWithProviders<CmsAdminModule> {\r\n    return {\r\n      ngModule: CmsAdminModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<CmsAdminModule> {\r\n    return new LazyModuleFactory(CmsAdminModule.forChild());\r\n  }\r\n\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CmsAdminRoutingModule as ɵa} from './lib/cms-admin-routing.module';\nexport {DetailComponent as ɵg} from './lib/post/components/detail/detail.component';\nexport {ImagePickerComponent as ɵl} from './lib/post/components/image-picker/image-picker.component';\nexport {LayoutComponent as ɵc} from './lib/post/components/layout/layout.component';\nexport {ListComponent as ɵi} from './lib/post/components/main/list/list.component';\nexport {MainComponent as ɵd} from './lib/post/components/main/main.component';\nexport {TagComponent as ɵk} from './lib/post/components/tag/tag.component';\nexport {UploadFileComponent as ɵj} from './lib/post/components/upload-file/upload-file.component';\nexport {PostRoutingModule as ɵn,RouteConfig as ɵm} from './lib/post/post-routing.module';\nexport {PostModule as ɵb} from './lib/post/post.module';\nexport {PageService as ɵe} from './lib/post/providers/page.service';\nexport {PostStateService as ɵf} from './lib/post/providers/post-state.service';\nexport {FileService as ɵh} from './lib/shared';\nexport {LayoutComponent as ɵr} from './lib/tag-management/components/layout/layout.component';\nexport {MainComponent as ɵp} from './lib/tag-management/components/main/main.component';\nexport {TagDetailComponent as ɵs} from './lib/tag-management/components/tag-detail/tag-detail.component';\nexport {PageService as ɵq} from './lib/tag-management/providers/page.service';\nexport {DetailRouteConfig as ɵu,RouteConfig as ɵt,TagManagementRoutingModule as ɵv} from './lib/tag-management/tag-management-routing.module';\nexport {TagManagementModule as ɵo} from './lib/tag-management/tag-management.module';"],"names":["_.cloneDeep","dns.format","PageService","MainComponent","LayoutComponent","RouteConfig","routes"],"mappings":"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"}