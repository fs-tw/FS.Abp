{"version":3,"file":"fs-tw-cms-admin.js","sources":["../../../../libs/cms/admin/src/lib/post/providers/post-state.service.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.html","../../../../libs/cms/admin/src/lib/post/providers/page.service.ts","../../../../libs/cms/admin/src/lib/post/components/image-picker/image-picker.component.html","../../../../libs/cms/admin/src/lib/post/components/image-picker/image-picker.component.ts","../../../../libs/cms/admin/src/lib/post/components/modal/create/create.component.html","../../../../libs/cms/admin/src/lib/post/components/modal/create/create.component.ts","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.html","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.ts","../../../../libs/cms/admin/src/lib/post/components/main/main.component.html","../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts","../../../../libs/cms/admin/src/lib/post/post-routing.module.ts","../../../../libs/cms/admin/src/lib/shared/shared.module.ts","../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.html","../../../../libs/cms/admin/src/lib/post/post.module.ts","../../../../libs/cms/admin/src/lib/cms-admin-routing.module.ts","../../../../libs/cms/admin/src/lib/cms-admin.module.ts","../../../../libs/cms/admin/src/fs-tw-cms-admin.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nexport namespace Post\r\n{\r\n    export interface State\r\n    {\r\n        Blog: Fs.Cms.Blogs.Dtos.BlogDto;\r\n    }\r\n}\r\n  \r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostStateService {\r\n    private store = new InternalStore({} as Post.State);\r\n\r\n    getBlog(): Observable<Fs.Cms.Blogs.Dtos.BlogDto> {\r\n        return this.store.sliceState(state => state.Blog);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n        this.store.patch({ Blog: blog })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\r\n  constructor(\r\n    private blogService: Fs.Cms.Blogs.BlogsApiService,\r\n    private postService: Fs.Cms.Posts.PostsApiService\r\n    // private postService: PostsApiService,\r\n    // private definitionsService: DefinitionsService,\r\n    // private tagsApiService: TagsApiService,\r\n  ) {\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({id: id});\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate({id: id}, input)\r\n  }\r\n  //#endregion\r\n\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n  //#endregion\r\n\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n","<ng-template #Upload>\r\n    <nz-upload\r\n        class=\"avatar-uploader\"\r\n        [nzListType]=\"uploadTemplate ? 'text' : 'picture'\"\r\n        [nzBeforeUpload]=\"beforeUpload\" \r\n        [nzMultiple]=\"isMultiple\"\r\n        >\r\n\r\n        <div *ngTemplateOutlet=\"uploadTemplate || UploadImage\"></div>\r\n        <ng-template #UploadImage>\r\n            <div class=\"divBorder divGridCenter\" [ngStyle]=\"{ 'width': borderWidth, 'height': borderHeight }\">\r\n                <div style=\"font-size: 16px; text-align: center;\">\r\n                    <div class=\"ant-upload-text\">{{ uploadText }}</div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </nz-upload>\r\n</ng-template>\r\n\r\n<ng-template #Image let-item>\r\n    <div class=\"divBorder imgGrid divGridCenter\" \r\n        [ngStyle]=\"{ 'width': borderWidth, 'height': borderHeight }\"\r\n        (click)=\"controllModal(true, item)\">\r\n\r\n        <div class=\"imgGridClose\">\r\n            <i (click)=\"deleteFile(item.fileName)\" nz-icon nzType=\"close\" nzTheme=\"outline\"></i>\r\n        </div>\r\n\r\n        <img [src]=\"item.fileUrl\" style=\"max-width: 100%;\" [ngStyle]=\"{ 'max-height': imageHeight }\" />\r\n    </div>\r\n</ng-template>\r\n\r\n<div [ngClass]=\"{ 'divGrid': inLine }\" [ngStyle]=\"{ 'grid-template-columns': inLine ? 'repeat(auto-fit, ' + borderWidth + ')' : 'unset' }\">\r\n    <!-- 上傳按鈕(前) -->\r\n    <ng-container *ngIf=\"canUpload && showFrontButton\">\r\n        <div *ngTemplateOutlet=\"Upload\"></div>\r\n    </ng-container>\r\n\r\n    <!-- 傳入的圖片 -->\r\n    <ng-container *ngFor=\"let item of existFiles\">\r\n        <div *ngTemplateOutlet=\"imageTemplate || Image; context: {$implicit: item}\"></div>\r\n    </ng-container>\r\n\r\n    <!-- 上傳的圖片 -->\r\n    <ng-container *ngFor=\"let item of showFiles\">\r\n        <div *ngTemplateOutlet=\"imageTemplate || Image; context: {$implicit: item}\"></div>\r\n    </ng-container>\r\n\r\n    <!-- 上傳按鈕(後) -->\r\n    <ng-container *ngIf=\"canUpload && !showFrontButton\">\r\n        <div *ngTemplateOutlet=\"Upload\"></div>\r\n    </ng-container>\r\n    \r\n</div>\r\n\r\n<nz-modal [nzOkText]=\"null\" nzCancelText=\"關閉\" [nzWidth]=\"1000\"\r\n        [nzTitle]=\"'預覽圖'\" \r\n        [(nzVisible)]=\"viewImage.isVisabled\" \r\n        (nzOnCancel)=\"controllModal(false, viewImage.image)\">\r\n    <div class=\"divGridCenter\">\r\n        <img [src]=\"viewImage.image.fileUrl\" style=\"max-width: 100%; max-height: 500px;\" />\r\n    </div>\r\n</nz-modal>","import { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\n\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { ConfigStateService,EnvironmentService } from '@abp/ng.core';\r\n\r\nexport class ImageFile {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class SaveFile {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\nclass ViewImage {\r\n  image: ImageFile;\r\n  isVisabled: boolean;\r\n\r\n  constructor() {\r\n    this.image = new ImageFile();\r\n    this.isVisabled = false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'image-picker',\r\n  templateUrl: './image-picker.component.html',\r\n  styleUrls: ['./image-picker.component.css']\r\n})\r\nexport class ImagePickerComponent implements OnInit {\r\n\r\n  /** 縮圖寬度，單位 px，預設 104px */\r\n  @Input() imageWidth: string = '104px';\r\n\r\n  /** 縮圖高度，單位 px ，預設 104px */\r\n  @Input() imageHeight: string = '104px';\r\n\r\n  /** 外框寬度，單位 px ，預設 104px */\r\n  @Input() borderWidth: string = '104px';\r\n\r\n  /** 外框高度，單位 px ，預設 104px */\r\n  @Input() borderHeight: string = '104px';\r\n\r\n  /** 上傳按鈕文字 */\r\n  @Input() uploadText: string = 'Upload';\r\n\r\n  /** 上傳最大數量 */\r\n  @Input() maxImageCount: number = null;\r\n\r\n  /** 是否可同時選多張圖片 */\r\n  @Input() isMultiple: boolean = true;\r\n\r\n  /** 顯示圖片 Template ，縮圖比例功能會失效 */\r\n  @Input() imageTemplate: TemplateRef<any>;\r\n\r\n  /** 上傳圖片 Template */\r\n  @Input() uploadTemplate: TemplateRef<any>;\r\n\r\n  /** 是否排列在同一行，同一行時行寬同 imageWidth */\r\n  @Input() inLine: boolean = true;\r\n\r\n  /** 上傳按鈕顯示於前面 */\r\n  @Input() showFrontButton: boolean = true;\r\n\r\n  /** 原已上傳圖片 */\r\n  @Input() existFiles: ImageFile[] = [];\r\n\r\n  /** 原已上傳圖片被刪除的檔名 */\r\n  private deleteFiles: string[] = [];\r\n\r\n  /** 本次上傳所顯示圖片 */\r\n  showFiles: ImageFile[] = [];\r\n\r\n  /** 本次上傳圖片 */\r\n  private uploadFiles: NzUploadFile[] = [];\r\n\r\n  /** 顯示預覽圖 modal */\r\n  viewImage: ViewImage = new ViewImage();\r\n\r\n  get canUpload(): boolean {\r\n    let imageNumber = this.existFiles.length + this.uploadFiles.length;\r\n    return this.maxImageCount == null || imageNumber < this.maxImageCount;\r\n  }\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private environmentService:EnvironmentService,\r\n    private configStateService: ConfigStateService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.existFiles = this.existFiles\r\n      .filter(x => x.fileUrl)\r\n      .map(x => new ImageFile(x.fileName, this.getHttpUrl(x.fileUrl)));\r\n\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  clear() {\r\n    this.existFiles = [];\r\n    this.deleteFiles = [];\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  private getHttpUrl(url: string): string {\r\n    let result = url;\r\n    if (url.includes(\"http\")) return result;\r\n\r\n    return this.environmentService.getApiUrl() + url;\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n      return false;\r\n    }\r\n\r\n    let fileName = file.name;\r\n\r\n    let hasExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let hasShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    if (hasExistImage || hasShowImage) return false;\r\n\r\n\r\n    let imgFile: any = file;\r\n    this.getBase64(imgFile, (img) => {\r\n      if (!this.canUpload) {\r\n        this.toasterService.error(\"圖片數已達上限\");\r\n        return;\r\n      }\r\n\r\n      this.uploadFiles.push(imgFile);\r\n      this.showFiles.push(new ImageFile(fileName, img));\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  private getBase64(img: File, callback: (img: string) => void): void {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    let inExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let inShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n\r\n    // 現有圖片刪除\r\n    if (inExistImage) {\r\n      this.existFiles = this.existFiles.filter(x => x.fileName != fileName);\r\n      this.deleteFiles.push(fileName);\r\n      return;\r\n    }\r\n\r\n    // 上傳圖片刪除\r\n    if (inShowImage) {\r\n      this.showFiles = this.showFiles.filter(x => x.fileName != fileName);\r\n      this.uploadFiles = this.uploadFiles.filter(x => x.name != fileName);\r\n    }\r\n\r\n  }\r\n\r\n  controllModal(state: boolean, image: ImageFile = new ImageFile()) {\r\n    this.viewImage.image = image;\r\n    this.viewImage.isVisabled = state;\r\n  }\r\n\r\n  getDeleteFileNames(): string[] {\r\n    return this.deleteFiles;\r\n  }\r\n\r\n  getUploadFiles(): SaveFile[] {\r\n    let existFiles = this.existFiles.filter(x => !this.deleteFiles.includes(x.fileName)).map(x => new SaveFile(x.fileName, x.fileUrl, null));\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    \r\n    return existFiles.concat(updateFiles);\r\n  }\r\n\r\n}\r\n","<button nz-button [nzType]=\"'primary'\" *ngIf=\"!blogId\" (click)=\"showModal()\"><span>+建立</span></button>\r\n<a (click)=\"showModal()\" *ngIf=\"blogId\">編輯</a>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"建立消息種類\" (nzOnCancel)=\"handleCancel()\" [nzFooter]=\"footer\">\r\n  <form nz-form #f=\"ngForm\" se-container=\"1\" labelWidth=\"100\" *ngIf=\"data\">\r\n    <se label=\"是否啟用\" required>\r\n      <nz-radio-group [(ngModel)]=\"data.disable\" name=\"disable\">\r\n        <label nz-radio [nzValue]=\"false\">是</label>\r\n        <label nz-radio [nzValue]=\"true\">否</label>\r\n      </nz-radio-group>\r\n    </se>\r\n\r\n    <!-- *ngIf=\"!isParent\" -->\r\n    <ng-container>\r\n      <se label=\"順序\" required> \r\n        <input type=\"number\" nz-input [(ngModel)]=\"data.sequence\" name=\"no\" required>\r\n      </se>\r\n      <se label=\"名稱\" required>\r\n        <input type=\"text\" nz-input [(ngModel)]=\"data.displayName\" name=\"displayName\" required>\r\n      </se>\r\n      <se label=\"說明\">\r\n        <textarea nz-input type=\"text\" nz-input [(ngModel)]=\"data.description\" name=\"description\"></textarea>\r\n      </se>\r\n  \r\n      <se label=\"網址\">\r\n        <input type=\"text\" nz-input [(ngModel)]=\"data.url\" name=\"url\">\r\n      </se>\r\n  \r\n      <se label=\"列表樣式\" optionalHelp=\"目前可設定有效設定值為 2、3、4 預設為 3\">\r\n        <input type=\"text\" nz-input [(ngModel)]=\"data.listStyle\" name=\"listStyle\">\r\n      </se>\r\n  \r\n      <se label=\"圖示\" optionalHelp=\"建議圖片大小為 40*30，僅能上傳 jpg, png\">\r\n        <image-picker #DefaultImagePicker\r\n            [existFiles]=\"defaultImages\"\r\n            [maxImageCount]=\"1\"\r\n            imageWidth=\"40px\"\r\n            imageHeight=\"30px\"\r\n            borderWidth=\"80px\"\r\n            borderHeight=\"60px\"></image-picker>\r\n      </se>\r\n    </ng-container>\r\n    \r\n\r\n  </form>\r\n</nz-modal>\r\n\r\n\r\n<ng-template #footer>\r\n  <button nz-button nzType=\"default\" (click)=\"handleCancel()\">取消</button>\r\n  <button nz-button nzType=\"primary\" (click)=\"save()\" [disabled]=\"data.sequence == null || !data.displayName\">儲存</button>\r\n</ng-template>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\n\r\n// import { ConfigStateService } from '@abp/ng.core';\r\n// import { NzUploadFile } from 'ng-zorro-antd/upload';\r\n// import { Observable } from 'rxjs';\r\n// import * as _ from 'lodash';\r\n\r\n// import { ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { BlogDto } from '@fs-tw/cms/proxy';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n// import { PageService } from '../../../providers/page.service';\r\n// import { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'fs-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.less']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker : ImagePickerComponent;\r\n\r\n  @Input()\r\n  blogId: string;\r\n\r\n  @Output()\r\n  onSave = new EventEmitter();\r\n\r\n  isVisible = false;\r\n\r\n  data: Fs.Cms.Blogs.Dtos.BlogDto;\r\n  defaultImages: ImageFile[] = [];\r\n\r\n  constructor(\r\n    private pageService: PageService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  showModal() {\r\n    this.data = {\r\n      no: \"\",\r\n      displayName: \"\",\r\n      description: \"\",\r\n      parentId: null,\r\n      disable: false,\r\n      listStyle: \"\",\r\n      sequence: 0,\r\n      url: \"\",\r\n      iconUrl: \"\"\r\n    } as Fs.Cms.Blogs.Dtos.BlogDto;\r\n\r\n    this.defaultImages = [];\r\n\r\n    if (this.blogId) {\r\n      this.pageService.getBlogById(this.blogId).subscribe((x) => {\r\n        this.data = x;\r\n\r\n        // 已上傳圖片\r\n        this.defaultImages = [new ImageFile('test', 'https://dummyimage.com/140x98/000/fff')];\r\n        // if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, 'http://' + x.iconUrl));\r\n      });\r\n    }\r\n\r\n    this.isVisible = true;\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    // 補上傳、刪除檔案 api\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();\r\n\r\n    const formData = new FormData();\r\n    for(let item of uploadImageInfos) {\r\n      if (item.isUpload) formData.append('files[]', item.file, '');\r\n    }\r\n    console.log(uploadImageInfos, deleteImageNames);\r\n\r\n\r\n    let input: Fs.Cms.Blogs.Dtos.BlogDto = _.cloneDeep(this.data);\r\n    \r\n    let action: Observable<any>;\r\n    if (!this.blogId) {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    } else {\r\n      action = this.pageService.updateBlog(this.blogId, input);\r\n    }\r\n\r\n    action.subscribe(() => {\r\n      this.onSave.emit();\r\n      this.handleCancel();\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n\r\n  // @Input() input: BlogDto;\r\n  // @Output() onSave = new EventEmitter();\r\n  // @Input() isParent = false;\r\n\r\n\r\n  // i: BlogDto = {\r\n  //   enable: true\r\n  // } as BlogDto;\r\n\r\n  // uploadFile: NzUploadFile = null;\r\n  // iconUrl: string;\r\n  // hasImg: boolean = false;\r\n\r\n  // constructor(\r\n  //   private store: Store,\r\n  //   private configStateService: ConfigStateService,\r\n  //   private toasterService: ToasterService,\r\n  //   private pageService: PageService,\r\n  //   private cmsFileService: FileService\r\n  // ) { }\r\n\r\n  // ngOnInit() {\r\n\r\n  // }\r\n\r\n  \r\n\r\n  // getImageUrl(img: string) {\r\n  //   return this.cmsFileService.getFileByName(img);\r\n  //   // return this.configStateService.getApiUrl() + \"/api/themes/file/\" + img.replace(/\\\\/g, \"%5C\") + \"?p=\" +  Math.floor(Math.random()*999)+1;\r\n  // }\r\n\r\n  // handleCancel() {\r\n  //   this.isVisible = false;\r\n  // }\r\n\r\n  // save() {\r\n  //   let act: Observable<any>;\r\n  //   if (!this.input) {\r\n  //     act = this.pageService.createBlog(this.i);\r\n  //   }\r\n  //   else {\r\n  //     act = this.pageService.updateBlog({ ...this.input, ...this.i }, this.input.codesId)\r\n  //   }\r\n  //   act.subscribe(x => {\r\n  //     this.handleCancel();\r\n\r\n  //     if (this.uploadFile) {\r\n  //       this.saveImage(x);\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.onSave.emit();\r\n  //     if (this.input) {\r\n  //       this.toasterService.success(\"更新成功！\");\r\n  //       return;\r\n  //     }\r\n  //     this.toasterService.success(\"新增成功！\");\r\n  //   })\r\n  // }\r\n\r\n  // //#region 圖片上傳\r\n  // saveImage(blog: BlogDto) {\r\n  //   const formData = new FormData();\r\n  //   let file: any = this.uploadFile;\r\n  //   let fileExName = file.type === 'image/png' ? \".png\" : \".jpg\";\r\n  //   let url = `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`;\r\n  //   formData.append('files[]', file, `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`);\r\n    \r\n  //   this.cmsFileService.uploadFileByFormData(formData).subscribe(x=>{\r\n  //     blog.iconUrl = url\r\n  //     this.pageService.updateBlog(blog, blog.codesId)\r\n  //       .subscribe((x) => {\r\n  //         this.onSave.emit();\r\n  //         if (this.input) {\r\n  //           this.toasterService.success(\"更新成功！\");\r\n  //           return;\r\n  //         }\r\n  //         this.toasterService.success(\"新增成功！\");\r\n  //       }, error => {\r\n  //         this.toasterService.error(\"上傳更新失敗\")\r\n  //       })\r\n  //   });   \r\n  // }\r\n\r\n  // beforeUpload = (file: NzUploadFile): boolean => {\r\n  //   let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  //   if (!isJpgOrPng) {\r\n  //     this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n  //     return\r\n  //   }\r\n\r\n  //   let imgFile: any = file;\r\n  //   this.getBase64(imgFile, (img) => {\r\n  //     this.uploadFile = file;\r\n  //     this.iconUrl = img;\r\n  //     this.hasImg = true;\r\n  //   });\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // private getBase64(img: File, callback: (img: string) => void): void {\r\n  //   const reader = new FileReader();\r\n  //   reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n  //   reader.readAsDataURL(img);\r\n  // }\r\n\r\n  // resetIcon() {\r\n  //   this.uploadFile = null;\r\n  //   this.iconUrl = \"assets/img/info.png\";\r\n  //   this.i.iconUrl = \"\";\r\n  //   this.hasImg = false;\r\n  // }\r\n  // //#endregion\r\n\r\n}\r\n","<div>\r\n  <div class=\"mb-md\">\r\n    <fs-create (onSave)=\"reload()\" style=\"margin-right: 10px;\"></fs-create>\r\n    <button nz-button [nzType]=\"'primary'\" (click)=\"showDetail(null)\">\r\n      全部\r\n    </button>\r\n  </div>\r\n  <nz-table #basicTable [nzData]=\"blogDatas\" nzSize=\"small\" nzBordered [nzLoading]=\"loading\">\r\n    <thead>\r\n      <tr>\r\n        <th nzWidth=\"75px\"></th>\r\n        <th>名稱</th>\r\n        <th>狀態</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"let data of basicTable.data\"\r\n        style=\"cursor: pointer;\"\r\n        class=\"bg-white listColor\"\r\n        [ngClass]=\"{ listSelected: data.id == selectBlogCodeId }\"\r\n      >\r\n        <td nzWidth=\"75px\" nzAlign=\"center\">\r\n          <a nz-dropdown [nzDropdownMenu]=\"menu\">\r\n            {{ 'AbpIdentity::Actions' | abpLocalization }}\r\n            <i nz-icon nzType=\"down\"></i>\r\n          </a>\r\n          <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n            <ul nz-menu>\r\n              <li nz-menu-item>\r\n                <fs-create (onSave)=\"reload()\" [blogId]=\"data.id\"></fs-create>\r\n              </li>\r\n              <li nz-menu-item *ngIf=\"data.no != 'CmsBlogNotClassified'\">\r\n                <a (click)=\"deleteBlog(data)\" class=\"text-red\">刪除</a>\r\n              </li>\r\n            </ul>\r\n          </nz-dropdown-menu>\r\n        </td>\r\n        <td (click)=\"showDetail(data)\">{{ data.displayName }}</td>\r\n        <td (click)=\"showDetail(data)\">\r\n          {{ data.disable ? '關閉' : '啟用' }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </nz-table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { PostStateService } from '../../../providers/post-state.service';\r\n\r\n// import { BlogDto } from '@fs-tw/cms/proxy';\r\n// import { CodesDto, CodingWithSettingTreeModel } from '@fs-tw/theme-core';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Select } from '@ngxs/store';\r\n// import { Observable, Subscription } from 'rxjs';\r\n// import { PageService } from '../../../providers/page.service';\r\n// import { PostState } from '../../../providers/post/post.state';\r\n// import { PostsStateService } from '../../../providers/post/poststate.service';\r\n\r\n@Component({\r\n  selector: 'fs-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  // @Select(PostState.getPostsTotalCount)\r\n  // totalCount$: Observable<number>;\r\n\r\n  // blogDatas: BlogDto[] = [];\r\n\r\n  // news: CodingWithSettingTreeModel;\r\n  // subscription: Subscription;\r\n  // parentCode: CodesDto;\r\n  \r\n  blogDatas: Fs.Cms.Blogs.Dtos.BlogWithDetailsDto[] = [];\r\n  selectBlogCodeId = \"\";\r\n\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit() { \r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n    let input: Fs.Cms.Blogs.Dtos.BlogGetListDto = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.loading = true;\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogDatas = x.items;\r\n      this.loading = false;\r\n    }, (error) => {\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  showDetail(blog: Fs.Cms.Blogs.Dtos.BlogWithDetailsDto) {\r\n    if (blog == null) {\r\n      this.selectBlogCodeId = null;\r\n      return;\r\n    }\r\n\r\n    this.selectBlogCodeId = blog.id;\r\n    this.postStateService.setBlog(blog);\r\n  }\r\n\r\n  deleteBlog(blog: Fs.Cms.Blogs.Dtos.BlogWithDetailsDto) {\r\n\r\n  }\r\n\r\n  // showDetail(blog: BlogDto) {\r\n  //   if (blog == null) {\r\n  //     this.selectBlogCodeId = null;\r\n  //     this.router.navigate([\"/cms/post\"], { queryParams: { blog: 'all', name: '全部' } })\r\n  //   }\r\n  //   else {\r\n  //     this.selectBlogCodeId = blog.codesId;\r\n  //     this.router.navigate([\"/cms/post\"], { queryParams: { blog: blog.codesId, name: blog.displayName } })\r\n  //   }\r\n  // }\r\n\r\n  // deleteBlog(data: BlogDto) {\r\n  //   let mes = `(注意：${data.displayName}下的所有文章將移至不分類。)`;\r\n\r\n  //   this.confirmationService.warn(\r\n  //     `確認要刪除${data.displayName}嗎？${mes}`,\r\n  //     '系統訊息', {\r\n  //     cancelText: \"關閉\",\r\n  //     yesText: \"確定\"\r\n  //   }).subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.pageService.deleteBlog(data.codesId).subscribe(x => {\r\n  //         this.toasterService.success(\"刪除成功！\");\r\n  //         this.reload();\r\n  //       })\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n\r\n}\r\n","<nz-row nzGutter=\"16\">\r\n  <nz-col nzSpan=\"8\">\r\n    <fs-list></fs-list>\r\n  </nz-col>\r\n  <nz-col nzSpan=\"16\">\r\n    <div>\r\n      <div class=\"mb-md\">\r\n        <h5>類型：{{ blogName }}</h5>\r\n        <button\r\n          nz-button\r\n          nzType=\"primary\"\r\n          (click)=\"gotoDetail()\"\r\n          style=\"margin-right: 20px;\"\r\n        >\r\n          新增\r\n        </button>\r\n        <nz-input-group\r\n          nzSearch\r\n          [nzAddOnAfter]=\"suffixIconButton\"\r\n          style=\"width: 300px;\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"postParams.keyword\"\r\n            nz-input\r\n            placeholder=\"輸入名稱\"\r\n          />\r\n        </nz-input-group>\r\n        <ng-template #suffixIconButton>\r\n          <button nz-button nzType=\"primary\" (click)=\"changePage(1)\" nzSearch>\r\n            <i nz-icon nzType=\"search\"></i>\r\n          </button>\r\n        </ng-template>\r\n      </div>\r\n      <nz-table\r\n        #listTable\r\n        [nzData]=\"posts\"\r\n        nzSize=\"small\"\r\n        nzPageSize=\"10\"\r\n        [nzTotal]=\"totalCount\"\r\n        [nzFrontPagination]=\"false\"\r\n        [nzLoading]=\"loading\"\r\n        (nzPageIndexChange)=\"changePage($event)\"\r\n        nzBordered\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th nzWidth=\"110px\"></th>\r\n            <th>啟用</th>\r\n            <th>標題</th>\r\n            <th>顯示模式</th>\r\n            <th>發佈日期</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container *ngFor=\"let item of listTable.data\">\r\n            <tr class=\"bg-white\">\r\n              <td nzShowExpand [(nzExpand)]=\"item.expand\" nzWidth=\"110px\">\r\n                <a nz-dropdown [nzDropdownMenu]=\"menu\">\r\n                  {{ 'AbpIdentity::Actions' | abpLocalization }}\r\n                  <i nz-icon nzType=\"down\"></i>\r\n                </a>\r\n                <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n                  <ul nz-menu>\r\n                    <li nz-menu-item (click)=\"gotoDetail(item.id)\">\r\n                      <a>編輯</a>\r\n                    </li>\r\n                    <li nz-menu-item (click)=\"deleteItem(item)\">\r\n                      <a class=\"text-red\">刪除</a>\r\n                    </li>\r\n                  </ul>\r\n                </nz-dropdown-menu>\r\n              </td>\r\n              <td>\r\n                <span *ngIf=\"item.published\"\r\n                  ><i nz-icon nzType=\"check\" nzTheme=\"outline\"></i\r\n                ></span>\r\n                <span *ngIf=\"!item.published\"\r\n                  ><i nz-icon nzType=\"close\" nzTheme=\"outline\"></i\r\n                ></span>\r\n              </td>\r\n              <td>\r\n                {{ item.title }}\r\n              </td>\r\n              <td>\r\n                <span *ngIf=\"item.displayMode == 0\">內容</span>\r\n                <span *ngIf=\"item.displayMode == 1\">連結</span>\r\n              </td>\r\n              <td>{{ item.published_At | date: 'yyyy-MM-dd HH:mm:ss' }}</td>\r\n            </tr>\r\n\r\n            <tr [nzExpand]=\"item.expand\">\r\n              <div>\r\n                <h3>副標題</h3>\r\n                <p>{{ item.subtitle || '-' }}</p>\r\n                <div *ngIf=\"item.displayMode == 0\">\r\n                  <h3>內容：</h3>\r\n                  <quill-view [content]=\"item.content\"></quill-view>\r\n                </div>\r\n                <div *ngIf=\"item.displayMode == 1\">\r\n                  <h3>連結</h3>\r\n                  <p>{{ item.url }}</p>\r\n                </div>\r\n              </div>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n      </nz-table>\r\n    </div>\r\n  </nz-col>\r\n</nz-row>\r\n\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n// import { ActivatedRoute, Router } from '@angular/router';\r\n// import { PostWithDetailsDto } from '@fs-tw/cms/proxy';\r\n// import { CodesDto } from '@fs-tw/theme-core';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Select, Store } from '@ngxs/store';\r\n// import { Observable, Subscription } from 'rxjs';\r\n// import { Deletepost, GetPosts } from '../../providers/post/post.actions';\r\n// import { PostState } from '../../providers/post/post.state';\r\n// import { PostsStateService } from '../../providers/post/poststate.service';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",\r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private postStateService: PostStateService\r\n  ) { }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.changePage(1);\r\n    })\r\n  }\r\n\r\n  gotoDetail() {\r\n\r\n  }\r\n\r\n  changePage(page: number) {\r\n    this.postParams.skipCount = (page - 1) * this.postParams.maxResultCount;\r\n\r\n    this.loading = true;\r\n    this.pageService.getPostsByBlogId(this.postParams).subscribe((x) => {\r\n      this.loading = false;\r\n      this.posts = x.items;\r\n      this.totalCount = x.totalCount;\r\n    })\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostWithDetailsDto) {\r\n\r\n  }\r\n\r\n  // ngOnDestroy(): void {\r\n  //   if (this.subscription) {\r\n  //     this.subscription.unsubscribe();\r\n  //   }\r\n  // }\r\n\r\n  // blogName: string = \"\";\r\n\r\n  // ngOnInit(): void {\r\n  //   this.subscription = this.activatedRoute.queryParams.subscribe(x => {\r\n  //     if (x.blog) {\r\n  //       this.blogId = x.blog\r\n  //       this.blogName = x.name;\r\n  //       if (x.blog == 'all') this.blogId = \"\";\r\n  //     } else {\r\n  //       let query = this.postsStateService.getPostQuery();\r\n  //       this.keyword = query.param.value;\r\n  //       this.blogId = query.param.blogCodeId\r\n  //       this.blogName = query.blogName;\r\n  //     }\r\n  //     this.changePage(1);\r\n  //   });\r\n  // }\r\n\r\n  // gotoDetail(id?: string) {\r\n  //   if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n  //   else this.router.navigate([\"/cms/post/detail\"]);\r\n  // }\r\n\r\n  // deleteItem(data: PostWithDetailsDto) {\r\n  //   this.confirmationService.warn(\r\n  //     `確定要刪除 ${data.title}嗎？`,\r\n  //     '系統訊息', {\r\n  //     cancelText: \"關閉\",\r\n  //     yesText: \"確定\"\r\n  //   }).subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.store.dispatch(new Deletepost(data.id))\r\n  //       this.toasterService.success(\"刪除成功！\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // changePage(event: number) {\r\n  //   this.loading = true;\r\n  //   this.store.dispatch(\r\n  //     new GetPosts(\r\n  //       {\r\n  //         param: {\r\n  //           value: this.keyword,\r\n  //           fields: \"Title,Subtitle\",\r\n  //           blogCodeId: this.blogId,\r\n  //           skipCount: (event - 1) * 10,\r\n  //           maxResultCount: 10,\r\n  //           sorting: \"\"\r\n  //         },\r\n  //         blogName: this.blogName\r\n  //       }\r\n  //     )).subscribe(() => this.loading = false);\r\n  // }\r\n\r\n  // search() {\r\n  //   this.changePage(1);\r\n  // }\r\n\r\n}\r\n","import { ConfigStateService,EnvironmentService } from '@abp/ng.core';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\n// import { ActivatedRoute, Router } from '@angular/router';\r\n// import { BlogDto, PostImageDto } from '@fs-tw/cms/proxy';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Store } from '@ngxs/store';\r\n// import { forkJoin, Observable } from 'rxjs';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n// import { PageService } from '../../providers/page.service';\r\n// import { PostsStateService } from '../../providers/post/poststate.service';\r\n// import { UploadFileComponent } from '../upload-file/upload-file.component';\r\n// import { TagComponent } from '../tag/tag.component';\r\n// import { finalize } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // apiUrl = \"\";\r\n  // @ViewChild(UploadFileComponent) uploadFileComponent: UploadFileComponent;\r\n\r\n  // @ViewChild(TagComponent) tagComponent: TagComponent;\r\n\r\n  // data: any =\r\n  //   { published: true, published_At: new Date(), attachmentFileUrls: [], content: \"\", postImages: [], postTags: [] };\r\n\r\n  // isVisible = false;\r\n  // selectImage = \"\";\r\n  // showList = [];\r\n  // fileList = [];\r\n  // isSpinning = false;\r\n  // blogs: BlogDto[] = []\r\n\r\n\r\n\r\n\r\n  // constructor(\r\n  //   private confirmationService: ConfirmationService,\r\n  //   private toasterService: ToasterService,\r\n  //   private postsStateService: PostsStateService,\r\n  //   private configStateService: ConfigStateService,\r\n  //   private activatedRoute: ActivatedRoute,\r\n  //   private pageService: PageService,\r\n  //   private fileService: FileService,\r\n  //   private environmentService:EnvironmentService,\r\n  //   private router: Router,\r\n  // ) {\r\n\r\n  //   this.apiUrl = this.environmentService.getApiUrl() + \"/\";\r\n  //   this.getBlogs();\r\n  //   this.activatedRoute.params.subscribe(x => {\r\n  //     if (x.id) {\r\n  //       this.isSpinning = true;\r\n  //       this.pageService.getPostById(x[\"id\"]).subscribe(post => {\r\n  //         this.data = post;\r\n  //         this.isSpinning = false;\r\n  //         this.init_list();\r\n  //       })\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n\r\n  // getBlogs() {\r\n  //   this.pageService.blogGetList().subscribe(x => {\r\n  //     this.blogs = x;\r\n  //   });\r\n  // }\r\n\r\n  // ngOnDestroy(): void { }\r\n\r\n  // ngOnInit() { }\r\n\r\n  // getUrl(x: string) {\r\n  //   if (x.includes('http')) {\r\n  //     return x;\r\n  //   } else {\r\n  //     return this.fileService.getFileByName(x);\r\n  //   }\r\n  // }\r\n\r\n  // getFileName(x: string) {\r\n  //   let splitStr = x.split(\"\\\\\");\r\n  //   return splitStr[splitStr.length - 1];\r\n  // }\r\n\r\n  // init_list() {\r\n  //   this.fileList = [];\r\n  //   this.showList = this.data.postImages.map((item, index) => {\r\n  //     return {\r\n  //       uid: index.toString(),\r\n  //       status: 'done',\r\n  //       type: \"image/jpeg\",\r\n  //       url: this.getUrl(item.url),\r\n  //       thumbUrl: this.getUrl(item.url),\r\n  //       needDelete: true,\r\n  //       isCover: item.isCover,\r\n  //       name: this.getFileName(item.url),\r\n  //       or_url: item.url\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // showModal(imgUrl: string): void {\r\n  //   this.isVisible = true;\r\n  //   this.selectImage = imgUrl;\r\n  // }\r\n\r\n  // handleCancel(): void {\r\n  //   this.isVisible = false;\r\n  // }\r\n\r\n\r\n  // setFileUrls(event) {\r\n  //   this.data.attachmentFileUrls = event;\r\n  // }\r\n\r\n  // beforeUpload = (file: any): boolean => {\r\n  //   var reader = new FileReader();\r\n  //   reader.readAsDataURL(file);\r\n  //   var vm = this;\r\n  //   reader.addEventListener(\"load\", function () {\r\n  //     file.url = reader.result;\r\n  //     file.needDelete = false;\r\n  //     vm.fileList.push(file);\r\n  //     vm.showList.push(file);\r\n  //   }, false);\r\n  //   return false;\r\n  // };\r\n\r\n  // delete(item: any, index: number) {\r\n  //   this.confirmationService.warn(\r\n  //     '確認要刪除嗎？',\r\n  //     '系統訊息', {\r\n  //     cancelText: \"關閉\",\r\n  //     yesText: \"確定\"\r\n  //   }).subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.showList.splice(index, 1);\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n\r\n  // save() {\r\n  //   this.isSpinning = true\r\n  //   let mes = \"建立成功！\";\r\n  //   if (this.data.id) mes = \"更新成功！\";\r\n  //   let cover = this.showList.find(x => { return x.isCover == true });\r\n\r\n  //   let result = this.handleUpload()\r\n  //   let im: string[] = this.showList.map(x => x.or_url);\r\n  //   let old_images = this.data.postImages.filter(x => im.some(y => y == x.url));\r\n  //   this.data.postImages = result.concat(old_images);\r\n  //   if (cover) {\r\n  //     this.data.postImages.forEach(x => {\r\n  //       if (x.url.includes(cover.name)) x.isCover = true;\r\n  //       else x.isCover = false;\r\n  //     });\r\n  //   }\r\n  //   this.data.attachmentFileUrls = this.uploadFileComponent.save();\r\n  //   this.data.published_At = new Date(this.data.published_At).toLocalISOString();\r\n  //   let act: Observable<any>;\r\n  //   if (this.data.id) {\r\n  //     act = this.postsStateService.update(this.data, this.data.id);\r\n  //   } else {\r\n  //     act = this.postsStateService.create(this.data);\r\n  //   }\r\n  //   act.subscribe(x => {\r\n  //     forkJoin(this.tagComponent.save(x.id)).pipe(finalize(() => {\r\n  //       this.toasterService.success(mes);\r\n  //       this.isSpinning = false;\r\n  //       this.router.navigate([\"cms/post\"], { queryParams: { blog: this.data.blogCodeId } });\r\n  //     })).subscribe(x => { })\r\n  //   });\r\n  // }\r\n\r\n  // handleUpload(): PostImageDto[] {\r\n  //   const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('');\r\n  //   const formData = new FormData();\r\n  //   let postImageList: PostImageDto[] = []\r\n  //   this.fileList.forEach((file: any) => {\r\n  //     let url = `cms\\\\posts\\\\${randomName}\\\\${file.name}`;\r\n  //     postImageList.push({ url, isCover: false });\r\n  //     formData.append('files[]', file, url);\r\n  //   });\r\n  //   this.fileService.uploadFileByFormData(formData).subscribe(() => {\r\n  //   }, (error) => {\r\n  //     this.toasterService.error(\"上傳失敗\");\r\n  //   });\r\n\r\n  //   return postImageList;\r\n  // }\r\n\r\n  // refreshStatus(input) {\r\n  //   this.showList.forEach(x => {\r\n  //     if (x.uid != input.uid) x.isCover = false;\r\n  //   });\r\n  // }\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve } from '@angular/router';\r\n\r\nimport { PostStateService } from './providers/post-state.service';\r\n\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DetailComponent } from './components/detail/detail.component';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private postStateService: PostStateService) { }\r\n\r\n  resolve() {\r\n    return this.postStateService.setBlog(null);\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    resolve: { 'RouteConfig': RouteConfig },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent\r\n      },\r\n      {\r\n        path:'detail',\r\n        component:DetailComponent,\r\n      },\r\n      {\r\n        path:'detail/:postId',\r\n        component:DetailComponent,\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule], \r\n  providers:[\r\n    RouteConfig\r\n  ]\r\n})\r\nexport class PostRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\n// import { NgAlainBasicModule } from '@fs-tw/theme-ng-alain/basic';\r\n\r\nconst COMPONENT = []\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENT],\r\n  imports: [\r\n    // NgAlainBasicModule,\r\n  ],\r\n  exports: [\r\n    // NgAlainBasicModule,\r\n    ...COMPONENT\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { Confirmation, ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { Store } from '@ngxs/store';\r\n// import { NzModalRef } from 'ng-zorro-antd/modal';\r\n// import { NzUploadFile } from 'ng-zorro-antd/upload';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // @Input()\r\n  // existFileUrls: string[] = [];\r\n\r\n  // fileUrl: string[] = [];\r\n  // tplModal: NzModalRef;\r\n  // loading: boolean = false;\r\n  // fileList: NzUploadFile[] = [];\r\n  // constructor(\r\n  //   private toasterService: ToasterService,\r\n  //   private confirmationService: ConfirmationService,\r\n  //   private fileService: FileService,\r\n  //   private store: Store,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  // getUrl(x: string) {    \r\n  //   if (x.includes('http')) {\r\n  //     return x;\r\n  //   } else {\r\n  //     return this.fileService.getFileByName(x);\r\n  //   }\r\n  // }\r\n\r\n  // getFileName(x: string) {\r\n  //   let splitStr = x.split(\"\\\\\");\r\n  //   return splitStr[splitStr.length - 1];\r\n  // }\r\n\r\n  // delete(url) {\r\n  //   this.confirmationService\r\n  //   .warn('確認刪除嗎？', '系統訊息', {\r\n  //     messageLocalizationParams: [name],\r\n  //   })\r\n  //   .subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.existFileUrls = this.existFileUrls.filter(x => x != url);\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n\r\n\r\n  // beforeUpload = (file: NzUploadFile): boolean => {\r\n  //   let exist = this.existFileUrls.findIndex(x => x == file.name) > -1 ||\r\n  //     this.fileList.findIndex(x => x.name == file.name) > -1;\r\n  //   if (exist) return false;\r\n  //   this.fileList = this.fileList.concat(file);\r\n  //   return false;\r\n  // };\r\n\r\n  // save(): string[] {\r\n  //   this.loading = true;\r\n  //   const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('');\r\n  //   const formData = new FormData();\r\n  //   let urlList: string[] = this.existFileUrls;\r\n  //   this.fileList.forEach((file: any) => {\r\n  //     let url = `cms\\\\posts\\\\${randomName}\\\\${file.name}`;\r\n  //     urlList.push(url);\r\n  //     formData.append('files[]', file, url);\r\n  //   });    \r\n  //   this.fileService.uploadFileByFormData(formData).subscribe(() => {\r\n  //   }, (error) => {\r\n  //     this.loading = false;\r\n  //     this.toasterService.error(\"上傳失敗\");\r\n  //   });\r\n  //   return urlList;\r\n  // }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { group } from '@angular/animations';\r\n// import { PostTagMapDto, TagGroupDto } from '@fs-tw/cms/proxy';\r\n// import * as _ from 'lodash';\r\n// import { Observable } from 'rxjs';\r\n// import { take } from 'rxjs/operators';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // postTagsDict: { [tagCodeId: string]: PostTagMapDto; } = {};\r\n\r\n  // @Input() postId: string;\r\n\r\n  // @Input()\r\n  // set postTags(val: PostTagMapDto[]) {    \r\n  //   for (let item of val) {\r\n  //     this.postTagsDict[item.tagCodeId] = item;\r\n  //   }\r\n\r\n  //   this.existTagCodeIds = val.map(x => x.tagCodeId);\r\n\r\n  //   this.pageService.getAllTags().pipe(take(1)).subscribe(x => {\r\n  //     this.tagGroups = x;\r\n  //     for (let group of this.tagGroups) {\r\n  //       for (let tag of group.tags) {\r\n  //         if (this.existTagCodeIds.includes(tag.id)) {\r\n  //           tag.check = true;\r\n  //           continue;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // existTagCodeIds: string[] = [];\r\n  // tagGroups: any[] = []\r\n  // constructor(\r\n  //   private pageService: PageService,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // checkParent(group: any) {\r\n  //   group.check = !group.check;\r\n  //   for (let item of group.tags) {\r\n  //     item.check = group.check;\r\n  //   }\r\n\r\n  // }\r\n  // checkChild(tag: any) {\r\n  //   tag.check = !tag.check;\r\n  // }\r\n\r\n\r\n  // save(postId?: string): Observable<any>[] {\r\n  //   if(!this.postId) this.postId = postId;\r\n  //   let tags: any[] = _.flatMap(this.tagGroups, \"tags\").filter(x => x.check);\r\n  //   let deleteTargetIds: string[] = _.xorWith(this.existTagCodeIds, tags.map(x => x.id));\r\n  //   let action: Observable<any>[] = [];\r\n  //   for (let tagCodeId of deleteTargetIds) {\r\n  //     if (this.postTagsDict[tagCodeId]) {\r\n  //       action.push(this.pageService.deletePostTagMap(this.postTagsDict[tagCodeId].id));\r\n  //     } else {\r\n  //       action.push(this.pageService.createPostTagMap(this.postId, tagCodeId));\r\n  //     }\r\n  //   }\r\n  //   return action;\r\n  // }\r\n}\r\n","<br>\r\n<!-- <label>搜尋標籤：</label>\r\n\r\n<nz-select nzSize='small' [(ngModel)]=\"select\" nzAllowClear nzShowSearch style=\"width: 200px;\">\r\n    <nz-option-group *ngFor=\"let item of tagGroups\" [nzLabel]=\"item.tagGroupName\">\r\n        <nz-option *ngFor=\"let i of item.tags\" [nzLabel]=\"i.name\" [nzValue]=\"i.name\"></nz-option>\r\n    </nz-option-group>\r\n</nz-select>\r\n<button nz-button nzType=\"primary\" nzShape=\"circle\"><i nz-icon nzType=\"search\"></i></button> -->\r\n\r\n<!-- 只啟用以下 table -->\r\n<!-- <nz-table #smallTable nzBordered nzSize=\"small\" [nzData]=\"tagGroups\" style=\"width: 500px;\" nzShowPagination=\"false\"\r\n    style=\"margin-top: 10px;\">\r\n    <thead>\r\n        <tr>\r\n            <th nzAlign=\"center\">分類</th>\r\n            <th nzAlign=\"center\">標籤</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let tagGroup of smallTable.data; let parentIndex = index\" class=\"bg-white\">\r\n            <td>\r\n                <nz-tag [nzColor]=\"tagGroup.check? 'green' : 'default'\" (click)=\"checkParent(tagGroup)\" class=\"pointer\">\r\n                    <i nz-icon [nzType]=\"tagGroup.check ? 'check' : 'close'\"></i>\r\n                    {{ tagGroup.tagGroupName }}\r\n                </nz-tag>\r\n            </td>\r\n            <td>               \r\n                <nz-tag *ngFor=\"let tagItem of tagGroup.tags; let childIndex = index\" class=\"pointer\"\r\n                    [nzColor]=\"tagItem.check ? 'green' : 'default'\" (click)=\"checkChild(tagItem)\">\r\n                    <i nz-icon [nzType]=\"tagItem.check ? 'check' : 'close'\"></i>\r\n                    {{ tagItem.name }}\r\n                </nz-tag>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</nz-table> -->\r\n\r\n<!-- <button (click)=\"save()\">check</button> -->","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\n\r\nimport { SEModule } from '@delon/abc/se';\r\n\r\nimport { PostRoutingModule } from './post-routing.module';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SharedModule } from '../shared/shared.module'\r\n\r\nimport { DetailComponent } from './components/detail/detail.component';\r\nimport { ListComponent } from './components/main/list/list.component';\r\nimport { CreateComponent } from './components/modal/create/create.component';\r\nimport { PageService } from './providers/page.service';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\nimport { ImagePickerComponent } from './components/image-picker/image-picker.component';\r\n\r\nconst NzModules = [\r\n  NzGridModule,\r\n  NzInputModule,\r\n  NzTableModule,\r\n  NzDropDownModule,\r\n  NzButtonModule,\r\n  NzIconModule,\r\n  NzModalModule,\r\n  NzRadioModule,\r\n  NzUploadModule,\r\n  SEModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    MainComponent,\r\n    DetailComponent,\r\n    ListComponent,\r\n    CreateComponent,\r\n    UploadFileComponent,\r\n    TagComponent,\r\n    ImagePickerComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    PostRoutingModule,\r\n    ...NzModules,\r\n    // NgxsModule.forFeature([PostState]),\r\n    QuillModule.forRoot()\r\n\r\n  ],\r\n  providers: [\r\n    // PostsStateService,\r\n    PageService\r\n  ]\r\n})\r\nexport class PostModule {\r\n  static forChild(): ModuleWithProviders<PostModule> {\r\n    return {\r\n      ngModule: PostModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { PostModule } from './post/post.module';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'post' },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        loadChildren: PostModule.forEarly\r\n      },\r\n      // {\r\n      //   path: 'tag',\r\n      //   loadChildren: TagManagementModule.forEarly\r\n      // },\r\n      // {\r\n      //   path: 'storage',\r\n      //   loadChildren: StorageModule.forEarly\r\n      // }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsAdminRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { CmsAdminRoutingModule } from './cms-admin-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    CmsAdminRoutingModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CmsAdminModule {\r\n  static forChild(): ModuleWithProviders<CmsAdminModule> {\r\n    return {\r\n      ngModule: CmsAdminModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<CmsAdminModule> {\r\n    return new LazyModuleFactory(CmsAdminModule.forChild());\r\n  }\r\n\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","_.cloneDeep","i0.ɵɵtextInterpolate1","routes"],"mappings":"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"}