{"version":3,"file":"fs-tw-cms-admin.js","sources":["../../../../libs/cms/admin/src/lib/post/providers/post-state.service.ts","../../../../libs/cms/admin/src/lib/post/components/layout/layout.component.ts","../../../../libs/cms/admin/src/lib/post/providers/page.service.ts","../../../../libs/cms/admin/src/lib/post/components/main/main.component.ts","../../../../libs/cms/admin/src/lib/post/components/image-picker/image-picker.component.ts","../../../../libs/cms/admin/src/lib/post/components/detail/detail.component.ts","../../../../libs/cms/admin/src/lib/post/post-routing.module.ts","../../../../libs/cms/admin/src/lib/shared/pipe/get-file.pipe.ts","../../../../libs/cms/admin/src/lib/shared/shared.module.ts","../../../../libs/cms/admin/src/lib/shared/file.service.ts","../../../../libs/cms/admin/src/lib/post/components/main/list/list.component.ts","../../../../libs/cms/admin/src/lib/post/components/modal/create/create.component.ts","../../../../libs/cms/admin/src/lib/post/components/upload-file/upload-file.component.ts","../../../../libs/cms/admin/src/lib/post/components/tag/tag.component.ts","../../../../libs/cms/admin/src/lib/post/post.module.ts","../../../../libs/cms/admin/src/lib/cms-admin-routing.module.ts","../../../../libs/cms/admin/src/lib/cms-admin.module.ts","../../../../libs/cms/admin/src/fs-tw-cms-admin.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nexport namespace Post\r\n{\r\n    export interface State\r\n    {\r\n        Blog: Fs.Cms.Blogs.Dtos.BlogDto;\r\n    }\r\n}\r\n  \r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostStateService {\r\n    private store = new InternalStore({} as Post.State);\r\n\r\n    getBlog(): Observable<Fs.Cms.Blogs.Dtos.BlogDto> {\r\n        return this.store.sliceState(state => state.Blog);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n        this.store.patch({ Blog: blog })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injector, Injectable, Type } from '@angular/core';\r\nimport { Fs, Volo } from '@fs-tw/cms/proxy';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class PageService {\r\n  private blogService: Fs.Cms.Blogs.BlogsApiService;\r\n  private postService: Fs.Cms.Posts.PostsApiService;\r\n  private directoriesApiService: Fs.Abp.File.Directories.DirectoriesApiService;\r\n  private fileDescriptorService: Volo.FileManagement.Files.FileDescriptorService;\r\n\r\n  constructor(private injector: Injector) {\r\n    this.blogService = injector.get(Fs.Cms.Blogs.BlogsApiService);\r\n    this.postService = injector.get(Fs.Cms.Posts.PostsApiService);\r\n    this.directoriesApiService = injector.get(\r\n      Fs.Abp.File.Directories.DirectoriesApiService\r\n    );\r\n    this.fileDescriptorService = injector.get(\r\n      Volo.FileManagement.Files.FileDescriptorService\r\n    );\r\n  }\r\n\r\n  //#region  Blog\r\n  getBlogs(input: Fs.Cms.Blogs.Dtos.BlogGetListDto) {\r\n    return this.blogService.getListByBlogGetList(input);\r\n  }\r\n\r\n  getBlogById(id: string) {\r\n    return this.blogService.getByBlogPrimaryKey({ id: id });\r\n  }\r\n\r\n  createBlog(input: Fs.Cms.Blogs.Dtos.BlogCreateDto) {\r\n    return this.blogService.createByBlogCreate(input);\r\n  }\r\n\r\n  updateBlog(id: string, input: Fs.Cms.Blogs.Dtos.BlogUpdateDto) {\r\n    return this.blogService.updateByBlogPrimaryKeyAndBlogUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region File\r\n  findByProviderByKeyAndGroup(key: string, group?: string) {\r\n    return this.directoriesApiService.findByProviderByKeyAndGroup(key, group);\r\n  }\r\n\r\n  deleteFile(id: string) {\r\n    return this.fileDescriptorService.deleteById(id);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Post\r\n  getPostsByBlogId(input: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput) {\r\n    return this.postService.getPostsByBlogIdByInput(input);\r\n  }\r\n\r\n  getPostById(id: string) {\r\n    return this.postService.getByPostPrimaryKey({ id: id });\r\n  }\r\n\r\n  createPost(input: Fs.Cms.Posts.Dtos.PostCreateDto) {\r\n    return this.postService.createByPostCreate(input);\r\n  }\r\n\r\n  updatePost(id: string, input: Fs.Cms.Posts.Dtos.PostUpdateDto) {\r\n    return this.postService.updateByPostPrimaryKeyAndPostUpdate(\r\n      { id: id },\r\n      input\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  // getAllTags() {\r\n  //   return this.tagsApiService.tagGroupGetList();\r\n  // }\r\n\r\n  // getPostById(id: string) {\r\n  //   return this.postService.getWithTagsById(id);\r\n  // }\r\n\r\n  // blogGetList() {\r\n  //   return this.definitionsService.blogGetList();\r\n  // }\r\n\r\n  // createBlog(input: BlogCreateInput) {\r\n  //   return this.definitionsService.blogCreateByInput(input);\r\n  // }\r\n\r\n  // updateBlog(input: BlogUpdateInput, id: string) {\r\n  //   return this.definitionsService.blogUpdateByIdAndInput(id, input);\r\n  // }\r\n\r\n  // deleteBlog(id) {\r\n  //   return this.definitionsService.blogDeleteById(id);\r\n  // }\r\n\r\n  // createPostTagMap(postId: string, tagCodeId: string) {\r\n  //   return this.postService.createByPostTagMapCreate({ postId, tagCodeId })\r\n  // }\r\n\r\n  // deletePostTagMap(id: string) {\r\n  //   return this.postService.deleteByPostTagMapPrimaryKey({ id })\r\n  // }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../providers/page.service';\r\nimport { PostStateService } from '../../providers/post-state.service';\r\n\r\n// \r\n// import { PostWithDetailsDto } from '@fs-tw/cms/proxy';\r\n// import { CodesDto } from '@fs-tw/theme-core';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Select, Store } from '@ngxs/store';\r\n// import { Observable, Subscription } from 'rxjs';\r\n// import { Deletepost, GetPosts } from '../../providers/post/post.actions';\r\n// import { PostState } from '../../providers/post/post.state';\r\n// import { PostsStateService } from '../../providers/post/poststate.service';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.less']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  blog$: Observable<Fs.Cms.Blogs.Dtos.BlogDto>;\r\n  blogId: string;\r\n  blogName: string;\r\n\r\n  postParams: Fs.Cms.Posts.Dtos.GetPostByBlogIdInput = {\r\n    skipCount: 0,\r\n    maxResultCount: 10,\r\n    keyword: \"\",\r\n    blogId: null\r\n  } as Fs.Cms.Posts.Dtos.GetPostByBlogIdInput;\r\n\r\n  posts: Fs.Cms.Posts.Dtos.PostWithDetailsDto[] = [];\r\n  totalCount: number = 0;\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private pageService: PageService,\r\n    private postStateService: PostStateService\r\n  ) { }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    this.blog$ = this.postStateService.getBlog();\r\n    this.onBlogChange();\r\n  }\r\n\r\n  onBlogChange() {\r\n    this.blog$.subscribe((blog) => {\r\n      this.blogId = blog == null ? null : blog.id;\r\n      this.blogName = blog == null ? \"\" : blog.displayName;\r\n\r\n      this.postParams.blogId = this.blogId;\r\n      this.changePage(1);\r\n    })\r\n  }\r\n\r\n  gotoDetail(id?: string) {\r\n    if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n    else this.router.navigate([\"/cms/post/detail\"]);\r\n  }\r\n\r\n  changePage(page: number) {\r\n    this.postParams.skipCount = (page - 1) * this.postParams.maxResultCount;\r\n\r\n    this.loading = true;\r\n    this.pageService.getPostsByBlogId(this.postParams).subscribe((x) => {\r\n      this.loading = false;\r\n      this.posts = x.items;\r\n      this.totalCount = x.totalCount;\r\n    })\r\n  }\r\n\r\n  deleteItem(item: Fs.Cms.Posts.Dtos.PostWithDetailsDto) {\r\n\r\n  }\r\n\r\n  // ngOnDestroy(): void {\r\n  //   if (this.subscription) {\r\n  //     this.subscription.unsubscribe();\r\n  //   }\r\n  // }\r\n\r\n  // blogName: string = \"\";\r\n\r\n  // ngOnInit(): void {\r\n  //   this.subscription = this.activatedRoute.queryParams.subscribe(x => {\r\n  //     if (x.blog) {\r\n  //       this.blogId = x.blog\r\n  //       this.blogName = x.name;\r\n  //       if (x.blog == 'all') this.blogId = \"\";\r\n  //     } else {\r\n  //       let query = this.postsStateService.getPostQuery();\r\n  //       this.keyword = query.param.value;\r\n  //       this.blogId = query.param.blogCodeId\r\n  //       this.blogName = query.blogName;\r\n  //     }\r\n  //     this.changePage(1);\r\n  //   });\r\n  // }\r\n\r\n  // gotoDetail(id?: string) {\r\n  //   if (id) this.router.navigate([\"/cms/post/detail/\" + id]);\r\n  //   else this.router.navigate([\"/cms/post/detail\"]);\r\n  // }\r\n\r\n  // deleteItem(data: PostWithDetailsDto) {\r\n  //   this.confirmationService.warn(\r\n  //     `確定要刪除 ${data.title}嗎？`,\r\n  //     '系統訊息', {\r\n  //     cancelText: \"關閉\",\r\n  //     yesText: \"確定\"\r\n  //   }).subscribe((status: Confirmation.Status) => {\r\n  //     if (status === Confirmation.Status.confirm) {\r\n  //       this.store.dispatch(new Deletepost(data.id))\r\n  //       this.toasterService.success(\"刪除成功！\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // changePage(event: number) {\r\n  //   this.loading = true;\r\n  //   this.store.dispatch(\r\n  //     new GetPosts(\r\n  //       {\r\n  //         param: {\r\n  //           value: this.keyword,\r\n  //           fields: \"Title,Subtitle\",\r\n  //           blogCodeId: this.blogId,\r\n  //           skipCount: (event - 1) * 10,\r\n  //           maxResultCount: 10,\r\n  //           sorting: \"\"\r\n  //         },\r\n  //         blogName: this.blogName\r\n  //       }\r\n  //     )).subscribe(() => this.loading = false);\r\n  // }\r\n\r\n  // search() {\r\n  //   this.changePage(1);\r\n  // }\r\n\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\n\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { ConfigStateService,EnvironmentService } from '@abp/ng.core';\r\n\r\nexport class ImageFile {\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string = '', fileUrl: string = '') {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n  }\r\n}\r\n\r\nexport class SaveFile {\r\n  isUpload: boolean;\r\n  file: File;\r\n  fileName: string;\r\n  fileUrl: string;\r\n\r\n  constructor(fileName: string, fileUrl: string, file: File) {\r\n    this.fileName = fileName;\r\n    this.fileUrl = fileUrl;\r\n    this.file = file;\r\n\r\n    this.isUpload = this.file != null;\r\n  }\r\n}\r\n\r\nclass ViewImage {\r\n  image: ImageFile;\r\n  isVisabled: boolean;\r\n\r\n  constructor() {\r\n    this.image = new ImageFile();\r\n    this.isVisabled = false;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'image-picker',\r\n  templateUrl: './image-picker.component.html',\r\n  styleUrls: ['./image-picker.component.css']\r\n})\r\nexport class ImagePickerComponent implements OnInit {\r\n\r\n  /** 縮圖寬度，單位 px，預設 104px */\r\n  @Input() imageWidth: string = '104px';\r\n\r\n  /** 縮圖高度，單位 px ，預設 104px */\r\n  @Input() imageHeight: string = '104px';\r\n\r\n  /** 外框寬度，單位 px ，預設 104px */\r\n  @Input() borderWidth: string = '104px';\r\n\r\n  /** 外框高度，單位 px ，預設 104px */\r\n  @Input() borderHeight: string = '104px';\r\n\r\n  /** 上傳最大數量 */\r\n  @Input() maxImageCount: number = null;\r\n\r\n  /** 是否可同時選多張圖片 */\r\n  @Input() isMultiple: boolean = true;\r\n\r\n  /** 顯示圖片 Template ，縮圖比例功能會失效 */\r\n  @Input() imageTemplate: TemplateRef<any>;\r\n\r\n  /** 上傳圖片 Template，可完整替換成其他形式，如︰按鈕上傳 */\r\n  @Input() uploadTemplate: TemplateRef<any>;\r\n  \r\n  /** 上傳按鈕文字 Template，若 uploadTemplate 有值則無效 */\r\n  @Input() uploadTextTemplate: TemplateRef<any>;\r\n\r\n  /** 是否排列在同一行，同一行時行寬同 imageWidth */\r\n  @Input() inLine: boolean = true;\r\n\r\n  /** 上傳按鈕顯示於前面 */\r\n  @Input() showFrontButton: boolean = true;\r\n\r\n  /** 原已上傳圖片 */\r\n  @Input() existFiles: ImageFile[] = [];\r\n\r\n  /** 原已上傳圖片被刪除的檔名 */\r\n  private deleteFiles: string[] = [];\r\n\r\n  /** 本次上傳所顯示圖片 */\r\n  showFiles: ImageFile[] = [];\r\n\r\n  /** 本次上傳圖片 */\r\n  private uploadFiles: NzUploadFile[] = [];\r\n\r\n  /** 顯示預覽圖 modal */\r\n  viewImage: ViewImage = new ViewImage();\r\n\r\n  get canUpload(): boolean {\r\n    let imageNumber = this.existFiles.length + this.uploadFiles.length;\r\n    return this.maxImageCount == null || imageNumber < this.maxImageCount;\r\n  }\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private environmentService:EnvironmentService,\r\n    private configStateService: ConfigStateService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.existFiles = this.existFiles\r\n      .filter(x => x.fileUrl)\r\n      .map(x => new ImageFile(x.fileName, this.getHttpUrl(x.fileUrl)));\r\n\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  clear() {\r\n    this.existFiles = [];\r\n    this.deleteFiles = [];\r\n    this.uploadFiles = [];\r\n    this.showFiles = [];\r\n  }\r\n\r\n  private getHttpUrl(url: string): string {\r\n    let result = url;\r\n    if (url.includes(\"http\")) return result;\r\n\r\n    return this.environmentService.getApiUrl() + url;\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n      return false;\r\n    }\r\n\r\n    let fileName = file.name;\r\n\r\n    let hasExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let hasShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    if (hasExistImage || hasShowImage) return false;\r\n\r\n\r\n    let imgFile: any = file;\r\n    this.getBase64(imgFile, (img) => {\r\n      if (!this.canUpload) {\r\n        this.toasterService.error(\"圖片數已達上限\");\r\n        return;\r\n      }\r\n\r\n      this.uploadFiles.push(imgFile);\r\n      this.showFiles.push(new ImageFile(fileName, img));\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  private getBase64(img: File, callback: (img: string) => void): void {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    let inExistImage = this.existFiles.findIndex(x => x.fileName == fileName) > -1;\r\n    let inShowImage = this.showFiles.findIndex(x => x.fileName == fileName) > -1;\r\n\r\n    // 現有圖片刪除\r\n    if (inExistImage) {\r\n      this.existFiles = this.existFiles.filter(x => x.fileName != fileName);\r\n      this.deleteFiles.push(fileName);\r\n      return;\r\n    }\r\n\r\n    // 上傳圖片刪除\r\n    if (inShowImage) {\r\n      this.showFiles = this.showFiles.filter(x => x.fileName != fileName);\r\n      this.uploadFiles = this.uploadFiles.filter(x => x.name != fileName);\r\n    }\r\n\r\n  }\r\n\r\n  controllModal(state: boolean, image: ImageFile = new ImageFile()) {\r\n    this.viewImage.image = image;\r\n    this.viewImage.isVisabled = state;\r\n  }\r\n\r\n  getDeleteFileNames(): string[] {\r\n    return this.deleteFiles;\r\n  }\r\n\r\n  getUploadFiles(): SaveFile[] {\r\n    let existFiles = this.existFiles.filter(x => !this.deleteFiles.includes(x.fileName)).map(x => new SaveFile(x.fileName, x.fileUrl, null));\r\n    let updateFiles: SaveFile[] = this.uploadFiles.map((x: any) => new SaveFile(x.name, '', x));\r\n    \r\n    return existFiles.concat(updateFiles);\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport * as _ from 'lodash';\r\n\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../image-picker/image-picker.component';\r\n\r\n// import { ActivatedRoute, Router } from '@angular/router';\r\n// import { BlogDto, PostImageDto } from '@fs-tw/cms/proxy';\r\n// import { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n// import { Store } from '@ngxs/store';\r\n// import { forkJoin, Observable } from 'rxjs';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n// import { PageService } from '../../providers/page.service';\r\n// import { PostsStateService } from '../../providers/post/poststate.service';\r\n// import { UploadFileComponent } from '../upload-file/upload-file.component';\r\n// import { TagComponent } from '../tag/tag.component';\r\n// import { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'fs-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.less']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker : ImagePickerComponent;\r\n\r\n  postId: string;\r\n  data: Fs.Cms.Posts.Dtos.PostDto;\r\n  dateRange: Date[] = [new Date(), new Date()];\r\n  defaultImages: ImageFile[] = [];\r\n\r\n  blogs: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n\r\n  isLoading: boolean = false;\r\n\r\n  coverImage: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pageService: PageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\r\n    console.log(this.postId);\r\n\r\n    this.getPost();\r\n    this.getBlogs();\r\n  }\r\n\r\n  getPost() {\r\n    this.data = {\r\n      blogId: null,\r\n      title: '',\r\n      subtitle: '',\r\n      url: '',\r\n      content: '',\r\n      disable: false,\r\n      startTime: '',\r\n      endTime: '',\r\n      displayMode: 0,\r\n      sequence: 0,\r\n      attachmentFileUrls: [],\r\n      postImages: []\r\n    } as Fs.Cms.Posts.Dtos.PostDto;\r\n\r\n    this.dateRange = [new Date(), new Date()];\r\n\r\n    this.defaultImages = [new ImageFile('test', 'https://dummyimage.com/200x130/000/fff')];\r\n    this.coverImage = 'test'\r\n\r\n    if (this.postId) {\r\n      this.pageService.getPostById(this.postId).subscribe((x) => {\r\n        this.data = x;\r\n\r\n        let st = x.startTime ? new Date(x.startTime) : new Date();\r\n        let ed = x.endTime ? new Date(x.endTime) : new Date();\r\n        this.dateRange = [st, ed];\r\n\r\n        this.defaultImages = x.postImages.map(y => new ImageFile(y.url, y.url) );\r\n\r\n        let coverImageIndex = x.postImages.findIndex(y => y.isCover);\r\n        if (coverImageIndex > -1) this.coverImage = x.postImages[coverImageIndex].url;\r\n      })\r\n    }\r\n  }\r\n\r\n  getBlogs() {\r\n    let input = {\r\n      skipCount: 0,\r\n      maxResultCount: 999,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n    this.pageService.getBlogs(input).subscribe((x) => {\r\n      this.blogs = x.items;\r\n    })\r\n  }\r\n\r\n  deleteFile(fileName: string) {\r\n    this.confirmationService.warn(`確定刪除 ${fileName} 嗎？`, \"系統訊息\")\r\n      .subscribe((result) => {\r\n        if (result != Confirmation.Status.confirm) return;\r\n\r\n        this.defaultImagePicker.deleteFile(fileName);\r\n      })\r\n  }\r\n\r\n  save() {\r\n    let item: Fs.Cms.Posts.Dtos.PostDto = _.cloneDeep(this.data);\r\n    item.startTime = this.dateRange[0].toLocalISOString();\r\n    item.endTime = this.dateRange[1].toLocalISOString();\r\n\r\n    // TODO: 上傳檔案、上傳附件、加標籤\r\n\r\n    let action: Observable<any>;\r\n    if (!this.postId) {\r\n      action = this.pageService.createPost(item);\r\n    } else {\r\n      action = this.pageService.updatePost(this.postId, item);\r\n    }\r\n\r\n    action.subscribe((x) => {\r\n      this.router.navigate([\"cms/post\"]);\r\n    })\r\n    \r\n  }\r\n\r\n  // apiUrl = \"\";\r\n  // @ViewChild(UploadFileComponent) uploadFileComponent: UploadFileComponent;\r\n\r\n  // @ViewChild(TagComponent) tagComponent: TagComponent;\r\n\r\n  // data: any =\r\n  //   { published: true, published_At: new Date(), attachmentFileUrls: [], content: \"\", postImages: [], postTags: [] };\r\n\r\n  // isVisible = false;\r\n  // selectImage = \"\";\r\n  // showList = [];\r\n  // fileList = [];\r\n  // isSpinning = false;\r\n  // blogs: BlogDto[] = []\r\n\r\n\r\n\r\n\r\n  // constructor(\r\n  //   private confirmationService: ConfirmationService,\r\n  //   private toasterService: ToasterService,\r\n  //   private postsStateService: PostsStateService,\r\n  //   private configStateService: ConfigStateService,\r\n  //   private activatedRoute: ActivatedRoute,\r\n  //   private pageService: PageService,\r\n  //   private fileService: FileService,\r\n  //   private environmentService:EnvironmentService,\r\n  //   private router: Router,\r\n  // ) {\r\n\r\n  //   this.apiUrl = this.environmentService.getApiUrl() + \"/\";\r\n  //   this.getBlogs();\r\n  //   this.activatedRoute.params.subscribe(x => {\r\n  //     if (x.id) {\r\n  //       this.isSpinning = true;\r\n  //       this.pageService.getPostById(x[\"id\"]).subscribe(post => {\r\n  //         this.data = post;\r\n  //         this.isSpinning = false;\r\n  //         this.init_list();\r\n  //       })\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n\r\n  // getBlogs() {\r\n  //   this.pageService.blogGetList().subscribe(x => {\r\n  //     this.blogs = x;\r\n  //   });\r\n  // }\r\n\r\n  // ngOnDestroy(): void { }\r\n\r\n  // ngOnInit() { }\r\n\r\n  // getUrl(x: string) {\r\n  //   if (x.includes('http')) {\r\n  //     return x;\r\n  //   } else {\r\n  //     return this.fileService.getFileByName(x);\r\n  //   }\r\n  // }\r\n\r\n  // getFileName(x: string) {\r\n  //   let splitStr = x.split(\"\\\\\");\r\n  //   return splitStr[splitStr.length - 1];\r\n  // }\r\n\r\n  // init_list() {\r\n  //   this.fileList = [];\r\n  //   this.showList = this.data.postImages.map((item, index) => {\r\n  //     return {\r\n  //       uid: index.toString(),\r\n  //       status: 'done',\r\n  //       type: \"image/jpeg\",\r\n  //       url: this.getUrl(item.url),\r\n  //       thumbUrl: this.getUrl(item.url),\r\n  //       needDelete: true,\r\n  //       isCover: item.isCover,\r\n  //       name: this.getFileName(item.url),\r\n  //       or_url: item.url\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // save() {\r\n  //   this.isSpinning = true\r\n  //   let mes = \"建立成功！\";\r\n  //   if (this.data.id) mes = \"更新成功！\";\r\n  //   let cover = this.showList.find(x => { return x.isCover == true });\r\n\r\n  //   let result = this.handleUpload()\r\n  //   let im: string[] = this.showList.map(x => x.or_url);\r\n  //   let old_images = this.data.postImages.filter(x => im.some(y => y == x.url));\r\n  //   this.data.postImages = result.concat(old_images);\r\n  //   if (cover) {\r\n  //     this.data.postImages.forEach(x => {\r\n  //       if (x.url.includes(cover.name)) x.isCover = true;\r\n  //       else x.isCover = false;\r\n  //     });\r\n  //   }\r\n  //   this.data.attachmentFileUrls = this.uploadFileComponent.save();\r\n  //   this.data.published_At = new Date(this.data.published_At).toLocalISOString();\r\n  //   let act: Observable<any>;\r\n  //   if (this.data.id) {\r\n  //     act = this.postsStateService.update(this.data, this.data.id);\r\n  //   } else {\r\n  //     act = this.postsStateService.create(this.data);\r\n  //   }\r\n  //   act.subscribe(x => {\r\n  //     forkJoin(this.tagComponent.save(x.id)).pipe(finalize(() => {\r\n  //       this.toasterService.success(mes);\r\n  //       this.isSpinning = false;\r\n  //       this.router.navigate([\"cms/post\"], { queryParams: { blog: this.data.blogCodeId } });\r\n  //     })).subscribe(x => { })\r\n  //   });\r\n  // }\r\n\r\n  // handleUpload(): PostImageDto[] {\r\n  //   const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('');\r\n  //   const formData = new FormData();\r\n  //   let postImageList: PostImageDto[] = []\r\n  //   this.fileList.forEach((file: any) => {\r\n  //     let url = `cms\\\\posts\\\\${randomName}\\\\${file.name}`;\r\n  //     postImageList.push({ url, isCover: false });\r\n  //     formData.append('files[]', file, url);\r\n  //   });\r\n  //   this.fileService.uploadFileByFormData(formData).subscribe(() => {\r\n  //   }, (error) => {\r\n  //     this.toasterService.error(\"上傳失敗\");\r\n  //   });\r\n\r\n  //   return postImageList;\r\n  // }\r\n\r\n  // refreshStatus(input) {\r\n  //   this.showList.forEach(x => {\r\n  //     if (x.uid != input.uid) x.isCover = false;\r\n  //   });\r\n  // }\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, Resolve } from '@angular/router';\r\n\r\nimport { PostStateService } from './providers/post-state.service';\r\n\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { DetailComponent } from './components/detail/detail.component';\r\n\r\n@Injectable()\r\nexport class RouteConfig implements Resolve<any> {\r\n  constructor(private postStateService: PostStateService) { }\r\n\r\n  resolve() {\r\n    return this.postStateService.setBlog(null);\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    resolve: { 'RouteConfig': RouteConfig },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: MainComponent\r\n      },\r\n      {\r\n        path:'detail',\r\n        component:DetailComponent,\r\n      },\r\n      {\r\n        path:'detail/:postId',\r\n        component:DetailComponent,\r\n      }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule], \r\n  providers:[\r\n    RouteConfig\r\n  ]\r\n})\r\nexport class PostRoutingModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { EnvironmentService } from '@abp/ng.core'\r\n\r\n\r\n@Pipe({\r\n    name: 'getFileById'\r\n})\r\nexport class GetFileByIdPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private environmentService: EnvironmentService,\r\n    ) { }\r\n\r\n    transform(value: string): any {\r\n        return this.environmentService.getApiUrl() + \"/api/file-management/file-descriptor/file-content?id=\" + value\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n// import { NgAlainBasicModule } from '@fs-tw/theme-ng-alain/basic';\r\nimport { ThemeAlainMsSharedModule } from '@fs-tw/theme-alain-ms/shared';\r\nimport { UiExtensionsModule } from '@fs-tw/theme-alain-ms/shared/extensions'\r\nimport { GetFileByIdPipe } from './pipe/get-file.pipe';\r\nconst COMPONENT = [GetFileByIdPipe]\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENT],\r\n  imports: [\r\n    // NgAlainBasicModule,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ],\r\n  exports: [\r\n    // NgAlainBasicModule,\r\n    ...COMPONENT,\r\n    ThemeAlainMsSharedModule,\r\n    UiExtensionsModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, RestService, AuditedEntityDto } from '@abp/ng.core';\r\n// import { FileDescriptorDto } from '@volo/abp.ng.file-management'\r\n\r\n// TODO USE @volo/abp.ng.file-management FileDescriptorDto\r\nexport interface FileDescriptorDto extends AuditedEntityDto<string> {\r\n  directoryId?: string;\r\n  name: string;\r\n  mimeType: string;\r\n  size: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FileService {\r\n\r\n  constructor(\r\n    private restService: RestService,\r\n    private environmentService: EnvironmentService,\r\n  ) {\r\n  }\r\n\r\n  getFileUrl(id) {\r\n    if(!id) return \"\";\r\n    return this.environmentService.getApiUrl() + \"/api/file-management/file-descriptor/file-content?id=\" + id\r\n  }\r\n\r\n  uploadFile(file: File, directoryId: string) {\r\n    const formData = new FormData();\r\n    formData.append(\"relativePath\", null);\r\n    formData.append(\"file\", file);\r\n    formData.append(\"name\", file.name);\r\n    formData.append(\"type\", file.type);\r\n    return this.restService.request<any, FileDescriptorDto>({\r\n      method: 'POST',\r\n      url: `/api/file-management/file-descriptor/upload`,\r\n      body: formData,\r\n      params: { directoryId: directoryId }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FileService } from '../../../../shared'\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { PostStateService } from '../../../providers/post-state.service';\r\nimport { ListService } from '@abp/ng.core';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER,\r\n  FormPropData,\r\n  generateFormFromProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { eCmsRouteNames, ExtensionsService } from '@fs-tw/cms/config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  Confirmation,\r\n  ConfirmationService,\r\n  ToasterService,\r\n} from '@abp/ng.theme.shared';\r\n\r\n@Component({\r\n  selector: 'fs-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css'],\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eCmsRouteNames.Blog,\r\n    },\r\n  ],\r\n})\r\nexport class ListComponent implements OnInit {\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker: ImagePickerComponent;\r\n  datas: Fs.Cms.Blogs.Dtos.BlogDto[] = [];\r\n  count = 0;\r\n  defaultImages: ImageFile[] = [];\r\n  isVisible = false;\r\n  form: FormGroup;\r\n  selected: Fs.Cms.Blogs.Dtos.BlogDto = {} as Fs.Cms.Blogs.Dtos.BlogDto\r\n  directory;\r\n  constructor(\r\n    private extensionsService: ExtensionsService,\r\n    private pageService: PageService,\r\n    protected injector: Injector,\r\n    public readonly list: ListService,\r\n    private fileService: FileService,\r\n    private toasterService: ToasterService,\r\n    private postStateService: PostStateService\r\n  ) {\r\n    this.pageService.findByProviderByKeyAndGroup(\"FS.Cms.Blogs\").subscribe(x => {\r\n      this.directory = x;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.extensionsService.Actions$[eCmsRouteNames.Blog].subscribe(\r\n      (x) => {\r\n        switch (x.name) {\r\n          case 'Edit':\r\n            this.edit(x.record.id);\r\n            break;\r\n          case 'Delete':\r\n            this.deleteBlog(x.record)\r\n            break;\r\n          case 'Add':\r\n            this.add();\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n    let input: Fs.Cms.Blogs.Dtos.BlogGetListDto = {\r\n      skipCount: 0,\r\n      maxResultCount: 10,\r\n      sorting: 'sequence'\r\n    } as Fs.Cms.Blogs.Dtos.BlogGetListDto;\r\n\r\n\r\n\r\n    const customerStreamCreator = (query) => {\r\n      query = input;\r\n      return this.pageService.getBlogs(input)\r\n    };\r\n\r\n    this.list.hookToQuery(customerStreamCreator).subscribe((res) => {\r\n      this.datas = res.items;\r\n      this.count = res.totalCount;\r\n    });\r\n  }\r\n\r\n  showDetail(blog: Fs.Cms.Blogs.Dtos.BlogWithDetailsDto) {\r\n    if (blog == null) return;\r\n    this.postStateService.setBlog(blog);\r\n  }\r\n\r\n  deleteBlog(blog: Fs.Cms.Blogs.Dtos.BlogDto) {\r\n    console.log(blog)\r\n    alert(\"開發中…\")\r\n  }\r\n\r\n\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n \r\n    //TODO delete file and code refactoring\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();\r\n    let fileId = \"\";\r\n    if ((uploadImageInfos.length > 0)) {\r\n      if (this.selected.iconUrl == uploadImageInfos[0].fileName) {\r\n        this.saveBlog(this.selected.iconUrl);\r\n        return;\r\n      }\r\n      this.fileService.uploadFile(uploadImageInfos[0].file, this.directory.id).subscribe(x => {\r\n        fileId = x.id;\r\n        this.saveBlog(fileId);\r\n      })\r\n    } else this.saveBlog(\"\");\r\n  }\r\n\r\n  saveBlog(fileId?) {\r\n    let input = { ...this.selected, ...this.form.value, id: this.selected.id };\r\n    input.iconUrl = fileId;\r\n    let action: Observable<any>;\r\n    if (input.id) action = this.pageService.updateBlog(input.id, input);\r\n    else { \r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input); \r\n    }\r\n    action.subscribe((x) => {\r\n      this.toasterService.success('修改成功！');\r\n      this.isVisible = false;\r\n      this.list.get();\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as any;\r\n    this.defaultImages = []\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.pageService.getBlogById(id).subscribe(x => {\r\n      this.selected = x;\r\n      this.defaultImages = []\r\n      if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, this.fileService.getFileUrl(x.iconUrl)))\r\n      this.openModal();\r\n    })\r\n  }\r\n\r\n  buildForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.form = null;\r\n    this.form = generateFormFromProps(data);\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isVisible = true;\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { Fs } from '@fs-tw/cms/proxy';\r\n\r\nimport { PageService } from '../../../providers/page.service';\r\nimport { ImageFile, ImagePickerComponent } from '../../image-picker/image-picker.component';\r\n\r\n// import { ConfigStateService } from '@abp/ng.core';\r\n// import { NzUploadFile } from 'ng-zorro-antd/upload';\r\n// import { Observable } from 'rxjs';\r\n// import * as _ from 'lodash';\r\n\r\n// import { ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { BlogDto } from '@fs-tw/cms/proxy';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n// import { PageService } from '../../../providers/page.service';\r\n// import { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'fs-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.less']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  @ViewChild(\"DefaultImagePicker\") defaultImagePicker : ImagePickerComponent;\r\n\r\n  @Input()\r\n  blogId: string;\r\n\r\n  @Output()\r\n  onSave = new EventEmitter();\r\n\r\n  isVisible = false;\r\n\r\n  data: Fs.Cms.Blogs.Dtos.BlogDto;\r\n  defaultImages: ImageFile[] = [];\r\n\r\n  constructor(\r\n    private pageService: PageService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  showModal() {\r\n    this.data = {\r\n      no: \"\",\r\n      displayName: \"\",\r\n      description: \"\",\r\n      parentId: null,\r\n      disable: false,\r\n      listStyle: \"\",\r\n      sequence: 0,\r\n      url: \"\",\r\n      iconUrl: \"\"\r\n    } as Fs.Cms.Blogs.Dtos.BlogDto;\r\n\r\n    this.defaultImages = [];\r\n\r\n    if (this.blogId) {\r\n      this.pageService.getBlogById(this.blogId).subscribe((x) => {\r\n        this.data = x;\r\n\r\n        // 已上傳圖片\r\n        this.defaultImages = [new ImageFile('test', 'https://dummyimage.com/140x98/000/fff')];\r\n        // if (x.iconUrl) this.defaultImages.push(new ImageFile(x.iconUrl, 'http://' + x.iconUrl));\r\n      });\r\n    }\r\n\r\n    this.isVisible = true;\r\n  }\r\n\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  save() {\r\n    // 補上傳、刪除檔案 api\r\n    let uploadImageInfos = this.defaultImagePicker.getUploadFiles();\r\n    let deleteImageNames = this.defaultImagePicker.getDeleteFileNames();\r\n\r\n    const formData = new FormData();\r\n    for(let item of uploadImageInfos) {\r\n      if (item.isUpload) formData.append('files[]', item.file, '');\r\n    }\r\n    console.log(uploadImageInfos, deleteImageNames);\r\n\r\n\r\n    let input: Fs.Cms.Blogs.Dtos.BlogDto = _.cloneDeep(this.data);\r\n    \r\n    let action: Observable<any>;\r\n    if (!this.blogId) {\r\n      input.no = input.displayName;\r\n      action = this.pageService.createBlog(input);\r\n    } else {\r\n      action = this.pageService.updateBlog(this.blogId, input);\r\n    }\r\n\r\n    action.subscribe(() => {\r\n      this.onSave.emit();\r\n      this.handleCancel();\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n\r\n  // @Input() input: BlogDto;\r\n  // @Output() onSave = new EventEmitter();\r\n  // @Input() isParent = false;\r\n\r\n\r\n  // i: BlogDto = {\r\n  //   enable: true\r\n  // } as BlogDto;\r\n\r\n  // uploadFile: NzUploadFile = null;\r\n  // iconUrl: string;\r\n  // hasImg: boolean = false;\r\n\r\n  // constructor(\r\n  //   private store: Store,\r\n  //   private configStateService: ConfigStateService,\r\n  //   private toasterService: ToasterService,\r\n  //   private pageService: PageService,\r\n  //   private cmsFileService: FileService\r\n  // ) { }\r\n\r\n  // ngOnInit() {\r\n\r\n  // }\r\n\r\n  \r\n\r\n  // getImageUrl(img: string) {\r\n  //   return this.cmsFileService.getFileByName(img);\r\n  //   // return this.configStateService.getApiUrl() + \"/api/themes/file/\" + img.replace(/\\\\/g, \"%5C\") + \"?p=\" +  Math.floor(Math.random()*999)+1;\r\n  // }\r\n\r\n  // handleCancel() {\r\n  //   this.isVisible = false;\r\n  // }\r\n\r\n  // save() {\r\n  //   let act: Observable<any>;\r\n  //   if (!this.input) {\r\n  //     act = this.pageService.createBlog(this.i);\r\n  //   }\r\n  //   else {\r\n  //     act = this.pageService.updateBlog({ ...this.input, ...this.i }, this.input.codesId)\r\n  //   }\r\n  //   act.subscribe(x => {\r\n  //     this.handleCancel();\r\n\r\n  //     if (this.uploadFile) {\r\n  //       this.saveImage(x);\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.onSave.emit();\r\n  //     if (this.input) {\r\n  //       this.toasterService.success(\"更新成功！\");\r\n  //       return;\r\n  //     }\r\n  //     this.toasterService.success(\"新增成功！\");\r\n  //   })\r\n  // }\r\n\r\n  // //#region 圖片上傳\r\n  // saveImage(blog: BlogDto) {\r\n  //   const formData = new FormData();\r\n  //   let file: any = this.uploadFile;\r\n  //   let fileExName = file.type === 'image/png' ? \".png\" : \".jpg\";\r\n  //   let url = `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`;\r\n  //   formData.append('files[]', file, `cms\\\\blog\\\\${blog.codesId}\\\\icon${fileExName}`);\r\n    \r\n  //   this.cmsFileService.uploadFileByFormData(formData).subscribe(x=>{\r\n  //     blog.iconUrl = url\r\n  //     this.pageService.updateBlog(blog, blog.codesId)\r\n  //       .subscribe((x) => {\r\n  //         this.onSave.emit();\r\n  //         if (this.input) {\r\n  //           this.toasterService.success(\"更新成功！\");\r\n  //           return;\r\n  //         }\r\n  //         this.toasterService.success(\"新增成功！\");\r\n  //       }, error => {\r\n  //         this.toasterService.error(\"上傳更新失敗\")\r\n  //       })\r\n  //   });   \r\n  // }\r\n\r\n  // beforeUpload = (file: NzUploadFile): boolean => {\r\n  //   let isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  //   if (!isJpgOrPng) {\r\n  //     this.toasterService.error(\"圖片格式須為 jpg 或 png\");\r\n  //     return\r\n  //   }\r\n\r\n  //   let imgFile: any = file;\r\n  //   this.getBase64(imgFile, (img) => {\r\n  //     this.uploadFile = file;\r\n  //     this.iconUrl = img;\r\n  //     this.hasImg = true;\r\n  //   });\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  // private getBase64(img: File, callback: (img: string) => void): void {\r\n  //   const reader = new FileReader();\r\n  //   reader.addEventListener('load', () => callback(reader.result!.toString()));\r\n  //   reader.readAsDataURL(img);\r\n  // }\r\n\r\n  // resetIcon() {\r\n  //   this.uploadFile = null;\r\n  //   this.iconUrl = \"assets/img/info.png\";\r\n  //   this.i.iconUrl = \"\";\r\n  //   this.hasImg = false;\r\n  // }\r\n  // //#endregion\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\n\r\n// import { Confirmation, ConfirmationService,ToasterService } from '@abp/ng.theme.shared';\r\n// import { Store } from '@ngxs/store';\r\n// import { NzModalRef } from 'ng-zorro-antd/modal';\r\n// import { FileService } from '@fs-tw/theme-core';\r\n\r\n@Component({\r\n  selector: 'fs-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  @Input()\r\n  existFileUrls: string[] = [];\r\n\r\n  fileList: NzUploadFile[] = [];\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  beforeUpload = (file: NzUploadFile): boolean => {\r\n    let exist = this.existFileUrls.findIndex(x => x == file.name) > -1 ||\r\n      this.fileList.findIndex(x => x.name == file.name) > -1;\r\n    if (exist) return false;\r\n    this.fileList = this.fileList.concat(file);\r\n    return false;\r\n  };\r\n\r\n  delete(url) {\r\n    this.confirmationService\r\n    .warn('確認刪除嗎？', '系統訊息')\r\n    .subscribe((status: Confirmation.Status) => {\r\n      if (status === Confirmation.Status.confirm) {\r\n        this.existFileUrls = this.existFileUrls.filter(x => x != url);\r\n      }\r\n    });\r\n  }\r\n\r\n  // fileUrl: string[] = [];\r\n  // tplModal: NzModalRef;\r\n  // loading: boolean = false;\r\n  // fileList: NzUploadFile[] = [];\r\n  // constructor(\r\n  //   private toasterService: ToasterService,\r\n  //   private confirmationService: ConfirmationService,\r\n  //   private fileService: FileService,\r\n  //   private store: Store,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {\r\n  // }\r\n\r\n  // getUrl(x: string) {    \r\n  //   if (x.includes('http')) {\r\n  //     return x;\r\n  //   } else {\r\n  //     return this.fileService.getFileByName(x);\r\n  //   }\r\n  // }\r\n\r\n  // getFileName(x: string) {\r\n  //   let splitStr = x.split(\"\\\\\");\r\n  //   return splitStr[splitStr.length - 1];\r\n  // }\r\n  \r\n\r\n  // save(): string[] {\r\n  //   this.loading = true;\r\n  //   const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('');\r\n  //   const formData = new FormData();\r\n  //   let urlList: string[] = this.existFileUrls;\r\n  //   this.fileList.forEach((file: any) => {\r\n  //     let url = `cms\\\\posts\\\\${randomName}\\\\${file.name}`;\r\n  //     urlList.push(url);\r\n  //     formData.append('files[]', file, url);\r\n  //   });    \r\n  //   this.fileService.uploadFileByFormData(formData).subscribe(() => {\r\n  //   }, (error) => {\r\n  //     this.loading = false;\r\n  //     this.toasterService.error(\"上傳失敗\");\r\n  //   });\r\n  //   return urlList;\r\n  // }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n// import { group } from '@angular/animations';\r\n// import { PostTagMapDto, TagGroupDto } from '@fs-tw/cms/proxy';\r\n// import * as _ from 'lodash';\r\n// import { Observable } from 'rxjs';\r\n// import { take } from 'rxjs/operators';\r\n// import { PageService } from '../../providers/page.service';\r\n@Component({\r\n  selector: 'fs-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  // postTagsDict: { [tagCodeId: string]: PostTagMapDto; } = {};\r\n\r\n  // @Input() postId: string;\r\n\r\n  // @Input()\r\n  // set postTags(val: PostTagMapDto[]) {    \r\n  //   for (let item of val) {\r\n  //     this.postTagsDict[item.tagCodeId] = item;\r\n  //   }\r\n\r\n  //   this.existTagCodeIds = val.map(x => x.tagCodeId);\r\n\r\n  //   this.pageService.getAllTags().pipe(take(1)).subscribe(x => {\r\n  //     this.tagGroups = x;\r\n  //     for (let group of this.tagGroups) {\r\n  //       for (let tag of group.tags) {\r\n  //         if (this.existTagCodeIds.includes(tag.id)) {\r\n  //           tag.check = true;\r\n  //           continue;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // existTagCodeIds: string[] = [];\r\n  // tagGroups: any[] = []\r\n  // constructor(\r\n  //   private pageService: PageService,\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // checkParent(group: any) {\r\n  //   group.check = !group.check;\r\n  //   for (let item of group.tags) {\r\n  //     item.check = group.check;\r\n  //   }\r\n\r\n  // }\r\n  // checkChild(tag: any) {\r\n  //   tag.check = !tag.check;\r\n  // }\r\n\r\n\r\n  // save(postId?: string): Observable<any>[] {\r\n  //   if(!this.postId) this.postId = postId;\r\n  //   let tags: any[] = _.flatMap(this.tagGroups, \"tags\").filter(x => x.check);\r\n  //   let deleteTargetIds: string[] = _.xorWith(this.existTagCodeIds, tags.map(x => x.id));\r\n  //   let action: Observable<any>[] = [];\r\n  //   for (let tagCodeId of deleteTargetIds) {\r\n  //     if (this.postTagsDict[tagCodeId]) {\r\n  //       action.push(this.pageService.deletePostTagMap(this.postTagsDict[tagCodeId].id));\r\n  //     } else {\r\n  //       action.push(this.pageService.createPostTagMap(this.postId, tagCodeId));\r\n  //     }\r\n  //   }\r\n  //   return action;\r\n  // }\r\n}\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { SEModule } from '@delon/abc/se';\r\n\r\nimport { PostRoutingModule } from './post-routing.module';\r\nimport { LayoutComponent } from './components/layout/layout.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SharedModule } from '../shared/shared.module'\r\n\r\nimport { DetailComponent } from './components/detail/detail.component';\r\nimport { ListComponent } from './components/main/list/list.component';\r\nimport { CreateComponent } from './components/modal/create/create.component';\r\nimport { PageService } from './providers/page.service';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\nimport { ImagePickerComponent } from './components/image-picker/image-picker.component';\r\n\r\nconst NzModules = [\r\n  NzGridModule,\r\n  NzInputModule,\r\n  NzTableModule,\r\n  NzDropDownModule,\r\n  NzButtonModule,\r\n  NzIconModule,\r\n  NzModalModule,\r\n  NzRadioModule,\r\n  NzUploadModule,\r\n  NzSpinModule,\r\n  NzCardModule,\r\n  NzSelectModule,\r\n  NzDatePickerModule,\r\n  NzTabsModule,\r\n  SEModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    MainComponent,\r\n    DetailComponent,\r\n    ListComponent,\r\n    CreateComponent,\r\n    UploadFileComponent,\r\n    TagComponent,\r\n    ImagePickerComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    PostRoutingModule,\r\n    ...NzModules,\r\n    // NgxsModule.forFeature([PostState]),\r\n    QuillModule.forRoot()\r\n\r\n  ],\r\n  providers: [\r\n    // PostsStateService,\r\n    PageService\r\n  ]\r\n})\r\nexport class PostModule {\r\n  static forChild(): ModuleWithProviders<PostModule> {\r\n    return {\r\n      ngModule: PostModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n  static forEarly(): NgModuleFactory<PostModule> {\r\n    return new LazyModuleFactory(PostModule.forChild());\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { PostModule } from './post/post.module';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'post' },\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        loadChildren: PostModule.forEarly\r\n      },\r\n      // {\r\n      //   path: 'tag',\r\n      //   loadChildren: TagManagementModule.forEarly\r\n      // },\r\n      // {\r\n      //   path: 'storage',\r\n      //   loadChildren: StorageModule.forEarly\r\n      // }\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsAdminRoutingModule { }\r\n","import { NgModule, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { CmsAdminRoutingModule } from './cms-admin-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    CmsAdminRoutingModule,\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class CmsAdminModule {\r\n  static forChild(): ModuleWithProviders<CmsAdminModule> {\r\n    return {\r\n      ngModule: CmsAdminModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<CmsAdminModule> {\r\n    return new LazyModuleFactory(CmsAdminModule.forChild());\r\n  }\r\n\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CmsAdminRoutingModule as ɵa} from './lib/cms-admin-routing.module';\nexport {DetailComponent as ɵg} from './lib/post/components/detail/detail.component';\nexport {ImagePickerComponent as ɵm} from './lib/post/components/image-picker/image-picker.component';\nexport {LayoutComponent as ɵc} from './lib/post/components/layout/layout.component';\nexport {ListComponent as ɵh} from './lib/post/components/main/list/list.component';\nexport {MainComponent as ɵd} from './lib/post/components/main/main.component';\nexport {CreateComponent as ɵj} from './lib/post/components/modal/create/create.component';\nexport {TagComponent as ɵl} from './lib/post/components/tag/tag.component';\nexport {UploadFileComponent as ɵk} from './lib/post/components/upload-file/upload-file.component';\nexport {PostRoutingModule as ɵo,RouteConfig as ɵn} from './lib/post/post-routing.module';\nexport {PostModule as ɵb} from './lib/post/post.module';\nexport {PageService as ɵe} from './lib/post/providers/page.service';\nexport {PostStateService as ɵf} from './lib/post/providers/post-state.service';\nexport {FileService as ɵi} from './lib/shared';"],"names":["_.cloneDeep","routes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkBa,gBAAgB;IAOzB;QANQ,UAAK,GAAG,IAAI,aAAa,CAAC,EAAgB,CAAC,CAAC;KAQnD;IAND,OAAO;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;KACrD;IAMD,OAAO,CAAC,IAA+B;QACnC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAA;KACnC;;;;YAhBJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;MCVY,eAAe;IAE1B,iBAAiB;IAEjB,QAAQ;KACP;;;YAVF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,+CAAsC;;aAEvC;;;;ACHD;MAEa,WAAW;IAMtB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CACvC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAC9C,CAAC;QACF,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CACvC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qBAAqB,CAChD,CAAC;KACH;;IAGD,QAAQ,CAAC,KAAuC;QAC9C,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;KACrD;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KACzD;IAED,UAAU,CAAC,KAAsC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KACnD;IAED,UAAU,CAAC,EAAU,EAAE,KAAsC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,mCAAmC,CACzD,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,KAAK,CACN,CAAC;KACH;;;IAID,2BAA2B,CAAC,GAAW,EAAE,KAAc;QACrD,OAAO,IAAI,CAAC,qBAAqB,CAAC,2BAA2B,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAC3E;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;KAClD;;;IAKD,gBAAgB,CAAC,KAA6C;QAC5D,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KACzD;IAED,UAAU,CAAC,KAAsC;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KACnD;IAED,UAAU,CAAC,EAAU,EAAE,KAAsC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,mCAAmC,CACzD,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,KAAK,CACN,CAAC;KACH;;;YApEF,UAAU;;;YAJF,QAAQ;;;ACSjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAMa,aAAa;IAiBxB,YACU,MAAc,EACd,WAAwB,EACxB,gBAAkC;QAFlC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAd5C,eAAU,GAA2C;YACnD,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SAC6B,CAAC;QAE5C,UAAK,GAA2C,EAAE,CAAC;QACnD,eAAU,GAAW,CAAC,CAAC;QACvB,YAAO,GAAY,KAAK,CAAC;KAMpB;IAIL,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI;YACxB,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;YAErD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACpB,CAAC,CAAA;KACH;IAED,UAAU,CAAC,EAAW;QACpB,IAAI,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,GAAG,EAAE,CAAC,CAAC,CAAC;;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;KACjD;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAExE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;SAChC,CAAC,CAAA;KACH;IAED,UAAU,CAAC,IAA0C;KAEpD;;;YA/DF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,qkHAAoC;;aAErC;;;YAtBwB,MAAM;YAKtB,WAAW;YACX,gBAAgB;;;MCAZ,SAAS;IAIpB,YAAY,WAAmB,EAAE,EAAE,UAAkB,EAAE;QACrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;CACF;MAEY,QAAQ;IAMnB,YAAY,QAAgB,EAAE,OAAe,EAAE,IAAU;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;KACnC;CACF;AAED,MAAM,SAAS;IAIb;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;CACF;MAOY,oBAAoB;IAuD/B,YACU,cAA8B,EAC9B,kBAAqC,EACrC,kBAAsC;QAFtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,uBAAkB,GAAlB,kBAAkB,CAAoB;;QAvDvC,eAAU,GAAW,OAAO,CAAC;;QAG7B,gBAAW,GAAW,OAAO,CAAC;;QAG9B,gBAAW,GAAW,OAAO,CAAC;;QAG9B,iBAAY,GAAW,OAAO,CAAC;;QAG/B,kBAAa,GAAW,IAAI,CAAC;;QAG7B,eAAU,GAAY,IAAI,CAAC;;QAY3B,WAAM,GAAY,IAAI,CAAC;;QAGvB,oBAAe,GAAY,IAAI,CAAC;;QAGhC,eAAU,GAAgB,EAAE,CAAC;;QAG9B,gBAAW,GAAa,EAAE,CAAC;;QAGnC,cAAS,GAAgB,EAAE,CAAC;;QAGpB,gBAAW,GAAmB,EAAE,CAAC;;QAGzC,cAAS,GAAc,IAAI,SAAS,EAAE,CAAC;QAuCvC,iBAAY,GAAG,CAAC,IAAkB;YAChC,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC;YACzE,IAAI,CAAC,UAAU,EAAE;gBACf,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC9C,OAAO,KAAK,CAAC;aACd;YAED,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAEzB,IAAI,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YAChF,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,IAAI,aAAa,IAAI,YAAY;gBAAE,OAAO,KAAK,CAAC;YAGhD,IAAI,OAAO,GAAQ,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG;gBAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACnB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBACrC,OAAO;iBACR;gBAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;aACnD,CAAC,CAAC;YAEH,OAAO,KAAK,CAAC;SACd,CAAC;KAtDG;IATL,IAAI,SAAS;QACX,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACnE,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;KACvE;IAQD,QAAQ;KACP;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;aAC9B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;aACtB,GAAG,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,KAAK;QACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAEO,UAAU,CAAC,GAAW;QAC5B,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;QAExC,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC;KAClD;IA8BO,SAAS,CAAC,GAAS,EAAE,QAA+B;QAC1D,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KAC3B;IAED,UAAU,CAAC,QAAgB;QACzB,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;QAG7E,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,OAAO;SACR;;QAGD,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;SACrE;KAEF;IAED,aAAa,CAAC,KAAc,EAAE,QAAmB,IAAI,SAAS,EAAE;QAC9D,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;KACnC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,cAAc;QACZ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACzI,IAAI,WAAW,GAAe,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAE5F,OAAO,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KACvC;;;YA/JF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,22FAA4C;;aAE7C;;;YA1CQ,cAAc;YACK,kBAAkB;YAArC,kBAAkB;;;yBA6CxB,KAAK;0BAGL,KAAK;0BAGL,KAAK;2BAGL,KAAK;4BAGL,KAAK;yBAGL,KAAK;4BAGL,KAAK;6BAGL,KAAK;iCAGL,KAAK;qBAGL,KAAK;8BAGL,KAAK;yBAGL,KAAK;;;ACxER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAOa,eAAe;IAc1B,YACU,MAAc,EACd,cAA8B,EAC9B,WAAwB,EACxB,mBAAwC;QAHxC,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAblD,cAAS,GAAW,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;QAC7C,kBAAa,GAAgB,EAAE,CAAC;QAEhC,UAAK,GAAgC,EAAE,CAAC;QAExC,cAAS,GAAY,KAAK,CAAC;QAE3B,eAAU,GAAW,EAAE,CAAC;KAQvB;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,OAAO;QACL,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC;YACX,kBAAkB,EAAE,EAAE;YACtB,UAAU,EAAE,EAAE;SACc,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;QAE1C,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,wCAAwC,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,UAAU,GAAG,MAAM,CAAA;QAExB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBAEd,IAAI,EAAE,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC1D,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;gBACtD,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBAE1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;gBAEzE,IAAI,eAAe,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC7D,IAAI,eAAe,GAAG,CAAC,CAAC;oBAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC;aAC/E,CAAC,CAAA;SACH;KACF;IAED,QAAQ;QACN,IAAI,KAAK,GAAG;YACV,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,GAAG;YACnB,OAAO,EAAE,UAAU;SACgB,CAAC;QAEtC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;SACtB,CAAC,CAAA;KACH;IAED,UAAU,CAAC,QAAgB;QACzB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,QAAQ,KAAK,EAAE,MAAM,CAAC;aACzD,SAAS,CAAC,CAAC,MAAM;YAChB,IAAI,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO;gBAAE,OAAO;YAElD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SAC9C,CAAC,CAAA;KACL;IAED,IAAI;QACF,IAAI,IAAI,GAA8BA,SAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;;QAIpD,IAAI,MAAuB,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC5C;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SACzD;QAED,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACpC,CAAC,CAAA;KAEH;;;YA/GF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,8iMAAsC;;aAEvC;;;YAzBwB,MAAM;YAAtB,cAAc;YAMd,WAAW;YAPG,mBAAmB;;;iCA4BvC,SAAS,SAAC,oBAAoB;;;MCnBpB,WAAW;IACtB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAK;IAE3D,OAAO;QACL,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC5C;;;YANF,UAAU;;;YANF,gBAAgB;;AAezB,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,eAAe;QAC1B,OAAO,EAAE,EAAE,aAAa,EAAE,WAAW,EAAE;QACvC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,aAAa;aACzB;YACD;gBACE,IAAI,EAAC,QAAQ;gBACb,SAAS,EAAC,eAAe;aAC1B;YACD;gBACE,IAAI,EAAC,gBAAgB;gBACrB,SAAS,EAAC,eAAe;aAC1B;SACF;KACF;CACF,CAAC;MASW,iBAAiB;;;YAP7B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAC;oBACR,WAAW;iBACZ;aACF;;;MCvCY,eAAe;IAExB,YACY,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;KAC7C;IAEL,SAAS,CAAC,KAAa;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,GAAG,uDAAuD,GAAG,KAAK,CAAA;KAC/G;;;YAXJ,IAAI,SAAC;gBACF,IAAI,EAAE,aAAa;aACtB;;;YALQ,kBAAkB;;;ACI3B,MAAM,SAAS,GAAG,CAAC,eAAe,CAAC,CAAA;MAgBtB,YAAY;;;YAdxB,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,GAAG,SAAS,CAAC;gBAC5B,OAAO,EAAE;;oBAEP,wBAAwB;oBACxB,kBAAkB;iBACnB;gBACD,OAAO,EAAE;;oBAEP,GAAG,SAAS;oBACZ,wBAAwB;oBACxB,kBAAkB;iBACnB;aACF;;;MCPY,WAAW;IAEtB,YACU,WAAwB,EACxB,kBAAsC;QADtC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;KAE/C;IAED,UAAU,CAAC,EAAE;QACX,IAAG,CAAC,EAAE;YAAE,OAAO,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,GAAG,uDAAuD,GAAG,EAAE,CAAA;KAC1G;IAED,UAAU,CAAC,IAAU,EAAE,WAAmB;QACxC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACtC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAyB;YACtD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,6CAA6C;YAClD,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE;SACrC,CAAC,CAAC;KACJ;;;;YA1BF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;YAXL,WAAW;YAA/B,kBAAkB;;;;MCgCd,aAAa;IASxB,YACU,iBAAoC,EACpC,WAAwB,EACtB,QAAkB,EACZ,IAAiB,EACzB,WAAwB,EACxB,cAA8B,EAC9B,gBAAkC;QANlC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACtB,aAAQ,GAAR,QAAQ,CAAU;QACZ,SAAI,GAAJ,IAAI,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAd5C,UAAK,GAAgC,EAAE,CAAC;QACxC,UAAK,GAAG,CAAC,CAAC;QACV,kBAAa,GAAgB,EAAE,CAAC;QAChC,cAAS,GAAG,KAAK,CAAC;QAElB,aAAQ,GAA8B,EAA+B,CAAA;QAWnE,IAAI,CAAC,WAAW,CAAC,2BAA2B,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB,CAAC,CAAA;KACH;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,QAAQ,gCAAqB,CAAC,SAAS,CAC5D,CAAC,CAAC;YACA,QAAQ,CAAC,CAAC,IAAI;gBACZ,KAAK,MAAM;oBACT,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACvB,MAAM;gBACR,KAAK,QAAQ;oBACX,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;oBACzB,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,GAAG,EAAE,CAAC;oBACX,MAAM;aACT;SACF,CACF,CAAC;QAEF,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,MAAM;QACJ,IAAI,KAAK,GAAqC;YAC5C,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,UAAU;SACgB,CAAC;QAItC,MAAM,qBAAqB,GAAG,CAAC,KAAK;YAClC,KAAK,GAAG,KAAK,CAAC;YACd,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;SACxC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG;YACzD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC;SAC7B,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,IAA0C;QACnD,IAAI,IAAI,IAAI,IAAI;YAAE,OAAO;QACzB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,UAAU,CAAC,IAA+B;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,KAAK,CAAC,MAAM,CAAC,CAAA;KACd;IAID,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAED,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;;QAG7B,IAAI,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QAChE,IAAI,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QACpE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG;YACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACzD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACrC,OAAO;aACR;YACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;gBAClF,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACvB,CAAC,CAAA;SACH;;YAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC1B;IAED,QAAQ,CAAC,MAAO;QACd,IAAI,KAAK,iDAAQ,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAC,IAAI,CAAC,KAAK,KAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAE,CAAC;QAC3E,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,IAAI,MAAuB,CAAC;QAC5B,IAAI,KAAK,CAAC,EAAE;YAAE,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aAC/D;YACH,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC;YAC7B,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC7C;QACD,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAED,GAAG;QACD,IAAI,CAAC,QAAQ,GAAG,EAAS,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAA;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,IAAI,CAAC,EAAU;QACb,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAA;YACvB,IAAI,CAAC,CAAC,OAAO;gBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YACxG,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB,CAAC,CAAA;KACH;IAED,SAAS;QACP,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;KACzC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;;YAtJF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,uiDAAoC;gBAEpC,SAAS,EAAE;oBACT,WAAW;oBACX;wBACE,OAAO,EAAE,qBAAqB;wBAC9B,QAAQ,IAAqB;qBAC9B;iBACF;;aACF;;;YArBwB,iBAAiB;YARjC,WAAW;YAHA,QAAQ;YAKnB,WAAW;YAJX,WAAW;YAiBlB,cAAc;YAdP,gBAAgB;;;iCA8BtB,SAAS,SAAC,oBAAoB;;;AC1BjC;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;MAOa,eAAe;IAe1B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QARlC,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAE5B,cAAS,GAAG,KAAK,CAAC;QAGlB,kBAAa,GAAgB,EAAE,CAAC;KAM/B;IAGD,QAAQ;KAEP;IAED,SAAS;QACP,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,EAAE,EAAE;YACN,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,CAAC;YACX,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,EAAE;SACiB,CAAC;QAE/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;;gBAGd,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,uCAAuC,CAAC,CAAC,CAAC;;aAEvF,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAED,IAAI;;QAEF,IAAI,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QAChE,IAAI,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QAEpE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAI,IAAI,IAAI,IAAI,gBAAgB,EAAE;YAChC,IAAI,IAAI,CAAC,QAAQ;gBAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAC9D;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAGhD,IAAI,KAAK,GAA8BA,SAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9D,IAAI,MAAuB,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC;YAC7B,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC7C;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1D;QAED,MAAM,CAAC,SAAS,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB,EAAE,CAAC,KAAK;YACP,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ;;;YA3FF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,+7EAAsC;;aAEvC;;;YAnBQ,WAAW;;;iCAsBjB,SAAS,SAAC,oBAAoB;qBAE9B,KAAK;qBAGL,MAAM;;;AC5BT;AACA;AACA;AACA;MAOa,mBAAmB;IAO9B,YACU,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QALlD,kBAAa,GAAa,EAAE,CAAC;QAE7B,aAAQ,GAAmB,EAAE,CAAC;QAY9B,iBAAY,GAAG,CAAC,IAAkB;YAChC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,IAAI,KAAK;gBAAE,OAAO,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3C,OAAO,KAAK,CAAC;SACd,CAAC;KAZD;IAED,QAAQ;KAEP;IAUD,MAAM,CAAC,GAAG;QACR,IAAI,CAAC,mBAAmB;aACvB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;aACtB,SAAS,CAAC,CAAC,MAA2B;YACrC,IAAI,MAAM,KAAK,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE;gBAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aAC/D;SACF,CAAC,CAAC;KACJ;;;YAtCF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,k9BAA2C;;aAE5C;;;YAXsB,mBAAmB;;;4BAcvC,KAAK;;;ACfR;AACA;AACA;AACA;AACA;AACA;MAMa,YAAY;IAEvB,QAAQ;KAEP;;;YATF,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,y3DAAmC;;aAEpC;;;AC2BD,MAAM,SAAS,GAAG;IAChB,YAAY;IACZ,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,cAAc;IACd,YAAY;IACZ,aAAa;IACb,aAAa;IACb,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,QAAQ;CACT,CAAA;MA8BY,UAAU;IACrB,OAAO,QAAQ;QACb,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,EAAE;SACd,CAAC;KACH;IAED,OAAO,OAAO;QACZ,OAAO,IAAI,iBAAiB,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;KACrD;IACD,OAAO,QAAQ;QACb,OAAO,IAAI,iBAAiB,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;KACrD;;;YAzCF,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,eAAe;oBACf,aAAa;oBACb,eAAe;oBACf,aAAa;oBACb,eAAe;oBACf,mBAAmB;oBACnB,YAAY;oBACZ,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,UAAU;oBACV,mBAAmB;oBACnB,WAAW;oBACX,YAAY;oBACZ,iBAAiB;oBACjB,GAAG,SAAS;;oBAEZ,WAAW,CAAC,OAAO,EAAE;iBAEtB;gBACD,SAAS,EAAE;;oBAET,WAAW;iBACZ;aACF;;;aCtEqB,UAAU,CAAC,QAAQ;AARzC,MAAMC,QAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE;IACnD;QACE,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;QACzC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,MAAqB;aAClC;SASF;KACF;CACF,CAAC;MAMW,qBAAqB;;;YAJjC,QAAQ,SAAC;gBACP,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;gBACzC,OAAO,EAAE,CAAC,YAAY,CAAC;aACxB;;;MCfY,cAAc;IACzB,OAAO,QAAQ;QACb,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,EAAE;SACd,CAAC;KACH;IAED,OAAO,OAAO;QACZ,OAAO,IAAI,iBAAiB,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;KACzD;;;YApBF,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,UAAU;oBACV,qBAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;aACF;;;ACdD;;;;;;"}