{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/account/src/lib/strategies/auth-flow.strategy.ts","../../../../libs/account/src/lib/services/auth.service.ts","../../../../libs/account/src/lib/services/account.service.ts","../../../../libs/account/src/lib/components/tenant-box/tenant-box.component.html","../../../../libs/account/src/lib/components/tenant-box/tenant-box.component.ts","../../../../libs/account/src/lib/components/auth-wrapper/auth-wrapper.component.html","../../../../libs/account/src/lib/components/auth-wrapper/auth-wrapper.component.ts","../../../../libs/account/src/lib/components/login/login.component.html","../../../../libs/account/src/lib/components/login/login.component.ts","../../../../libs/account/src/lib/components/change-password/change-password.component.html","../../../../libs/account/src/lib/components/change-password/change-password.component.ts","../../../../libs/account/src/lib/components/personal-settings/personal-settings.component.html","../../../../libs/account/src/lib/components/personal-settings/personal-settings.component.ts","../../../../libs/account/src/lib/components/manage-profile/manage-profile.component.html","../../../../libs/account/src/lib/components/manage-profile/manage-profile.component.ts","../../../../libs/account/src/lib/components/register/register.component.html","../../../../libs/account/src/lib/components/register/register.component.ts","../../../../libs/account/src/lib/guards/authentication-flow.guard.ts","../../../../libs/account/src/lib/account-routing.module.ts","../../../../libs/account/src/lib/tokens/options.token.ts","../../../../libs/account/src/lib/utils/factory-utils.ts","../../../../libs/account/src/lib/guards/manage-profile.guard.ts","../../../../libs/account/src/lib/account.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","pop","length","push","create","__read","o","m","r","i","ar","error","__spread","arguments","concat","localStorage","AuthPasswordFlowStrategy","_super","_this","isInternalAuth","String","__","constructor","__extends","login","injector","get","Router","navigateByUrl","checkIfInternalAuth","logout","rest","RestService","configStateService","ConfigStateService","abpApplicationConfigurationService","AbpApplicationConfigurationService","issuer","getDeep","request","method","url","pipe","tap","oAuthService","logOut","switchMap","x","setState","destroy","AuthFlowStrategy","AuthService","environment","router","sessionStateService","options","setStrategy","flow","getEnvironment","oAuthConfig","responseType","strategy","AUTH_FLOW_STRATEGY","Code","listenToSetEnvironment","initLogin","defineProperty","createOnUpdateStream","state","subscribe","init","_a","username","password","tenant","getTenant","from","fetchTokenUsingPasswordFlow","HttpHeaders","assign","id","__tenant","redirectUrl","snq","window","history","take","i0","ɵɵinject","Injector","i1","EnvironmentService","i2","OAuthService","i3","SessionStateService","factory","ɵfac","providedIn","Injectable","Optional","Inject","AccountService","apiName","findTenant","tenantName","register","skipHandleError","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","ctx_r0","modalBusy","TenantBoxComponent","toasterService","accountService","subscriptionService","currentTenant$","getTenant$","onSwitch","name","isModalVisible","save","setTenant","finalize","success","tenantId","showError","addOne","messageLocalizationParams","ɵɵdirectiveInject","i3$1","ToasterService","SubscriptionService","selectors","decls","vars","consts","template","rf","ctx","Component","selector","templateUrl","i0.ɵɵprojection","AuthWrapperComponent","multiTenancy","store","subscription","enableLocalLogin","tenantBoxKey","isMultiTenancyEnabled$","getDeep$","ngOnInit","getSetting$","toLowerCase","_r3","MultiTenancyService","i2$1","Store","inputs","mainContentRef","cancelContentRef","exportAs","features","ɵɵProvidersFeature","ngContentSelectors","_c1","_r2","providers","Input","maxLength","Validators","required","minLength","LoginComponent","fb","oauthService","authService","isSelfRegistrationEnabled","authWrapperKey","getSetting","form","group","remember","onSubmit","invalid","inProgress","catchError","err","error_description","message","life","throwError","i1$1","FormBuilder","PASSWORD_FIELDS","ChangePasswordComponent","mapErrorsFn","errors","groupErrors","control","indexOf","filter","key","hideCurrentPassword","selectSnapshot","ProfileState","getProfile","hasPassword","passwordValidations","getPasswordValidators","newPassword","validators","repeatNewPassword","comparePasswords","removeControl","dispatch","ChangePassword","currentPassword","reset","addControl","FormControl","$event","preventDefault","email","PersonalSettingsComponent","buildForm","profile","userName","surname","phoneNumber","submit","UpdateProfile","ManageProfileComponent","selectedTab","changePasswordKey","personalSettingsKey","GetProfile","isProfileLoaded","isExternal","hideChangePasswordTab","trigger","transition","useAnimation","fadeIn","animations","styles","RegisterComponent","newUser","emailAddress","appName","AuthenticationFlowGuard","canActivate","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","ReplaceableRouteContainerComponent","data","replaceableComponent","defaultComponent","AuthGuard","AccountRoutingModule","RouterModule","forChild","imports","exports","NgModule","ACCOUNT_OPTIONS","InjectionToken","accountOptionsFactory","ManageProfileGuard","environmentService","env","location","href","AccountModule","ngModule","provide","useValue","useFactory","deps","forLazy","LazyModuleFactory","CoreModule","ThemeSharedModule","NgbDropdownModule","NgxValidateCoreModule","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AbpApplicationConfigurationService, AuthFlowStrategy, ConfigStateService, RestService } from '@abp/ng.core';\r\nimport { Router } from '@angular/router';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nexport const oAuthStorage = localStorage;\r\n\r\nexport class AuthPasswordFlowStrategy extends AuthFlowStrategy {\r\n    readonly isInternalAuth = true;\r\n\r\n    login() {\r\n        const router = this.injector.get(Router);\r\n        router.navigateByUrl('/account/login');\r\n    }\r\n\r\n    checkIfInternalAuth() {\r\n        return true;\r\n    }\r\n\r\n    logout() {\r\n        const rest = this.injector.get(RestService);\r\n        const configStateService = this.injector.get(ConfigStateService);\r\n        const abpApplicationConfigurationService = this.injector.get(AbpApplicationConfigurationService);\r\n        const issuer: string = configStateService.getDeep('environment.oAuthConfig.issuer');\r\n\r\n        return rest\r\n            .request(\r\n                {\r\n                    method: 'GET',\r\n                    url: '/api/account/logout',\r\n                },\r\n                null,\r\n                issuer,\r\n            )\r\n            .pipe(\r\n                tap(() => this.oAuthService.logOut()),\r\n                switchMap(() => {\r\n                    return abpApplicationConfigurationService.get()\r\n                        .pipe(tap(x => configStateService.setState(x)))\r\n                }),\r\n            );\r\n    }\r\n\r\n    destroy() { }\r\n}","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Injector, Optional } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  EnvironmentService, ConfigStateService,\r\n  AbpApplicationConfigurationService, SessionStateService, AuthFlowStrategy,\r\n  AUTH_FLOW_STRATEGY\r\n} from '@abp/ng.core';\r\nimport { AuthPasswordFlowStrategy } from '../strategies/auth-flow.strategy'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private flow: string;\r\n  private strategy: AuthFlowStrategy;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private environment: EnvironmentService,\r\n    private oAuthService: OAuthService,\r\n    private abpApplicationConfigurationService: AbpApplicationConfigurationService,\r\n    private router: Router,\r\n    private sessionStateService: SessionStateService,\r\n    private configStateService: ConfigStateService,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {\r\n    this.setStrategy();\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n\r\n  initLogin() {\r\n    this.strategy.login();\r\n  }\r\n\r\n  private setStrategy = () => {\r\n    const flow = this.environment.getEnvironment().oAuthConfig.responseType || 'password';\r\n    if (this.flow === flow) return;\r\n    if (this.strategy) this.strategy.destroy();\r\n    this.flow = flow;\r\n    if (flow === 'password') {\r\n      this.strategy = new AuthPasswordFlowStrategy(this.injector);\r\n    }\r\n    else {\r\n      this.strategy = AUTH_FLOW_STRATEGY.Code(this.injector);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  get isInternalAuth() {\r\n    return this.strategy.isInternalAuth;\r\n  }\r\n\r\n  private listenToSetEnvironment() {\r\n    this.environment.createOnUpdateStream(state => state.oAuthConfig).subscribe(this.setStrategy);\r\n  }\r\n\r\n  async init() {\r\n    return await this.strategy.init();\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.strategy.logout()\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.sessionStateService.getTenant();\r\n\r\n    return from(\r\n      this.oAuthService.fetchTokenUsingPasswordFlow(\r\n        username,\r\n        password,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    ).pipe(\r\n      switchMap(() => {\r\n        return this.abpApplicationConfigurationService.get()\r\n          .pipe(tap(x => this.configStateService.setState(x)))\r\n      }),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.router.navigateByUrl(redirectUrl)\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  apiName = 'AbpAccount';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, {\r\n      skipHandleError: true,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"(currentTenant$ | async) || {} as currentTenant\">\r\n  <div style=\"height: 1em;\"></div>\r\n  <div class=\"card shadow-sm rounded mb-3\">\r\n    <div class=\"card-body px-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <span style=\"font-size: 0.8em;\" class=\"text-uppercase text-muted\">{{\r\n            'AbpUiMultiTenancy::Tenant' | abpLocalization\r\n          }}</span\r\n          ><br />\r\n          <h6 class=\"m-0 d-inline-block\">\r\n            <i>{{ currentTenant.name || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}</i>\r\n          </h6>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a\r\n            id=\"AbpTenantSwitchLink\"\r\n            href=\"javascript:void(0);\"\r\n            class=\"btn btn-sm mt-3 btn-outline-primary\"\r\n            (click)=\"onSwitch()\"\r\n            >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <abp-modal size=\"md\" [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\">\r\n    <ng-template #abpHeader>\r\n      <h5>Switch Tenant</h5>\r\n    </ng-template>\r\n    <ng-template #abpBody>\r\n      <form (ngSubmit)=\"save()\">\r\n        <div class=\"mt-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\r\n            <input\r\n              [(ngModel)]=\"name\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"tenant\"\r\n              class=\"form-control\"\r\n              autofocus\r\n            />\r\n          </div>\r\n          <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\r\n        </div>\r\n      </form>\r\n    </ng-template>\r\n    <ng-template #abpFooter>\r\n      <button #abpClose type=\"button\" class=\"btn btn-secondary\">\r\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\r\n      </button>\r\n      <abp-button\r\n        type=\"abp-button\"\r\n        iconClass=\"fa fa-check\"\r\n        (click)=\"save()\"\r\n        [disabled]=\"currentTenant?.name === name\"\r\n      >\r\n        <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\r\n      </abp-button>\r\n    </ng-template>\r\n  </abp-modal>\r\n</ng-container>\r\n","// import { ABP, GetAppConfiguration, SessionState, SetTenant } from '@abp/ng.core';\r\nimport { ABP, SessionStateService, CurrentTenantDto, SubscriptionService, AbpApplicationConfigurationService,ConfigStateService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, take, tap } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent\r\n  implements Account.TenantBoxComponentInputs, Account.TenantBoxComponentOutputs {\r\n\r\n  currentTenant$: Observable<CurrentTenantDto>;\r\n\r\n  name: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  modalBusy: boolean;\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private accountService: AccountService,\r\n    private sessionStateService: SessionStateService,\r\n    private subscriptionService: SubscriptionService,\r\n    private abpApplicationConfigurationService: AbpApplicationConfigurationService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.currentTenant$ = this.sessionStateService.getTenant$()\r\n  }\r\n\r\n  onSwitch() {\r\n    const tenant = this.sessionStateService.getTenant();//this.store.selectSnapshot(SessionState.getTenant);\r\n    this.name = (tenant || ({} as ABP.BasicItem)).name;\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (!this.name) {\r\n      this.setTenant(null);\r\n      this.isModalVisible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.accountService\r\n      .findTenant(this.name)\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(({ success, tenantId: id, name }) => {\r\n        if (!success) {\r\n          this.showError();\r\n          return;\r\n        }\r\n\r\n        this.setTenant({ id, name });\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  private setTenant(tenant: ABP.BasicItem) {\r\n    this.sessionStateService.setTenant(tenant as CurrentTenantDto);\r\n    this.subscriptionService.addOne(\r\n      this.sessionStateService.getTenant$(),\r\n      (x) => {\r\n        this.abpApplicationConfigurationService.get().pipe(tap(x => this.configStateService.setState(x))).subscribe();\r\n      });\r\n  }\r\n\r\n  private showError() {\r\n    this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\r\n      messageLocalizationParams: [this.name],\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"mx-auto col col-md-5\">\r\n    <ng-container *ngIf=\"(isMultiTenancyEnabled$ | async) && multiTenancy.isTenantBoxVisible\">\r\n      <abp-tenant-box *abpReplaceableTemplate=\"{ componentKey: tenantBoxKey }\"></abp-tenant-box>\r\n    </ng-container>\r\n\r\n    <div class=\"abp-account-container\">\r\n      <div\r\n        *ngIf=\"enableLocalLogin; else disableLocalLoginTemplate\"\r\n        class=\"card mt-3 shadow-sm rounded\"\r\n      >\r\n        <div class=\"card-body p-5\">\r\n          <ng-content *ngTemplateOutlet=\"mainContentRef\"></ng-content>\r\n        </div>\r\n        <ng-content *ngTemplateOutlet=\"cancelContentRef\"></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #disableLocalLoginTemplate>\r\n  <div class=\"alert alert-warning\">\r\n    <strong>{{ 'AbpAccount::InvalidLoginRequest' | abpLocalization }}</strong>\r\n    {{ 'AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient' | abpLocalization }}\r\n  </div>\r\n</ng-template>\r\n","import { ConfigState, SubscriptionService, MultiTenancyService, ConfigStateService } from '@abp/ng.core';\r\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  exportAs: 'abpAuthWrapper',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class AuthWrapperComponent\r\n  implements Account.AuthWrapperComponentInputs, Account.AuthWrapperComponentOutputs, OnInit {\r\n  @Input()\r\n  readonly mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  readonly cancelContentRef: TemplateRef<any>;\r\n\r\n  isMultiTenancyEnabled$: Observable<boolean>;\r\n\r\n  enableLocalLogin = true;\r\n\r\n  tenantBoxKey = eAccountComponents.TenantBox;\r\n\r\n  constructor(\r\n    public readonly multiTenancy: MultiTenancyService,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.isMultiTenancyEnabled$ = this.configStateService.getDeep$('multiTenancy.isEnabled');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription.addOne(\r\n      this.configStateService.getSetting$('Abp.Account.EnableLocalLogin'),\r\n      value => {\r\n        if (value) {\r\n          this.enableLocalLogin = value.toLowerCase() !== 'false';\r\n        }\r\n      },\r\n    );\r\n  }\r\n}\r\n","<abp-auth-wrapper\r\n  *abpReplaceableTemplate=\"{\r\n    componentKey: authWrapperKey,\r\n    inputs: {\r\n      mainContentRef: { value: mainContentRef },\r\n      cancelContentRef: { value: cancelContentRef }\r\n    }\r\n  }\"\r\n  [mainContentRef]=\"mainContentRef\"\r\n  [cancelContentRef]=\"cancelContentRef\"\r\n>\r\n</abp-auth-wrapper>\r\n<ng-template #mainContentRef>\r\n  <h4>{{ 'AbpAccount::Login' | abpLocalization }}</h4>\r\n  <strong *ngIf=\"isSelfRegistrationEnabled\">\r\n    {{ 'AbpAccount::AreYouANewUser' | abpLocalization }}\r\n    <a class=\"text-decoration-none\" routerLink=\"/account/register\">{{\r\n      'AbpAccount::Register' | abpLocalization\r\n    }}</a>\r\n  </strong>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" validateOnSubmit class=\"mt-4\">\r\n    <div class=\"form-group\">\r\n      <label for=\"login-input-user-name-or-email-address\">{{\r\n        'AbpAccount::UserNameOrEmailAddress' | abpLocalization\r\n      }}</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"login-input-user-name-or-email-address\"\r\n        formControlName=\"username\"\r\n        autocomplete=\"username\"\r\n        autofocus\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"login-input-password\">{{ 'AbpAccount::Password' | abpLocalization }}</label>\r\n      <input\r\n        class=\"form-control\"\r\n        type=\"password\"\r\n        id=\"login-input-password\"\r\n        formControlName=\"password\"\r\n        autocomplete=\"current-password\"\r\n      />\r\n    </div>\r\n    <div class=\"form-check\" validationTarget validationStyle>\r\n      <label class=\"form-check-label\" for=\"login-input-remember-me\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id=\"login-input-remember-me\"\r\n          formControlName=\"remember\"\r\n        />\r\n        {{ 'AbpAccount::RememberMe' | abpLocalization }}\r\n      </label>\r\n    </div>\r\n    <abp-button\r\n      [loading]=\"inProgress\"\r\n      buttonType=\"submit\"\r\n      name=\"Action\"\r\n      buttonClass=\"btn-block btn-lg mt-3 btn btn-primary\"\r\n    >\r\n      {{ 'AbpAccount::Login' | abpLocalization }}\r\n    </abp-button>\r\n  </form>\r\n</ng-template>\r\n<ng-template #cancelContentRef>\r\n  <div class=\"card-footer text-center border-0\">\r\n    <a routerLink=\"/\">\r\n      <button type=\"button\" name=\"Action\" value=\"Cancel\" class=\"px-2 py-0 btn btn-link\">\r\n        {{ 'AbpAccount::Cancel' | abpLocalization }}\r\n      </button>\r\n    </a>\r\n  </div>\r\n</ng-template>\r\n","//import { AuthService, SetRemember, ConfigState } from '@abp/ng.core';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { eAccountComponents } from '../../enums/components';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n    private configStateService:ConfigStateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n    (this.configStateService.getSetting('Abp.Account.IsSelfRegistrationEnabled') as string ||'').toLowerCase()!=='false';\r\n\r\n      \r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(128)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n    this.authService\r\n      .login(this.form.get('username').value, this.form.get('password').value)\r\n      .pipe(\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe(() => {\r\n        //this.store.dispatch(new SetRemember(this.form.get('remember').value));\r\n      });\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" [mapErrorsFn]=\"mapErrorsFn\" validateOnSubmit>\r\n  <div *ngIf=\"!hideCurrentPassword\" class=\"form-group\">\r\n    <label for=\"current-password\">{{\r\n      'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization\r\n    }}</label\r\n    ><span> * </span\r\n    ><input\r\n      type=\"password\"\r\n      id=\"current-password\"\r\n      class=\"form-control\"\r\n      formControlName=\"password\"\r\n      autofocus\r\n      autocomplete=\"current-password\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"new-password\">{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}</label\r\n    ><span> * </span\r\n    ><input\r\n      type=\"password\"\r\n      id=\"new-password\"\r\n      class=\"form-control\"\r\n      formControlName=\"newPassword\"\r\n      autocomplete=\"new-password\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"confirm-new-password\">{{\r\n      'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization\r\n    }}</label\r\n    ><span> * </span\r\n    ><input\r\n      type=\"password\"\r\n      id=\"confirm-new-password\"\r\n      class=\"form-control\"\r\n      formControlName=\"repeatNewPassword\"\r\n      autocomplete=\"new-password\"\r\n    />\r\n  </div>\r\n  <abp-button\r\n    iconClass=\"fa fa-check\"\r\n    buttonClass=\"btn btn-primary color-white\"\r\n    buttonType=\"submit\"\r\n    [loading]=\"inProgress\"\r\n    [disabled]=\"form?.invalid\"\r\n    >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\r\n  >\r\n</form>\r\n","import { ChangePassword, ProfileState } from '@abp/ng.core';\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { comparePasswords, Validation } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { required } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n  exportAs: 'abpChangePasswordForm',\r\n})\r\nexport class ChangePasswordComponent\r\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  hideCurrentPassword: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private injector: Injector,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.hideCurrentPassword = !this.store.selectSnapshot(ProfileState.getProfile).hasPassword;\r\n\r\n    const passwordValidations = getPasswordValidators(this.injector);\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n\r\n    if (this.hideCurrentPassword) this.form.removeControl('password');\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          ...(!this.hideCurrentPassword && { currentPassword: this.form.get('password').value }),\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', '', {\r\n            life: 5000,\r\n          });\r\n\r\n          if (this.hideCurrentPassword) {\r\n            this.hideCurrentPassword = false;\r\n            this.form.addControl('password', new FormControl('', [required]));\r\n          }\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n          );\r\n        },\r\n      });\r\n  }\r\n}\r\n","<form validateOnSubmit *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">{{ 'AbpIdentity::DisplayName:UserName' | abpLocalization }}</label\r\n    ><span> * </span\r\n    ><input\r\n      type=\"text\"\r\n      id=\"username\"\r\n      class=\"form-control\"\r\n      formControlName=\"userName\"\r\n      autofocus\r\n      (keydown.space)=\"$event.preventDefault()\"\r\n    />\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</label\r\n        ><input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"surname\">{{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</label\r\n        ><input type=\"text\" id=\"surname\" class=\"form-control\" formControlName=\"surname\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"email-address\">{{ 'AbpIdentity::DisplayName:Email' | abpLocalization }}</label\r\n    ><span> * </span\r\n    ><input type=\"text\" id=\"email-address\" class=\"form-control\" formControlName=\"email\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"phone-number\">{{ 'AbpIdentity::DisplayName:PhoneNumber' | abpLocalization }}</label\r\n    ><input type=\"text\" id=\"phone-number\" class=\"form-control\" formControlName=\"phoneNumber\" />\r\n  </div>\r\n  <abp-button\r\n    buttonType=\"submit\"\r\n    iconClass=\"fa fa-check\"\r\n    buttonClass=\"btn btn-primary color-white\"\r\n    [loading]=\"inProgress\"\r\n    [disabled]=\"form?.invalid\"\r\n  >\r\n    {{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\r\n  >\r\n</form>\r\n","import { ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n  exportAs: 'abpPersonalSettingsForm',\r\n})\r\nexport class PersonalSettingsComponent\r\n  implements\r\n    OnInit,\r\n    Account.PersonalSettingsComponentInputs,\r\n    Account.PersonalSettingsComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    const profile = this.store.selectSnapshot(ProfileState.getProfile);\r\n\r\n    this.form = this.fb.group({\r\n      userName: [profile.userName, [required, maxLength(256)]],\r\n      email: [profile.email, [required, email, maxLength(256)]],\r\n      name: [profile.name || '', [maxLength(64)]],\r\n      surname: [profile.surname || '', [maxLength(64)]],\r\n      phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","<div id=\"AbpContentToolbar\"></div>\r\n\r\n<div class=\"card border-0 shadow-sm min-h-400\" [abpLoading]=\"!isProfileLoaded\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-md-3\">\r\n        <ul class=\"nav flex-column nav-pills\" id=\"nav-tab\" role=\"tablist\">\r\n          <li\r\n            *ngIf=\"!hideChangePasswordTab && isProfileLoaded\"\r\n            class=\"nav-item\"\r\n            (click)=\"selectedTab = 0\"\r\n          >\r\n            <a\r\n              class=\"nav-link\"\r\n              [ngClass]=\"{ active: selectedTab === 0 }\"\r\n              role=\"tab\"\r\n              href=\"javascript:void(0)\"\r\n              >{{ 'AbpUi::ChangePassword' | abpLocalization }}</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item mb-2\" (click)=\"selectedTab = 1\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [ngClass]=\"{ active: selectedTab === 1 }\"\r\n              role=\"tab\"\r\n              href=\"javascript:void(0)\"\r\n              >{{ 'AbpAccount::PersonalSettings' | abpLocalization }}</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div *ngIf=\"isProfileLoaded\" class=\"col-12 col-md-9\">\r\n        <div class=\"tab-content\" *ngIf=\"selectedTab === 0\" [@fadeIn]>\r\n          <div class=\"tab-pane active\" role=\"tabpanel\">\r\n            <h4>\r\n              {{ 'AbpIdentity::ChangePassword' | abpLocalization }}\r\n              <hr />\r\n            </h4>\r\n            <abp-change-password-form\r\n              *abpReplaceableTemplate=\"{ componentKey: changePasswordKey }\"\r\n            ></abp-change-password-form>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-content\" *ngIf=\"selectedTab === 1\" [@fadeIn]>\r\n          <div class=\"tab-pane active\" role=\"tabpanel\">\r\n            <h4>\r\n              {{ 'AbpIdentity::PersonalSettings' | abpLocalization }}\r\n              <hr />\r\n            </h4>\r\n            <abp-personal-settings-form\r\n              *abpReplaceableTemplate=\"{ componentKey: personalSettingsKey }\"\r\n            ></abp-personal-settings-form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetProfile, ProfileState } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n  styles: [\r\n    `\r\n      .min-h-400 {\r\n        min-height: 400px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ManageProfileComponent implements OnInit {\r\n  selectedTab = 0;\r\n\r\n  changePasswordKey = eAccountComponents.ChangePassword;\r\n\r\n  personalSettingsKey = eAccountComponents.PersonalSettings;\r\n\r\n  isProfileLoaded: boolean;\r\n\r\n  hideChangePasswordTab: boolean;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetProfile()).subscribe(() => {\r\n      this.isProfileLoaded = true;\r\n      if (this.store.selectSnapshot(ProfileState.getProfile).isExternal) {\r\n        this.hideChangePasswordTab = true;\r\n        this.selectedTab = 1;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<abp-auth-wrapper\r\n  *abpReplaceableTemplate=\"{\r\n    componentKey: authWrapperKey,\r\n    inputs: {\r\n      mainContentRef: { value: mainContentRef }\r\n    }\r\n  }\"\r\n  [mainContentRef]=\"mainContentRef\"\r\n>\r\n</abp-auth-wrapper>\r\n<ng-template #mainContentRef>\r\n  <h4>{{ 'AbpAccount::Register' | abpLocalization }}</h4>\r\n  <strong>\r\n    {{ 'AbpAccount::AlreadyRegistered' | abpLocalization }}\r\n    <a class=\"text-decoration-none\" routerLink=\"/account/login\">{{\r\n      'AbpAccount::Login' | abpLocalization\r\n    }}</a>\r\n  </strong>\r\n  <form\r\n    *ngIf=\"isSelfRegistrationEnabled\"\r\n    [formGroup]=\"form\"\r\n    (ngSubmit)=\"onSubmit()\"\r\n    validateOnSubmit\r\n    class=\"mt-4\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label for=\"input-user-name\">{{ 'AbpAccount::UserName' | abpLocalization }}</label\r\n      ><span> * </span\r\n      ><input\r\n        autofocus\r\n        type=\"text\"\r\n        id=\"input-user-name\"\r\n        class=\"form-control\"\r\n        formControlName=\"username\"\r\n        autocomplete=\"username\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"input-email-address\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label\r\n      ><span> * </span\r\n      ><input type=\"email\" id=\"input-email-address\" class=\"form-control\" formControlName=\"email\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"input-password\">{{ 'AbpAccount::Password' | abpLocalization }}</label\r\n      ><span> * </span\r\n      ><input\r\n        type=\"password\"\r\n        id=\"input-password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password\"\r\n        autocomplete=\"current-password\"\r\n      />\r\n    </div>\r\n    <abp-button\r\n      [loading]=\"inProgress\"\r\n      buttonType=\"submit\"\r\n      name=\"Action\"\r\n      buttonClass=\"btn-block btn-lg mt-3 btn btn-primary\"\r\n    >\r\n      {{ 'AbpAccount::Register' | abpLocalization }}\r\n    </abp-button>\r\n  </form>\r\n</ng-template>\r\n","//import { AuthService, ConfigState } from '@abp/ng.core';\r\nimport { AuthService } from '../../services/auth.service'\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { eAccountComponents } from '../../enums/components';\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n    private injector: Injector,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.isSelfRegistrationEnabled =\r\n    //   (\r\n    //     this.store.selectSnapshot(\r\n    //       ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n    //     ) || ''\r\n    //   ).toLowerCase() !== 'false';\r\n    // if (!this.isSelfRegistrationEnabled) {\r\n    //   this.toasterService.warn(\r\n    //     {\r\n    //       key: 'AbpAccount::SelfRegistrationDisabledMessage',\r\n    //       defaultValue: 'Self registration is disabled.',\r\n    //     },\r\n    //     null,\r\n    //     { life: 10000 },\r\n    //   );\r\n    //   return;\r\n    // }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, ...getPasswordValidators(this.injector)]],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() => this.authService.login(newUser.userName, newUser.password)),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","//import { AuthService } from '@abp/ng.core';\r\nimport { AuthService } from '../services/auth.service'\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationFlowGuard implements CanActivate {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  canActivate() {\r\n    if (this.authService.isInternalAuth) return true;\r\n\r\n    this.authService.initLogin();\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  DynamicLayoutComponent,\r\n  AuthGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { eAccountComponents } from './enums/components';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Login,\r\n            defaultComponent: LoginComponent,\r\n          } as ReplaceableComponents.RouteData<LoginComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Register,\r\n            defaultComponent: RegisterComponent,\r\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.ManageProfile,\r\n            defaultComponent: ManageProfileComponent,\r\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken<Options>('ACCOUNT_OPTIONS');\r\n","import { Options } from '../models/options';\r\n\r\nexport function accountOptionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { EnvironmentService } from '@abp/ng.core';\r\n\r\n@Injectable()\r\nexport class ManageProfileGuard implements CanActivate {\r\n  constructor(private environmentService: EnvironmentService) {}\r\n\r\n  canActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot) {\r\n    const env = this.environmentService.getEnvironment();\r\n    if (env.oAuthConfig.responseType === 'code') {\r\n      window.location.href = `${env.oAuthConfig.issuer}/Account/Manage?returnUrl=${window.location.href}`;\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS } from './tokens/options.token';\r\nimport { accountOptionsFactory } from './utils/factory-utils';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\nimport { ManageProfileGuard } from './guards/manage-profile.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    AccountRoutingModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AccountModule {\r\n  static forChild(options: Options): ModuleWithProviders<AccountModule> {\r\n    return {\r\n      ngModule: AccountModule,\r\n      providers: [\r\n        AuthenticationFlowGuard,\r\n        ManageProfileGuard,\r\n        { provide: ACCOUNT_OPTIONS, useValue: options },\r\n        {\r\n          provide: 'ACCOUNT_OPTIONS',\r\n          useFactory: accountOptionsFactory,\r\n          deps: [ACCOUNT_OPTIONS],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forLazy(options: Options): NgModuleFactory<AccountModule> {\r\n    return new LazyModuleFactory(AccountModule.forChild(options));\r\n  }\r\n}\r\n"]}