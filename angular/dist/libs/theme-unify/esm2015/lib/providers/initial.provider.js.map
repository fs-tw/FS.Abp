{"version":3,"file":"initial.provider.js","sourceRoot":"","sources":["../../../../../../libs/theme-unify/src/lib/providers/initial.provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkB,eAAe,EAAc,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEtF,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AAErE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAC/C,mFAAmF;AAGnF,MAAM,CAAC,MAAM,6BAA6B,GAAG;IAC3C;QACE,OAAO,EAAE,eAAe;QACxB,UAAU,EAAE,gBAAgB;QAC5B,IAAI,EAAE,CAAC,QAAQ,CAAC;QAChB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF,MAAM,UAAU,gBAAgB,CAAC,QAAkB;IACjD,OAAO,GAAG,EAAE;QACV,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC5D,OAAO,CAAC,MAAM,EAAC,kBAAkB,CAAC,CAAC;IACrC,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,OAAO,CAAE,MAAc,EAAE,kBAAsC;IACtE,MAAM,CAAC,MAAM;SACV,IAAI,CACH,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,aAAa,CAAC,EACvC,KAAK,CAAC,CAAC,CAAC,CAAC;SACV,SAAS,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,kBAAkB,CAAC,YAAY,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;IAChG,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { ApplicationRef, APP_INITIALIZER, ElementRef, Injector } from '@angular/core';\r\nimport { Store, Actions, ofActionDispatched } from '@ngxs/store';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { LayoutStateService } from '../service/layout-state.service';\r\nimport { of } from 'rxjs';\r\nimport { delay, filter } from 'rxjs/operators';\r\n//import { GetTheme, RouterState, UpdateProfile, eThemeNos } from '@fs/theme.core';\r\n\r\n\r\nexport const UNIFY_THEME_INITIAL_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureInitial,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureInitial(injector: Injector) {\r\n  return () => {\r\n    const router = injector.get(Router);\r\n    const layoutStateService = injector.get(LayoutStateService);\r\n    initial(router,layoutStateService);\r\n  };\r\n}\r\n\r\nfunction initial( router: Router, layoutStateService: LayoutStateService) {\r\n  router.events\r\n    .pipe(\r\n      filter(e => e instanceof NavigationEnd),\r\n      delay(0))\r\n    .subscribe(event => {\r\n      console.log('angular-ready');\r\n      layoutStateService.AppComponent.nativeElement.dispatchEvent(new CustomEvent('angular-ready'));\r\n    });\r\n}\r\n"]}