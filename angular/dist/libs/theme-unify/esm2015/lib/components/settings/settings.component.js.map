{"version":3,"file":"settings.component.js","sourceRoot":"","sources":["../../../../../../../libs/theme-unify/src/lib/components/settings/settings.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAQ,mBAAmB,EAAE,MAAM,cAAc,CAAC;AACzD,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,WAAW,EAAa,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAGzC,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AAOxE,MAAM,OAAO,iBAAiB;IAM5B,YACU,OAAuB,EACvB,MAAc,EACd,YAAiC,EACjC,kBAAsC,EACtC,EAAe;QAJf,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAqB;QACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,OAAE,GAAF,EAAE,CAAa;QAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;IACJ,CAAC;IACF,QAAQ;QACN,+CAA+C;QAC/C,4BAA4B;QAC5B,uEAAuE;QACvE,0CAA0C;QAC1C,6BAA6B;QAC7B,mBAAmB;QACnB,UAAU;QACV,OAAO;QACP,KAAK;IACP,CAAC;IAED,IAAI;QACF,uBAAuB;QACvB,gEAAgE;QAChE,0BAA0B;QAC1B,yBAAyB;QACzB,WAAW;QACX,iBAAiB;QACjB,eAAe;QACf,8CAA8C;QAC9C,MAAM;QACN,6BAA6B;QAC7B,mEAAmE;QAEnE,qEAAqE;QACrE,qCAAqC;QAErC,oEAAoE;QACpE,0EAA0E;QAE1E,yBAAyB;QACzB,gFAAgF;QAChF,aAAa;QACb,QAAQ;IACV,CAAC;;;YAxDF,SAAS,SAAC;gBACT,+vDAAwC;;aAEzC;;;YAXQ,cAAc;YAEd,MAAM;YAJA,mBAAmB;YAOzB,kBAAkB;YAJlB,WAAW","sourcesContent":["import { noop, SubscriptionService } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n//import { TheProjectThemeSettingsService, UpdateTheProjectThemeSettingsDto } from '@fs/theme.the-project/proxy';\r\nimport { filter, finalize, skip, take } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../../service/layout-state.service';\r\nimport { Layout } from '../../models/layout';\r\n\r\n@Component({\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.less']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private toaster: ToasterService,\r\n    private router: Router,\r\n    private subscription: SubscriptionService,\r\n    private layoutStateService: LayoutStateService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.form = this.fb.group({\r\n      skin: []\r\n    });    \r\n   }\r\n  ngOnInit(): void {\r\n    //this.layoutStateService.fetchThemeSettings();\r\n    // this.subscription.addOne(\r\n    //   this.layoutStateService.getThemeSettings$().pipe(filter(Boolean)),\r\n    //   ({ skin }: Layout.ThemeSettings) => {\r\n    //     this.form.patchValue({\r\n    //       skin: skin\r\n    //     });\r\n    //   },\r\n    // );\r\n  }\r\n\r\n  save() {\r\n    // this.loading = true;\r\n    // this.layoutStateService.updateThemeSettings(this.form.value);\r\n    // this.layoutStateService\r\n    //   .getThemeSettings$()\r\n    //   .pipe(\r\n    //     //skip(1),\r\n    //     take(1),\r\n    //     finalize(() => (this.loading = false)),\r\n    //   )\r\n    //   .subscribe(async () => {\r\n    //     const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n\r\n    //     this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    //     this.router.navigated = false;\r\n\r\n    //     await this.router.navigateByUrl(this.router.url).catch(noop);\r\n    //     this.router.routeReuseStrategy.shouldReuseRoute = shouldReuseRoute;\r\n\r\n    //     setTimeout(() => {\r\n    //       this.toaster.success('LeptonThemeManagement::SuccessfullySaved', null);\r\n    //     }, 0);\r\n    //   });\r\n  }\r\n}\r\n"]}