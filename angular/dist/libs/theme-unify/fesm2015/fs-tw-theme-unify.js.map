{"version":3,"file":"fs-tw-theme-unify.js","sources":["../../../../libs/theme-unify/src/lib/components/application-layout/application-layout.component.ts","../../../../libs/theme-unify/src/lib/components/account-layout/account-layout.component.ts","../../../../libs/theme-unify/src/lib/components/empty-layout/empty-layout.component.ts","../../../../libs/theme-unify/src/lib/components/footer/footer.component.ts","../../../../libs/theme-unify/src/lib/components/header/header.component.ts","../../../../libs/theme-unify/src/lib/components/banner/banner.component.ts","../../../../libs/theme-unify/src/lib/service/layout-state.service.ts","../../../../libs/theme-unify/src/lib/components/settings/settings.component.ts","../../../../libs/theme-unify/src/lib/components/validation-error/validation-error.component.ts","../../../../libs/theme-unify/src/lib/providers/initial.provider.ts","../../../../libs/theme-unify/src/lib/providers/styles.provider.ts","../../../../libs/theme-unify/src/lib/providers/setting-tab.provider.ts","../../../../libs/theme-unify/src/lib/theme-unify.module.ts","../../../../libs/theme-unify/src/fs-tw-theme-unify.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ApplicationInfo, eLayoutType, EnvironmentService } from '@abp/ng.core';\r\nimport { eThemeUnifyComponents } from '../../enums/components';\r\n\r\n@Component({\r\n  selector: 'fs-application-layout',\r\n  templateUrl: './application-layout.component.html',\r\n  //styleUrls: ['./application-layout.component.less']\r\n})\r\nexport class ApplicationLayoutComponent {\r\n  static type = eLayoutType.application;\r\n\r\n  headerComponentKey = eThemeUnifyComponents.ApplicationLayoutHeader;\r\n  footerComponentKey = eThemeUnifyComponents.ApplicationLayoutFooter;\r\n\r\n  get appInfo(): ApplicationInfo {\r\n    return this.environment.getEnvironment().application;\r\n  }\r\n\r\n  constructor(private environment: EnvironmentService) {}\r\n\r\n}\r\n","import { eLayoutType } from '@abp/ng.core';\r\nimport { slideFromBottom } from '@abp/ng.theme.shared';\r\nimport { AfterViewInit, Component, OnDestroy, Renderer2, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-layout-account',\r\n  templateUrl: './account-layout.component.html',\r\n  animations: [slideFromBottom],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AccountLayoutComponent {\r\n  // required for dynamic component\r\n  static type = eLayoutType.account;\r\n\r\n  isCollapsed: boolean = false;\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { eLayoutType } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'fs-layout-empty',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class EmptyLayoutComponent {\r\n  // required for dynamic component\r\n  static type = eLayoutType.empty;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'fs-footer',\r\n  templateUrl: './footer.component.html',\r\n  //styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  constructor(\r\n    // private themeCoreStateService: ThemeCoreStateService,\r\n    // private themeCoreService: FileService,\r\n  ) { }\r\n\r\n\r\n}\r\n","import { ConfigStateService } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'fs-header',\r\n  templateUrl: './header.component.html',\r\n  //styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n  constructor(\r\n    private titleService: Title,\r\n    private activatedRoute: ActivatedRoute,\r\n    private configStateService: ConfigStateService,\r\n  ) {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fs-banner',\r\n  templateUrl: './banner.component.html',\r\n  //styleUrls: ['./banner.component.less']\r\n})\r\nexport class BannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { StyleContentStrategy, DomInsertionService, DOM_STRATEGY } from '@abp/ng.core'\r\nimport { InternalStore } from '@abp/ng.core'\r\nimport { BehaviorSubject, from, Observable } from 'rxjs';\r\nimport { Layout } from '../models/layout'\r\n//import { TheProjectThemeSettingsService, Settings, UpdateTheProjectThemeSettingsDto } from '@fs/theme.the-project/proxy'\r\nimport { map, take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutStateService {\r\n  private store = new InternalStore({} as Layout.State);\r\n  AppComponent:ElementRef;\r\n\r\n  getThemeSettings() {\r\n    return this.store.state.themeSettings;\r\n  }\r\n\r\n  getThemeSettings$() {\r\n    return this.store.sliceState(state => state.themeSettings);\r\n  }\r\n\r\n  // getSkin() {\r\n  //   return this.store.state.skin;\r\n  // }\r\n\r\n  // getSkin$() {\r\n  //   return this.store.sliceState(state => state.skin);\r\n  // }\r\n\r\n  constructor(\r\n    private domInsertionService: DomInsertionService,\r\n    //private theProjectThemeSettingsService: TheProjectThemeSettingsService,\r\n  ) {\r\n  }\r\n  // setSkin(skin: Settings.TheProjectSkin) {\r\n  //   if (this.store.state.skin === skin) {\r\n  //     return;\r\n  //   }\r\n  //   this.loadSkin(skin)\r\n  //     .pipe(take(1))\r\n  //     .subscribe(element => {\r\n  //       const { skinElement } = this.store.state;\r\n  //       this.removeSkin(skinElement);\r\n  //       this.store.patch({\r\n  //         skin: skin,\r\n  //         skinElement: element,\r\n  //       });\r\n  //     });\r\n  // }\r\n  //fetchThemeSettings() {\r\n    // this.theProjectThemeSettingsService.get().subscribe(themeSettings => {\r\n    //   this.setSkin(themeSettings.skin);\r\n    //   this.store.patch({ themeSettings });\r\n    // });\r\n  //}\r\n  // updateThemeSettings(themeSettings: UpdateTheProjectThemeSettingsDto) {\r\n  //   this.theProjectThemeSettingsService\r\n  //     .updateByInput(themeSettings)\r\n  //     .subscribe(() => this.store.patch({ themeSettings: { skin: themeSettings.skin } }));\r\n  // }\r\n\r\n  // private loadSkin(skin: Settings.TheProjectSkin): Observable<HTMLStyleElement> {\r\n  //   const custom: HTMLLinkElement = document.querySelector('link[href*=custom]');\r\n  //   const domStrategy = DOM_STRATEGY.AppendToHead()\r\n  //     ? DOM_STRATEGY.BeforeElement(custom)\r\n  //     : DOM_STRATEGY.AppendToHead();\r\n\r\n  //   return this.getSkinJs(skin).pipe(\r\n  //     map(content => {\r\n  //       const strategy = new StyleContentStrategy(content, domStrategy);\r\n  //       return this.domInsertionService.insertContent(strategy);\r\n  //     }),\r\n  //   );\r\n  // }\r\n  // private getSkinJs = (skin: Settings.TheProjectSkin): Observable<string> => {\r\n  //   let leptonJs: Promise<{ default: string }>;\r\n  //   switch (skin) {\r\n  //     case Settings.TheProjectSkin.blue:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.blue\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/blue'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.brown:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.brown\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/brown'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.cool_green:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.cool_green\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/cool_green'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.dark_cyan:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.dark_cyan\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/dark_cyan'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.dark_red:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.dark_red\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/dark_red'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.gold:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.gold\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/gold'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.gray:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.gray\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/gray'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.green:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.green\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/green'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.light_blue:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.light_blue\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/light_blue'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.orange:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.orange\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/orange'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.pink:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.pink\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/pink'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.purple:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.purple\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/purple'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.red:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.red\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/red'\r\n  //       );\r\n  //       break;\r\n  //     case Settings.TheProjectSkin.vivid_red:\r\n  //       leptonJs = import(\r\n  //         /* webpackChunkName: \"theme.vivid_red\" */\r\n  //         /* webpackMode: \"lazy\" */\r\n  //         '@fs/theme.the-project/dist/assets/template/css/skins/vivid_red'\r\n  //       );\r\n  //       break;\r\n  //     default:\r\n  //       return;\r\n  //   }\r\n\r\n  //   return from(leptonJs).pipe(map(m => m.default));\r\n  // };\r\n  // private removeSkin(element: HTMLStyleElement) {\r\n  //   if (element) this.domInsertionService.removeContent(element);\r\n  // }\r\n}","import { noop, SubscriptionService } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n//import { TheProjectThemeSettingsService, UpdateTheProjectThemeSettingsDto } from '@fs/theme.the-project/proxy';\r\nimport { filter, finalize, skip, take } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../../service/layout-state.service';\r\nimport { Layout } from '../../models/layout';\r\n\r\n@Component({\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.less']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private toaster: ToasterService,\r\n    private router: Router,\r\n    private subscription: SubscriptionService,\r\n    private layoutStateService: LayoutStateService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.form = this.fb.group({\r\n      skin: []\r\n    });    \r\n   }\r\n  ngOnInit(): void {\r\n    //this.layoutStateService.fetchThemeSettings();\r\n    // this.subscription.addOne(\r\n    //   this.layoutStateService.getThemeSettings$().pipe(filter(Boolean)),\r\n    //   ({ skin }: Layout.ThemeSettings) => {\r\n    //     this.form.patchValue({\r\n    //       skin: skin\r\n    //     });\r\n    //   },\r\n    // );\r\n  }\r\n\r\n  save() {\r\n    // this.loading = true;\r\n    // this.layoutStateService.updateThemeSettings(this.form.value);\r\n    // this.layoutStateService\r\n    //   .getThemeSettings$()\r\n    //   .pipe(\r\n    //     //skip(1),\r\n    //     take(1),\r\n    //     finalize(() => (this.loading = false)),\r\n    //   )\r\n    //   .subscribe(async () => {\r\n    //     const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n\r\n    //     this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    //     this.router.navigated = false;\r\n\r\n    //     await this.router.navigateByUrl(this.router.url).catch(noop);\r\n    //     this.router.routeReuseStrategy.shouldReuseRoute = shouldReuseRoute;\r\n\r\n    //     setTimeout(() => {\r\n    //       this.toaster.success('LeptonThemeManagement::SuccessfullySaved', null);\r\n    //     }, 0);\r\n    //   });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { Validation, ValidationErrorComponent as ErrorComponent } from '@ngx-validate/core';\r\n\r\n@Component({\r\n  selector: 'abp-validation-error',\r\n  template: `\r\n    <span\r\n      class=\"field-validation-error text-danger\"\r\n      data-valmsg-for=\"Role.Name\"\r\n      data-valmsg-replace=\"true\"\r\n      ><span *ngFor=\"let error of abpErrors; trackBy: trackByFn\">\r\n        {{ error.message | abpLocalization: error.interpoliteParams }}</span\r\n      ></span\r\n    >\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [\r\n    `\r\n      .custom-checkbox + * .field-validation-error span,\r\n      ngb-timepicker + * .field-validation-error span {\r\n        background: transparent !important;\r\n        border: 0 !important;\r\n        color: currentColor !important;\r\n        padding: 0 !important;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ValidationErrorComponent extends ErrorComponent {\r\n  get abpErrors(): Validation.Error[] & { interpoliteParams?: string[] } {\r\n    if (!this.errors || !this.errors.length) return [];\r\n\r\n    return this.errors.map(error => {\r\n      if (!error.message) return error;\r\n\r\n      const index = error.message.indexOf('[');\r\n\r\n      if (index > -1) {\r\n        return {\r\n          ...error,\r\n          message: error.message.slice(0, index),\r\n          interpoliteParams: error.message.slice(index + 1, error.message.length - 1).split(','),\r\n        };\r\n      }\r\n\r\n      return error;\r\n    });\r\n  }\r\n}\r\n","import { ApplicationRef, APP_INITIALIZER, ElementRef, Injector } from '@angular/core';\r\nimport { Store, Actions, ofActionDispatched } from '@ngxs/store';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { LayoutStateService } from '../service/layout-state.service';\r\nimport { of } from 'rxjs';\r\nimport { delay, filter } from 'rxjs/operators';\r\n//import { GetTheme, RouterState, UpdateProfile, eThemeNos } from '@fs/theme.core';\r\n\r\n\r\nexport const UNIFY_THEME_INITIAL_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureInitial,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureInitial(injector: Injector) {\r\n  return () => {\r\n    const router = injector.get(Router);\r\n    const layoutStateService = injector.get(LayoutStateService);\r\n    initial(router,layoutStateService);\r\n  };\r\n}\r\n\r\nfunction initial( router: Router, layoutStateService: LayoutStateService) {\r\n  router.events\r\n    .pipe(\r\n      filter(e => e instanceof NavigationEnd),\r\n      delay(0))\r\n    .subscribe(event => {\r\n      console.log('angular-ready');\r\n      layoutStateService.AppComponent.nativeElement.dispatchEvent(new CustomEvent('angular-ready'));\r\n    });\r\n}\r\n","import { ReplaceableComponentsService,ConfigStateService } from '@abp/ng.core';\r\n//import { Settings } from '@fs/theme.the-project/proxy'\r\nimport { APP_INITIALIZER, Injector } from '@angular/core';\r\n//import { eThemeBasicComponents } from '@abp/ng.theme.basic';\r\nimport { ApplicationLayoutComponent } from '../components/application-layout/application-layout.component';\r\nimport { eThemeUnifyComponents } from '../enums/components';\r\nimport { LayoutStateService } from '../service/layout-state.service';\r\n\r\n\r\nexport const UNIFY_THEME_STYLES_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureStyles,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureStyles(injector: Injector) {\r\n  return () => {\r\n    const replaceableComponents = injector.get(ReplaceableComponentsService);\r\n    const layoutService = injector.get(LayoutStateService);\r\n    const configState = injector.get(ConfigStateService);\r\n\r\n\r\n    configState\r\n    .createOnUpdateStream(state => state)\r\n    .subscribe(() => {\r\n      //setSkin(layoutService,configState);\r\n    });\r\n    initLayouts(replaceableComponents);\r\n\r\n  };\r\n}\r\n\r\n\r\nfunction initLayouts(replaceableComponents) {\r\n  replaceableComponents.add({\r\n    key: eThemeUnifyComponents.ApplicationLayout,\r\n    component: ApplicationLayoutComponent,\r\n  });\r\n  replaceableComponents.add({\r\n    key: eThemeUnifyComponents.AccountLayout,\r\n    component: ApplicationLayoutComponent,\r\n  });\r\n  replaceableComponents.add({\r\n    key: eThemeUnifyComponents.EmptyLayout,\r\n    component: ApplicationLayoutComponent,\r\n  });\r\n}\r\n","import { SettingTabsService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { SettingsComponent } from '../components/settings/settings.component';\r\nimport { eUnifyThemeSettingTabNames } from '../enums/setting-tab-names';\r\n\r\nexport const UNIFY_THEME_SETTING_TAB_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureSettingTabs,\r\n    deps: [SettingTabsService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureSettingTabs(settingtabs: SettingTabsService) {\r\n  return () => {\r\n    settingtabs.add([\r\n      {\r\n        name: eUnifyThemeSettingTabNames.UnifyThemeManagement,\r\n        order: 2,\r\n        component: SettingsComponent,\r\n        //requiredPolicy: 'LeptonThemeManagement.Settings',\r\n      },\r\n    ]);\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { UNIFY_THEME_STYLES_PROVIDERS } from './providers/styles.provider';\r\nimport { UNIFY_THEME_INITIAL_PROVIDERS } from './providers/initial.provider';\r\nimport { ApplicationLayoutComponent } from './components/application-layout/application-layout.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { AccountLayoutComponent } from './components/account-layout/account-layout.component';\r\nimport { EmptyLayoutComponent } from './components/empty-layout/empty-layout.component';\r\nimport { BannerComponent } from './components/banner/banner.component';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { ValidationErrorComponent } from './components/validation-error/validation-error.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { UNIFY_THEME_SETTING_TAB_PROVIDERS } from './providers/setting-tab.provider';\r\n\r\nexport const LAYOUTS = [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent];\r\n@NgModule({\r\n  declarations: [\r\n    ...LAYOUTS,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    BannerComponent,\r\n    ValidationErrorComponent,\r\n    SettingsComponent\r\n\r\n  ],\r\n  exports: [\r\n    ...LAYOUTS,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SettingsComponent\r\n  ],\r\n  entryComponents: [\r\n    ...LAYOUTS\r\n  ],\r\n\r\n  imports: [\r\n    CoreModule,\r\n    ThemeSharedModule, \r\n    NgbDropdownModule, \r\n    NgxValidateCoreModule\r\n  ]\r\n})\r\nexport class ThemeUnifyModule {\r\n  static forRoot(): ModuleWithProviders<ThemeUnifyModule> {\r\n    return {\r\n      ngModule: RootUnifyModule,\r\n      providers: [\r\n        UNIFY_THEME_STYLES_PROVIDERS,\r\n        UNIFY_THEME_INITIAL_PROVIDERS,\r\n        UNIFY_THEME_SETTING_TAB_PROVIDERS\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxValidateCoreModule.forRoot({\r\n      targetSelector: '.form-control',\r\n      invalidClasses: 'input-validation-error',\r\n      blueprints: {\r\n        creditCard: 'AbpValidation::ThisFieldIsNotAValidCreditCardNumber.',\r\n        email: 'AbpValidation::ThisFieldIsNotAValidEmailAddress.',\r\n        invalid: 'AbpValidation::ThisFieldIsNotValid.',\r\n        max: 'AbpValidation::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\r\n        maxlength:\r\n          'AbpValidation::ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}[{{ requiredLength }}]',\r\n        min: 'AbpValidation::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\r\n        minlength:\r\n          'AbpValidation::ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}[{{ requiredLength }}]',\r\n        ngbDate: 'AbpValidation::ThisFieldIsNotValid.',\r\n        passwordMismatch: 'AbpIdentity::Volo.Abp.Identity:PasswordConfirmationFailed',\r\n        range: 'AbpValidation::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\r\n        required: 'AbpValidation::ThisFieldIsRequired.',\r\n        url: 'AbpValidation::ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl',\r\n      },\r\n      errorTemplate: ValidationErrorComponent,\r\n    })\r\n  ],\r\n})\r\nexport class RootUnifyModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {UNIFY_THEME_SETTING_TAB_PROVIDERS as ɵa,configureSettingTabs as ɵb} from './lib/providers/setting-tab.provider';"],"names":["ErrorComponent"],"mappings":"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"}