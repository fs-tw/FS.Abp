{"version":3,"file":"blogs-api.service.js","sourceRoot":"","sources":["../../../../../../../../libs/form-management/proxy/src/fs/cms/blogs/blogs-api.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;AAK3C,MAAM,OAAO,eAAe;IAmD1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAlD5C,YAAO,GAAG,SAAS,CAAC;QAEpB,uBAAkB,GAAG,CAAC,UAAyB,EAAE,EAAE,CACjD,IAAI,CAAC,WAAW,CAAC,OAAO,CAA0B;YAChD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,qBAAqB;YAC1B,IAAI,EAAE,UAAU;SACjB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,2BAAsB,GAAG,CAAC,cAAiC,EAAE,EAAE,CAC7D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY;YAClC,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,wBAAwB;YAC7B,MAAM,EAAE,EAAE,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE;SAClC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,wBAAmB,GAAG,CAAC,cAAiC,EAAE,EAAE,CAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAA0B;YAChD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,wBAAwB;YAC7B,MAAM,EAAE,EAAE,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE;SAClC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,yBAAoB,GAAG,CAAC,WAA2B,EAAE,EAAE,CACrD,IAAI,CAAC,WAAW,CAAC,OAAO,CAA0C;YAChE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,qBAAqB;YAC1B,MAAM,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,cAAc,EAAE,WAAW,CAAC,cAAc,EAAE;SAC7K,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,YAAO,GAAG,GAAG,EAAE,CACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAgB;YACtC,MAAM,EAAE,SAAS;YACjB,GAAG,EAAE,gBAAgB;SACtB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,wCAAmC,GAAG,CAAC,cAAiC,EAAE,UAAyB,EAAE,EAAE,CACrG,IAAI,CAAC,WAAW,CAAC,OAAO,CAA0B;YAChD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,wBAAwB;YAC7B,MAAM,EAAE,EAAE,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE;YACjC,IAAI,EAAE,UAAU;SACjB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAEkB,CAAC;;;;YAtDjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW","sourcesContent":["import type { BlogCreateDto, BlogGetListDto, BlogPrimaryKeyDto, BlogUpdateDto, BlogWithDetailsDto, MetaData } from './dtos/models';\nimport { RestService } from '@abp/ng.core';\nimport type { PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogsApiService {\n  apiName = 'Default';\n\n  createByBlogCreate = (BlogCreate: BlogCreateDto) =>\n    this.restService.request<any, BlogWithDetailsDto>({\n      method: 'POST',\n      url: `/api/cms/blogs/blog`,\n      body: BlogCreate,\n    },\n    { apiName: this.apiName });\n\n  deleteByBlogPrimaryKey = (BlogPrimaryKey: BlogPrimaryKeyDto) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/cms/blogs/blog/id`,\n      params: { id: BlogPrimaryKey.id },\n    },\n    { apiName: this.apiName });\n\n  getByBlogPrimaryKey = (BlogPrimaryKey: BlogPrimaryKeyDto) =>\n    this.restService.request<any, BlogWithDetailsDto>({\n      method: 'GET',\n      url: `/api/cms/blogs/blog/id`,\n      params: { id: BlogPrimaryKey.id },\n    },\n    { apiName: this.apiName });\n\n  getListByBlogGetList = (BlogGetList: BlogGetListDto) =>\n    this.restService.request<any, PagedResultDto<BlogWithDetailsDto>>({\n      method: 'GET',\n      url: `/api/cms/blogs/blog`,\n      params: { fields: BlogGetList.fields, value: BlogGetList.value, sorting: BlogGetList.sorting, skipCount: BlogGetList.skipCount, maxResultCount: BlogGetList.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  options = () =>\n    this.restService.request<any, MetaData>({\n      method: 'OPTIONS',\n      url: `/api/cms/blogs`,\n    },\n    { apiName: this.apiName });\n\n  updateByBlogPrimaryKeyAndBlogUpdate = (BlogPrimaryKey: BlogPrimaryKeyDto, BlogUpdate: BlogUpdateDto) =>\n    this.restService.request<any, BlogWithDetailsDto>({\n      method: 'PUT',\n      url: `/api/cms/blogs/blog/id`,\n      params: { id: BlogPrimaryKey.id },\n      body: BlogUpdate,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n"]}