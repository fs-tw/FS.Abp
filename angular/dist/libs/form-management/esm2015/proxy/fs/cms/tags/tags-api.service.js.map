{"version":3,"file":"tags-api.service.js","sourceRoot":"","sources":["../../../../../../../../libs/form-management/proxy/src/fs/cms/tags/tags-api.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;AAK3C,MAAM,OAAO,cAAc;IAmDzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAlD5C,YAAO,GAAG,SAAS,CAAC;QAEpB,sBAAiB,GAAG,CAAC,SAAuB,EAAE,EAAE,CAC9C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAyB;YAC/C,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,mBAAmB;YACxB,IAAI,EAAE,SAAS;SAChB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,0BAAqB,GAAG,CAAC,aAA+B,EAAE,EAAE,CAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY;YAClC,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,sBAAsB;YAC3B,MAAM,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE;SACjC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,uBAAkB,GAAG,CAAC,aAA+B,EAAE,EAAE,CACvD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAyB;YAC/C,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,sBAAsB;YAC3B,MAAM,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE;SACjC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,wBAAmB,GAAG,CAAC,UAAyB,EAAE,EAAE,CAClD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAyC;YAC/D,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,mBAAmB;YACxB,MAAM,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,UAAU,CAAC,cAAc,EAAE;SACxK,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,YAAO,GAAG,GAAG,EAAE,CACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAgB;YACtC,MAAM,EAAE,SAAS;YACjB,GAAG,EAAE,eAAe;SACrB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,sCAAiC,GAAG,CAAC,aAA+B,EAAE,SAAuB,EAAE,EAAE,CAC/F,IAAI,CAAC,WAAW,CAAC,OAAO,CAAyB;YAC/C,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,sBAAsB;YAC3B,MAAM,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE;YAChC,IAAI,EAAE,SAAS;SAChB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAEkB,CAAC;;;;YAtDjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW","sourcesContent":["import type { MetaData, TagCreateDto, TagGetListDto, TagPrimaryKeyDto, TagUpdateDto, TagWithDetailsDto } from './dtos/models';\nimport { RestService } from '@abp/ng.core';\nimport type { PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TagsApiService {\n  apiName = 'Default';\n\n  createByTagCreate = (TagCreate: TagCreateDto) =>\n    this.restService.request<any, TagWithDetailsDto>({\n      method: 'POST',\n      url: `/api/cms/tags/tag`,\n      body: TagCreate,\n    },\n    { apiName: this.apiName });\n\n  deleteByTagPrimaryKey = (TagPrimaryKey: TagPrimaryKeyDto) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/cms/tags/tag/id`,\n      params: { id: TagPrimaryKey.id },\n    },\n    { apiName: this.apiName });\n\n  getByTagPrimaryKey = (TagPrimaryKey: TagPrimaryKeyDto) =>\n    this.restService.request<any, TagWithDetailsDto>({\n      method: 'GET',\n      url: `/api/cms/tags/tag/id`,\n      params: { id: TagPrimaryKey.id },\n    },\n    { apiName: this.apiName });\n\n  getListByTagGetList = (TagGetList: TagGetListDto) =>\n    this.restService.request<any, PagedResultDto<TagWithDetailsDto>>({\n      method: 'GET',\n      url: `/api/cms/tags/tag`,\n      params: { fields: TagGetList.fields, value: TagGetList.value, sorting: TagGetList.sorting, skipCount: TagGetList.skipCount, maxResultCount: TagGetList.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  options = () =>\n    this.restService.request<any, MetaData>({\n      method: 'OPTIONS',\n      url: `/api/cms/tags`,\n    },\n    { apiName: this.apiName });\n\n  updateByTagPrimaryKeyAndTagUpdate = (TagPrimaryKey: TagPrimaryKeyDto, TagUpdate: TagUpdateDto) =>\n    this.restService.request<any, TagWithDetailsDto>({\n      method: 'PUT',\n      url: `/api/cms/tags/tag/id`,\n      params: { id: TagPrimaryKey.id },\n      body: TagUpdate,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n"]}