{"version":3,"file":"banners-api.service.js","sourceRoot":"","sources":["../../../../../../../../libs/form-management/proxy/src/fs/theme/banners/banners-api.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;AAK3C,MAAM,OAAO,iBAAiB;IA0B5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAzB5C,YAAO,GAAG,SAAS,CAAC;QAEpB,qCAAgC,GAAG,CAAC,uBAAmD,EAAE,EAAE,CACzF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAsD;YAC5E,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,sCAAsC;YAC3C,MAAM,EAAE,EAAE,MAAM,EAAE,uBAAuB,CAAC,MAAM,EAAE,KAAK,EAAE,uBAAuB,CAAC,KAAK,EAAE,OAAO,EAAE,uBAAuB,CAAC,OAAO,EAAE,SAAS,EAAE,uBAAuB,CAAC,SAAS,EAAE,cAAc,EAAE,uBAAuB,CAAC,cAAc,EAAE;SACzO,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,2BAAsB,GAAG,CAAC,aAA+B,EAAE,EAAE,CAC3D,IAAI,CAAC,WAAW,CAAC,OAAO,CAA4C;YAClE,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,2BAA2B;YAChC,MAAM,EAAE,EAAE,MAAM,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,aAAa,CAAC,SAAS,EAAE,cAAc,EAAE,aAAa,CAAC,cAAc,EAAE;SACvL,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,YAAO,GAAG,GAAG,EAAE,CACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAgB;YACtC,MAAM,EAAE,SAAS;YACjB,GAAG,EAAE,oBAAoB;SAC1B,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAEkB,CAAC;;;;YA7BjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW","sourcesContent":["import type { BannerDefinitionGetListDto, BannerDefinitionWithDetailsDto, BannerGetListDto, BannerWithDetailsDto, MetaData } from './dtos/models';\nimport { RestService } from '@abp/ng.core';\nimport type { PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BannersApiService {\n  apiName = 'Default';\n\n  getListByBannerDefinitionGetList = (BannerDefinitionGetList: BannerDefinitionGetListDto) =>\n    this.restService.request<any, PagedResultDto<BannerDefinitionWithDetailsDto>>({\n      method: 'GET',\n      url: `/api/theme/banners/banner-definition`,\n      params: { fields: BannerDefinitionGetList.fields, value: BannerDefinitionGetList.value, sorting: BannerDefinitionGetList.sorting, skipCount: BannerDefinitionGetList.skipCount, maxResultCount: BannerDefinitionGetList.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  getListByBannerGetList = (BannerGetList: BannerGetListDto) =>\n    this.restService.request<any, PagedResultDto<BannerWithDetailsDto>>({\n      method: 'GET',\n      url: `/api/theme/banners/banner`,\n      params: { fields: BannerGetList.fields, value: BannerGetList.value, sorting: BannerGetList.sorting, skipCount: BannerGetList.skipCount, maxResultCount: BannerGetList.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  options = () =>\n    this.restService.request<any, MetaData>({\n      method: 'OPTIONS',\n      url: `/api/theme/banners`,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n"]}