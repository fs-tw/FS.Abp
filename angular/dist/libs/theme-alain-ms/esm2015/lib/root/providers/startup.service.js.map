{"version":3,"file":"startup.service.js","sourceRoot":"../../../../libs/theme-alain-ms/src/","sources":["lib/root/providers/startup.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,GAAG,EAAE,MAAM,MAAM,CAAC;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAG5C,OAAO,EAAoB,eAAe,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAEnD,gDAAgD;AAChD,0DAA0D;AAC1D,sDAAsD;AAEtD;;;GAGG;AAEH,MAAM,OAAO,cAAc;IACzB,YACE,OAAsB,EACd,cAA+B;IACvC,kCAAkC;IAC1B,UAAsB,EACJ,GAAQ;IAClC,uDAAuD;IAC/C,QAAsB;QALtB,mBAAc,GAAd,cAAc,CAAiB;QAE/B,eAAU,GAAV,UAAU,CAAY;QACJ,QAAG,GAAH,GAAG,CAAK;QAE1B,aAAQ,GAAR,QAAQ,CAAc;QAE9B,4CAA4C;IAC9C,CAAC;IAED,IAAI;QACF,2BAA2B;QAC3B,kDAAkD;QAClD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;iBACpG,IAAI;YACH,kBAAkB;YAClB,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,EAAE;gBACjC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC,CACH;iBACA,SAAS,CACR,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,EAAE;gBACtB,6BAA6B;gBAC7B,kDAAkD;gBAElD,mBAAmB;gBACnB,MAAM,GAAG,GAAQ,OAAO,CAAC;gBACzB,mBAAmB;gBACnB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,oBAAoB;gBACpB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtC,cAAc;gBACd,gCAAgC;gBAChC,OAAO;gBACP,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC;YACvC,CAAC,EACD,GAAG,EAAE,GAAE,CAAC,EACR,GAAG,EAAE;gBACH,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,aAAa;QACnB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,EAAE,EAAE;YACN,EAAE,CAAC,MAAM,EAAE,CAAC;SACb;IACH,CAAC;;;YAzDF,UAAU;;;YAVF,aAAa;YADK,eAAe;YANjC,UAAU;4CAwBd,MAAM,SAAC,QAAQ;YAlBwB,YAAY;;AAsExD,0BAA0B;AAC1B,oCAAoC;AACpC,MAAM,UAAU,qBAAqB,CAAC,cAA8B;IAClE,OAAO,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AACrC,CAAC;AACD,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,cAAc;IACd;QACE,OAAO,EAAE,eAAe;QACxB,UAAU,EAAE,qBAAqB;QACjC,IAAI,EAAE,CAAC,cAAc,CAAC;QACtB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AACF,aAAa","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_INITIALIZER, Inject, Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ACLService } from '@delon/acl';\nimport { ALAIN_I18N_TOKEN, SettingsService, TitleService } from '@delon/theme';\nimport { NzIconService } from 'ng-zorro-antd/icon';\n\n// import { ICONS } from '../../../style-icons';\n// import { ICONS_AUTO } from '../../../style-icons-auto';\n// import { I18NService } from '../i18n/i18n.service';\n\n/**\n * 用于应用启动时\n * 一般用来获取应用所需要的基础数据等\n */\n@Injectable()\nexport class StartupService {\n  constructor(\n    iconSrv: NzIconService,\n    private settingService: SettingsService,\n    // private aclService: ACLService,\n    private httpClient: HttpClient,\n    @Inject(DOCUMENT) private doc: any,\n    // @Inject(ALAIN_I18N_TOKEN) private i18n: I18NService,\n    private titleSrv: TitleService,\n  ) {\n    // iconSrv.addIcon(...ICONS_AUTO, ...ICONS);\n  }\n\n  load(): Promise<any> {\n    // only works with promises\n    // https://github.com/angular/angular/issues/15088\n    return new Promise((resolve) => {\n      zip(this.httpClient.get(`assets/tmp/i18n/zh-TW.json`), this.httpClient.get(`assets/tmp/app-data.json`))\n        .pipe(\n          // 接收其他拦截器后产生的异常消息\n          catchError(([langData, appData]) => {\n            resolve(null);\n            return [langData, appData];\n          }),\n        )\n        .subscribe(\n          ([langData, appData]) => {\n            // Load general language data\n            //this.i18n.load(this.i18n.currentLang, langData);\n\n            // application data\n            const res: any = appData;\n            // 应用信息：包括站点名、描述、年份\n            this.settingService.setApp(res.app);\n            // 用户信息：包括姓名、头像、邮箱地址\n            this.settingService.setUser(res.user);\n            // ACL：设置权限为全量\n            //this.aclService.setFull(true);\n            // 设置标题\n            this.titleSrv.default = '';\n            this.titleSrv.suffix = 'Ng Alain MS';\n          },\n          () => {},\n          () => {\n            resolve(null);\n            this.removeLoading();\n          },\n        );\n    });\n  }\n\n  private removeLoading(): void {\n    const el = this.doc.querySelector('#j-preloader');\n    if (el) {\n      el.remove();\n    }\n  }\n}\n// #region Startup Service\n// tslint:disable-next-line: typedef\nexport function StartupServiceFactory(startupService: StartupService) {\n  return () => startupService.load();\n}\nexport const APPINIT_PROVIDES = [\n  StartupService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: StartupServiceFactory,\n    deps: [StartupService],\n    multi: true,\n  },\n];\n// #endregion"]}