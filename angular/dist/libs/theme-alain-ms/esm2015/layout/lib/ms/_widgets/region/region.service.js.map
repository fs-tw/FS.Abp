{"version":3,"file":"region.service.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,uCAAuC;AACvC,OAAO,EAAoB,WAAW,EAAE,MAAM,cAAc,CAAC;AAE7D,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;AAerC,MAAM,OAAO,eAAe;IAe1B,YACU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAErB,CAAC;IAfP,IAAY,QAAQ;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAK,CAAC,EAAE,EAAoB,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAE,CAAC;IAChD,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAOO,SAAS;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,IAAW,EAAE,EAAE;YAClB,iCAAiC;YACjC,4DAA4D;YAC5D,0DAA0D;YAC1D,4CAA4C;YAC5C,0DAA0D;YAC1D,iBAAiB;YACjB,kDAAkD;YAClD,oBAAoB;YACpB,MAAM;YACN,uGAAuG;YACvG,cAAc;YACd,UAAU;YACV,oBAAoB;QACtB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IAClD,CAAC;IAED,WAAW,CAAC,IAAkB;QAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;;8EA/CU,eAAe;uDAAf,eAAe,WAAf,eAAe,mBADF,MAAM;uFACnB,eAAe;cAD3B,UAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport interface MSRegionDistrict {\r\n  name?: string;\r\n  list?: MSRegionItem[];\r\n}\r\n\r\nexport interface MSRegionItem {\r\n  id?: string;\r\n  country?: string;\r\n  name?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSRegionService {\r\n  private _data!: MSRegionDistrict[];\r\n\r\n  private get platList(): MSRegionItem[] {\r\n    return this._data.reduce((p, c) => p.concat(c.list!), [] as MSRegionItem[]);\r\n  }\r\n\r\n  get item(): MSRegionItem {\r\n    return this.platList.find((w) => w.selected)!;\r\n  }\r\n\r\n  get list(): MSRegionDistrict[] {\r\n    return this._data;\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<NzSafeAny[]> {\r\n    return this.http.get(`/region`).pipe(\r\n      tap((list: any[]) => {\r\n        //const zone = this.i18nSrv.zone;\r\n        //const key = `${list[0][`${zone}Name`] ? zone : 'cn'}Name`;\r\n        // const res = list.reduce((p: MSRegionDistrict[], c) => {\r\n        //   const districtName = `district_${key}`;\r\n        //   let item = p.find((w) => w.name === c[districtName]);\r\n        //   if (!item) {\r\n        //     item = { name: c[districtName], list: [] };\r\n        //     p.push(item);\r\n        //   }\r\n        //   item.list?.push({ id: c.id, country: c.country, name: c[key], selected: c.id === 'cn-shanghai' });\r\n        //   return p;\r\n        // }, []);\r\n        // this._data = res;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getData(): Observable<NzSafeAny[] | null> {\r\n    return this._data ? of(null) : this.getByHttp();\r\n  }\r\n\r\n  setSelected(item: MSRegionItem): void {\r\n    this.platList.find((w) => w.selected)!.selected = false;\r\n    item.selected = true;\r\n  }\r\n}\r\n"]}