{"version":3,"file":"user.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.ts","../../../../../../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAS,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,uCAAuC;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAiB,MAAM,cAAc,CAAC;;;;;;;;;;;ICL/D,4BAA4D;IAAzD,qLAAqB;IAAoC,YAAyC;;IAAA,iBAAI;;IAA7C,eAAyC;IAAzC,+DAAyC;;;;IAIrG,2BAA2D;IAGzD,+BAAwC;IAEtC,YACF;IAAA,iBAAO;IACP,8BAA+C;IAC7C,8BAA+B;IAC7B,8BAAoB;IAElB,+BAAoB;IAAA,YAA0B;IAAA,iBAAO;IACvD,iBAAM;IAOR,iBAAM;IACN,8BAA+B;IAI7B,6BAAuE;IACrE,yBAA+B;IAAA,aACjC;;IAAA,iBAAI;IACN,iBAAM;IACN,gCAA+B;IAC7B,8BAA8D;IAA3D,kLAAkB;IAAyC,aAAuC;;IAAA,iBAAI;IAC3G,iBAAM;IACR,iBAAM;IAGR,iBAAM;;;IA7BF,eACF;IADE,wDACF;IAK0B,eAA0B;IAA1B,6CAA0B;IAcf,eACjC;IADiC,sFACjC;IAG8D,eAAuC;IAAvC,4DAAuC;;;IA9B7G,2BAAmD;IACjD,uEAkCM;IACR,iBAAM;;;;;IAnCE,eAAmC;IAAnC,qDAAmC,iBAAA;;ADc3C,MAAM,OAAO,eAAe;IAG1B,YACU,WAAwB,EACxB,MAAc,EACd,kBAAsC,EAC9C,GAAoB,EACb,QAAyB;QAJxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QAEvC,aAAQ,GAAR,QAAQ,CAAiB;QAPlC,iBAAY,GAA+B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAS1F,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;;8EApBU,eAAe;oDAAf,eAAe;;;QCnB5B,iHAEc;QAEd,gEAoCM;;;QApCA,eAA6B;QAA7B,6DAA6B;;uFDetB,eAAe;cAV3B,SAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,uBAAuB;gBACpC,IAAI,EAAE;oBACJ,+BAA+B,EAAE,MAAM;oBACvC,6BAA6B,EAAE,MAAM;oBACrC,wBAAwB,EAAE,MAAM;iBACjC;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { UserService } from '@core';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { MSTopbarService } from '../../services/topbar.service';\r\nimport { AuthService } from '@fs-tw/account';\r\nimport { ConfigStateService,CurrentUserDto } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ms-user',\r\n  templateUrl: './user.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__user]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSUserComponent {\r\n  currentUser$: Observable<CurrentUserDto> = this.configStateService.getOne$('currentUser');\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    srv: MSTopbarService,\r\n    public settings: SettingsService\r\n  ) {\r\n  }\r\n\r\n  initLogin() {\r\n    this.authService.initLogin();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/'], { state: { redirectUrl: this.router.url } });\r\n    });\r\n  }\r\n}\r\n","<ng-template #loginBtnTpl>\r\n  <a (click)=\"initLogin()\"  class=\"alain-ms__topbar-item-btn\">{{'AbpAccount::Login' | abpLocalization}}</a>\r\n</ng-template>\r\n\r\n<div *ngIf=\"(currentUser$ | async) as currentUser\">\r\n  <div *ngIf=\"currentUser.isAuthenticated; else loginBtnTpl\">\r\n\r\n\r\n    <span class=\"alain-ms__topbar-item-btn\">\r\n      <!-- <nz-avatar [nzSrc]=\"settings.user.avatar\" nzSize=\"small\"></nz-avatar> -->\r\n      {{ currentUser.userName }}\r\n    </span>\r\n    <div class=\"alain-ms__topbar-dd-menu width-md\">\r\n      <div class=\"alain-ms__user-hd\">\r\n        <div class=\"d-flex\">\r\n          <!-- <nz-avatar [nzSrc]=\"settings.user.avatar\" nzSize=\"small\"></nz-avatar> -->\r\n          <span class=\"ml-md\">{{ currentUser.userName }}</span>\r\n        </div>\r\n        <!-- <div class=\"mt-sm\">\r\n          <ng-container *ngFor=\"let i of mainLinks; let last = last\">\r\n            <a [link-to]=\"i\">{{ i.text }}</a>\r\n            <nz-divider *ngIf=\"!last\" nzType=\"vertical\"></nz-divider>\r\n          </ng-container>\r\n        </div> -->\r\n      </div>\r\n      <div class=\"alain-ms__user-bd\">\r\n        <!-- <a *ngFor=\"let i of subLinks\" [link-to]=\"i\" class=\"alain-ms__user-bd-item\">\r\n          <i nz-icon nzType=\"safety\"></i>{{ i.text }}\r\n        </a> -->\r\n        <a routerLink=\"/account/manage-profile\" class=\"alain-ms__user-bd-item\">\r\n          <i nz-icon nzType=\"safety\"></i>{{ 'AbpAccount::ManageYourProfile' | abpLocalization }}\r\n        </a>\r\n      </div>\r\n      <div class=\"alain-ms__user-fd\">\r\n        <a (click)=\"logout()\" class=\"d-block pt-sm pb-xs text-center\">{{ 'AbpUi::Logout' | abpLocalization }}</a>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n"]}