{"version":3,"file":"user.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAS,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,uCAAuC;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAiB,MAAM,cAAc,CAAC;AAajE,MAAM,OAAO,eAAe;IAG1B,YACU,WAAwB,EACxB,MAAc,EACd,kBAAsC,EAC9C,GAAoB,EACb,QAAyB;QAJxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QAEvC,aAAQ,GAAR,QAAQ,CAAiB;QAPlC,iBAAY,GAA+B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAS1F,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;;;YA9BF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,swDAAoC;gBACpC,IAAI,EAAE;oBACJ,+BAA+B,EAAE,MAAM;oBACvC,6BAA6B,EAAE,MAAM;oBACrC,wBAAwB,EAAE,MAAM;iBACjC;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAbQ,WAAW;YAJX,MAAM;YAKN,kBAAkB;YAFlB,eAAe;YADf,eAAe","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { UserService } from '@core';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { MSTopbarService } from '../../services/topbar.service';\r\nimport { AuthService } from '@fs-tw/account';\r\nimport { ConfigStateService,CurrentUserDto } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ms-user',\r\n  templateUrl: './user.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__user]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSUserComponent {\r\n  currentUser$: Observable<CurrentUserDto> = this.configStateService.getOne$('currentUser');\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    srv: MSTopbarService,\r\n    public settings: SettingsService\r\n  ) {\r\n  }\r\n\r\n  initLogin() {\r\n    this.authService.initLogin();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/'], { state: { redirectUrl: this.router.url } });\r\n    });\r\n  }\r\n}\r\n"]}