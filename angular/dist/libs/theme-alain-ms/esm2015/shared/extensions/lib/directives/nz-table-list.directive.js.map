{"version":3,"file":"nz-table-list.directive.js","sourceRoot":"","sources":["../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/directives/nz-table-list.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { ListService, LocalizationService } from '@abp/ng.core';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NzTableComponent, NzTableQueryParams,NzTbodyComponent } from 'ng-zorro-antd/table';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line\r\n  selector: 'nz-table[list]',\r\n  exportAs: 'nzTableList',\r\n})\r\nexport class NzTableListDirective implements OnChanges, OnDestroy, OnInit {\r\n  private subscription = new Subscription();\r\n  private querySubscription = new Subscription();\r\n  private loadingSubscription = new Subscription();\r\n\r\n  @Input() list: ListService;\r\n\r\n  constructor(\r\n    //private body:NzTbodyComponent,\r\n    private table: NzTableComponent,\r\n    private cdRef: ChangeDetectorRef,\r\n    private localizationService: LocalizationService\r\n  ) {\r\n    this.setInitialValues();\r\n  }\r\n\r\n  private setInitialValues() {\r\n    this.table.nzSize = 'small';\r\n    this.table.nzFrontPagination = false;\r\n    this.table.nzBordered = true;\r\n    this.table.nzShowSizeChanger=true;\r\n  }\r\n\r\n  private subscribeToPage() {\r\n    const sub = this.table.nzQueryParams.subscribe(\r\n      (params: NzTableQueryParams) => {\r\n        var self = this;\r\n        var sort = params.sort\r\n          .filter((x) => !!x.value)\r\n          .map((x) => {\r\n            return { key: x.key, order: x.value === 'ascend' ? 'asc' : 'desc' };\r\n          })[0];\r\n        var sortChanged = isParamsChange();\r\n\r\n        if (!!sort) {\r\n          this.list.sortKey = sort.key;\r\n          this.list.sortOrder = sort.order;\r\n        } else {\r\n          this.list.sortKey = '';\r\n          this.list.sortOrder = '';\r\n        }\r\n        this.list.maxResultCount=params.pageSize;\r\n\r\n        if (sortChanged) {\r\n          this.list.page = 0;\r\n        } else {\r\n          this.list.page = params.pageIndex - 1;\r\n        }\r\n        this.cdRef.detectChanges();\r\n        function isParamsChange() {\r\n          var currentSortKey = `${self.list.sortKey}-${self.list.sortOrder}-${self.list.maxResultCount}`;\r\n          var changeSortKey = `--${params.pageSize}`;\r\n          if (!!sort) {\r\n            changeSortKey = `${sort.key}-${sort.order}-${params.pageSize}`;\r\n          }\r\n          return currentSortKey !== changeSortKey;\r\n        }\r\n      }\r\n    );\r\n    this.subscription.add(sub);\r\n  }\r\n  private subscribeToLoading() {\r\n    if (!this.loadingSubscription.closed)\r\n      this.loadingSubscription.unsubscribe();\r\n\r\n    this.loadingSubscription = this.list.isLoading$.subscribe((x) => {\r\n      this.table.nzLoading = x;\r\n    });\r\n  }\r\n\r\n  private subscribeToQuery() {\r\n    if (!this.querySubscription.closed) this.querySubscription.unsubscribe();\r\n    this.querySubscription = this.list.query$.subscribe((q) => {\r\n      this.table.onPageIndexChange(this.list.page + 1);\r\n      this.table.onPageSizeChange(this.list.maxResultCount);\r\n    });\r\n  }\r\n\r\n  ngOnChanges({ list }: SimpleChanges) {\r\n    //console.log(list.currentValue);\r\n    this.subscribeToQuery();\r\n    if (!list.firstChange) return;\r\n    const { maxResultCount, page } = list.currentValue;\r\n    //this.table.nzPageSize = maxResultCount;\r\n    this.table.onPageSizeChange(maxResultCount);\r\n    this.table.onPageIndexChange(page + 1);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.querySubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeToPage();\r\n    this.subscribeToLoading();\r\n  }\r\n}\r\n"]}