{"version":3,"file":"extensible-table.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/components/extensible-table/extensible-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ListService,\r\n  ConfigStateService,\r\n} from '@abp/ng.core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  LOCALE_ID,\r\n  TemplateRef,\r\n  ContentChild,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ExtensibleTableComponent as AbpExtensibleTableComponent } from '@abp/ng.theme.shared/extensions'\r\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 100;\r\nimport { NzTableRowDetailDirective } from '../../directives/nz-table-row-detail.directive'\r\n\r\n\r\n\r\n\r\n@Component({\r\n  exportAs: 'nzExtensibleTable',\r\n  selector: 'nz-extensible-table',\r\n  styleUrls: ['./extensible-table.component.css'],\r\n  templateUrl: './extensible-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.ant-table-rep]': `responsive`,\r\n  },\r\n})\r\nexport class ExtensibleTableComponent<R = any> extends AbpExtensibleTableComponent<R> implements OnInit {\r\n  @Input()  responsive: boolean = true;\r\n  expandSet = new Set<string>();\r\n  selectId = null;\r\n  onExpandChange(id: string, check: boolean) {\r\n    if (check) {\r\n      this.expandSet.add(id);\r\n    } else this.expandSet.delete(id);\r\n  }\r\n\r\n  protected _actionsText: string;\r\n  @Input()\r\n  set actionsText(value: string) {\r\n    this._actionsText = value;\r\n  }\r\n  get actionsText(): string {\r\n    return this._actionsText ?? (this.actionList.length > 1 ? 'AbpUi::Actions' : '');\r\n  }\r\n\r\n  @ContentChild(NzTableRowDetailDirective) rowDetailTemplate: NzTableRowDetailDirective;\r\n  @Input() data: R[];\r\n  @Input() list: ListService;\r\n  @Input() recordsTotal: number;\r\n  @Input() set actionsColumnWidth(width: number) {\r\n    this._setColumnWidths(width ? Number(width) : undefined);\r\n  }\r\n  @Input() actionsTemplate: TemplateRef<any>;\r\n  @Input() haveRowDetail = false;\r\n  @Input() haveSelect = false;\r\n  @Input() svRowCount = 2;\r\n  @Input() set defaultSelectId(value: string) {\r\n    this.selectId = value;\r\n  }\r\n  @Input() scroll:{\r\n    x?: string | null;\r\n    y?: string | null;\r\n  };\r\n\r\n\r\n\r\n  @Output() select = new EventEmitter<R>();\r\n  constructor(\r\n    @Inject(LOCALE_ID) private _locale: string,\r\n    private _config: ConfigStateService,\r\n    _injector: Injector,\r\n  ) {\r\n    super(_locale, _config, _injector);\r\n    this._setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\r\n  }\r\n  ngOnInit(): void {\r\n    if(this.scroll){\r\n      this.responsive = false;\r\n    }\r\n  }\r\n\r\n  private _setColumnWidths(actionsColumn: number) {\r\n    const widths = [actionsColumn];\r\n    this.propList.forEach(({ value: prop }) => {\r\n      widths.push(prop.columnWidth);\r\n    });\r\n    (this.columnWidths as any) = widths;\r\n  }\r\n\r\n  selected(data: R) {\r\n    if (this.haveSelect) {\r\n      this.selectId = data['id'];\r\n      this.select.emit(data);\r\n    }\r\n  }\r\n}\r\n"]}