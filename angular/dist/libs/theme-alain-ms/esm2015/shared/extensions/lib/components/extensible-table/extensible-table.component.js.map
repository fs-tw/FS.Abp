{"version":3,"file":"extensible-table.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/components/extensible-table/extensible-table.component.ts","../../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/components/extensible-table/extensible-table.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ListService,\r\n  ConfigStateService,\r\n} from '@abp/ng.core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  LOCALE_ID,\r\n  TemplateRef,\r\n  ContentChild,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ExtensibleTableComponent as AbpExtensibleTableComponent } from '@abp/ng.theme.shared/extensions'\r\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 100;\r\nimport { NzTableRowDetailDirective } from '../../directives/nz-table-row-detail.directive'\r\n\r\n\r\n\r\n\r\n@Component({\r\n  exportAs: 'nzExtensibleTable',\r\n  selector: 'nz-extensible-table',\r\n  styleUrls: ['./extensible-table.component.css'],\r\n  templateUrl: './extensible-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.ant-table-rep]': `responsive`,\r\n  },\r\n})\r\nexport class ExtensibleTableComponent<R = any> extends AbpExtensibleTableComponent<R> implements OnInit {\r\n  @Input()  responsive: boolean = true;\r\n  expandSet = new Set<string>();\r\n  selectId = null;\r\n  onExpandChange(id: string, check: boolean) {\r\n    if (check) {\r\n      this.expandSet.add(id);\r\n    } else this.expandSet.delete(id);\r\n  }\r\n\r\n  protected _actionsText: string;\r\n  @Input()\r\n  set actionsText(value: string) {\r\n    this._actionsText = value;\r\n  }\r\n  get actionsText(): string {\r\n    return this._actionsText ?? (this.actionList.length > 1 ? 'AbpUi::Actions' : '');\r\n  }\r\n\r\n  @ContentChild(NzTableRowDetailDirective) rowDetailTemplate: NzTableRowDetailDirective;\r\n  @Input() data: R[];\r\n  @Input() list: ListService;\r\n  @Input() recordsTotal: number;\r\n  @Input() set actionsColumnWidth(width: number) {\r\n    this._setColumnWidths(width ? Number(width) : undefined);\r\n  }\r\n  @Input() actionsTemplate: TemplateRef<any>;\r\n  @Input() haveRowDetail = false;\r\n  @Input() haveSelect = false;\r\n  @Input() svRowCount = 2;\r\n  @Input() set defaultSelectId(value: string) {\r\n    this.selectId = value;\r\n  }\r\n  @Input() scroll:{\r\n    x?: string | null;\r\n    y?: string | null;\r\n  };\r\n\r\n\r\n\r\n  @Output() select = new EventEmitter<R>();\r\n  constructor(\r\n    @Inject(LOCALE_ID) private _locale: string,\r\n    private _config: ConfigStateService,\r\n    _injector: Injector,\r\n  ) {\r\n    super(_locale, _config, _injector);\r\n    this._setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\r\n  }\r\n  ngOnInit(): void {\r\n    if(this.scroll){\r\n      this.responsive = false;\r\n    }\r\n  }\r\n\r\n  private _setColumnWidths(actionsColumn: number) {\r\n    const widths = [actionsColumn];\r\n    this.propList.forEach(({ value: prop }) => {\r\n      widths.push(prop.columnWidth);\r\n    });\r\n    (this.columnWidths as any) = widths;\r\n  }\r\n\r\n  selected(data: R) {\r\n    if (this.haveSelect) {\r\n      this.selectId = data['id'];\r\n      this.select.emit(data);\r\n    }\r\n  }\r\n}\r\n","\r\n  <nz-table [nzData]=\"data\" [nzTotal]=\"recordsTotal\" [list]=\"list\"\r\n    \r\n  [nzScroll]=\"scroll\"  [nzLoading]=\"list.isLoading$ | async\">\r\n    <thead>\r\n      <tr>\r\n        <th [nzWidth]=\"columnWidths[0]+'px'\"></th>\r\n        <th *ngIf=\"haveRowDetail\"></th>\r\n        <ng-container *ngFor=\"let prop of propList; let i = index; trackBy: trackByFn\">\r\n          <th [nzSortFn]=\"prop.sortable\" [nzColumnKey]=\"prop.name\" [nzSortDirections]=\"['ascend', 'descend']\">\r\n            {{ prop.displayName | abpLocalization }}\r\n          </th>\r\n        </ng-container>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <ng-container *ngFor=\"let row of data;let no = index\">\r\n        <tr class=\"bg-white\" [ngClass]=\"{ listSelected: row['id'] == selectId,pointer:haveSelect }\">\r\n          <td>\r\n            <nz-grid-actions [record]=\"row\"></nz-grid-actions>\r\n          </td>\r\n  \r\n          <td *ngIf=\"haveRowDetail\" [nzExpand]=\"expandSet.has(row['id'])\" (nzExpandChange)=\"onExpandChange(row['id'], $event)\"></td>\r\n  \r\n          <ng-container *ngFor=\"let prop of propList; let i = index; trackBy: trackByFn\">\r\n\r\n            <td (click)=\"selected(row)\">\r\n              <span class=\"ant-table-rep__title\" *ngIf=\"!scroll\" >\r\n                {{ prop.displayName | abpLocalization }}\r\n              </span>\r\n              <div  *ngIf=\"row['_' + prop.name].visible\" [innerHTML]=\"row['_' + prop.name].value | async\" (click)=\"\r\n                  prop.action && prop.action({ getInjected: getInjected, record: row, index: i })\r\n                \" [class.pointer]=\"prop.action\"></div>\r\n            </td>\r\n          </ng-container>\r\n        </tr>\r\n  \r\n        <tr [nzExpand]=\"expandSet.has(row['id'])\">\r\n          <ng-container *ngTemplateOutlet=\"nodeTemplate; context: { $implicit: row }\"></ng-container>\r\n        </tr>\r\n  \r\n        <ng-template #nodeTemplate row-detail-template let-node>\r\n          <ng-container *ngTemplateOutlet=\"\r\n              rowDetailTemplate ? rowDetailTemplate?.template : defaultTemplate;\r\n                context: { $implicit: node }\r\n              \"></ng-container>\r\n        </ng-template>\r\n  \r\n        <ng-template #defaultTemplate let-node>\r\n          <sv-container [col]=\"svRowCount\">ã€€\r\n            <ng-container *ngFor=\"let prop of propList; let i = index; trackBy: trackByFn\">            \r\n              <sv *ngIf=\"row['_' + prop.name].visible\" [label]=\"prop.displayName| abpLocalization\"> <span  style=\"color: black\"\r\n                  [innerHTML]=\"row['_' + prop.name].value | async\"></span></sv>\r\n            </ng-container>\r\n          </sv-container>\r\n        </ng-template>\r\n  \r\n  \r\n      </ng-container>\r\n    </tbody>\r\n  </nz-table>\r\n\r\n"]}