{"version":3,"file":"extensible-table.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/components/extensible-table/extensible-table.component.ts","../../../../../../../../../libs/theme-alain-ms/shared/extensions/src/lib/components/extensible-table/extensible-table.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ListService,\r\n  ConfigStateService\r\n} from '@abp/ng.core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  LOCALE_ID,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ExtensibleTableComponent as AbpExtensibleTableComponent} from '@abp/ng.theme.shared/extensions'\r\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 75;\r\n\r\n@Component({\r\n  exportAs: 'nzExtensibleTable',\r\n  selector: 'nz-extensible-table',\r\n  templateUrl: './extensible-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ExtensibleTableComponent<R = any> extends AbpExtensibleTableComponent<R> {\r\n  protected _actionsText: string;\r\n  @Input()\r\n  set actionsText(value: string) {\r\n    this._actionsText = value;\r\n  }\r\n  get actionsText(): string {\r\n    return this._actionsText ?? (this.actionList.length > 1 ? 'AbpUi::Actions' : '');\r\n  }\r\n\r\n  @Input() data: R[];\r\n  @Input() list: ListService;\r\n  @Input() recordsTotal: number;\r\n  @Input() set actionsColumnWidth(width: number) {\r\n    this._setColumnWidths(width ? Number(width) : undefined);\r\n  }\r\n  @Input() actionsTemplate: TemplateRef<any>;\r\n\r\n  constructor(\r\n    @Inject(LOCALE_ID) private _locale: string,\r\n    private _config: ConfigStateService,\r\n    _injector: Injector,\r\n  ) {\r\n    super(_locale,_config,_injector);\r\n    this._setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\r\n  }\r\n\r\n  private _setColumnWidths(actionsColumn: number) {\r\n    const widths = [actionsColumn];\r\n    this.propList.forEach(({ value: prop }) => {\r\n      widths.push(prop.columnWidth);\r\n    });\r\n    (this.columnWidths as any) = widths;\r\n  }\r\n}\r\n","<nz-table [nzData]=\"data\" [nzTotal]=\"recordsTotal\" [list]=\"list\" >\r\n  <thead>\r\n    <tr>\r\n      <th [nzWidth]=\"columnWidths[0]+'px'\"></th>\r\n      <ng-container\r\n        *ngFor=\"let prop of propList; let i = index; trackBy: trackByFn\"\r\n      >\r\n        <th\r\n          [nzSortFn]=\"prop.sortable\"\r\n          [nzColumnKey]=\"prop.name\"\r\n          [nzSortDirections]=\"['ascend', 'descend']\"\r\n        >\r\n          {{ prop.displayName | abpLocalization }}\r\n        </th>\r\n      </ng-container>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let row of data\" class=\"bg-white\">\r\n      <td>\r\n        <nz-grid-actions [record]=\"row\"></nz-grid-actions>\r\n      </td>\r\n      <ng-container\r\n        *ngFor=\"let prop of propList; let i = index; trackBy: trackByFn\"\r\n      >\r\n        <td>\r\n          <div\r\n            *ngIf=\"row['_' + prop.name].visible\"\r\n            [innerHTML]=\"row['_' + prop.name].value | async\"\r\n            (click)=\"\r\n              prop.action && prop.action({ getInjected: getInjected, record: row, index: i })\r\n            \"\r\n            [class.pointer]=\"prop.action\"\r\n          ></div>\r\n        </td>\r\n      </ng-container>\r\n    </tr>\r\n  </tbody>\r\n</nz-table>\r\n"]}