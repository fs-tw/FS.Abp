{"version":3,"sources":["../../../../libs/theme-alain-ms/layout/src/lib/models/layout.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/ms.service.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/langs/langs.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/services/topbar.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/notice/notice.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/search/search.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/services/routes.processor.ts","../../../../libs/theme-alain-ms/layout/src/lib/services/layout-state.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/services/product.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/sidebar/sidebar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/topbar/topbar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/help/help.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/link-to/link-to.directive.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-bar/page-bar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-nav/page-nav.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-single/page-single.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/panel/panel.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/service-layout/service-layout.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/shared.module.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/ms.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/providers/init.provider.ts","../../../../libs/theme-alain-ms/layout/src/lib/layout.module.ts"],"names":["Layout","defaultNavConfig","title","doc","defaultSidebarConfig","hasSidebar","hasAllNav","hasPageNav","hasProductNav","BrandService","bm","settings","_this","this","notify$","BehaviorSubject","_isMobile","topHeight","hideNav","setLayout","Object","assign","layout","hasTopbar","hasFixed","mobileMedia","observe","subscribe","state","checkMedia","matches","isMatched","defineProperty","prototype","asObservable","value","collapsed","next","name","setTopbar","status","setSidebar","setFixed","triggerNotify","type","ngOnDestroy","unsubscribe","Injectable","args","providedIn","BreakpointObserver","SettingsService","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","done","push","error","__spread","concat","MSAllNavService","routesService","localizationPipe","http","arrSrv","_data","nav","filter","w","children","reduce","p","getData","of","getByHttp","fixData","data","splitColumn","item","left","leftColumn","columns","Array","fill","map","_","idx","list","count","forEach","category","sort","a","b","_left","p1","level","p2","parent","tree$","pipe","result","navBottom","bottomText","x","hide","allNav","text","transform","y","_a","z","link","path","refreshActive","visitTree","active","RoutesService","LocalizationPipe","_HttpClient","ArrayService","MSAllNavComponent","srv","brandSrv","cdr","unsubscribe$","Subject","loading","$mouse","open","allL2","allPanel","handleOpen","body","classList","markForCheck","updateHeight","load","res","height","window","innerHeight","dropdownEl","nativeElement","style","_enter","validOpen","_leave","mouseHandle","handleMouse","detectChanges","ngOnInit","takeUntil","auditTime","complete","Component","selector","template","host","[class.alain-ms__an-active]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Inject","DOCUMENT","ViewChild","static","HostListener","MSLangsComponent","configState","sessionState","languages$","getDeep$","languages","lang","snq","find","language","cultureName","selectedLangCulture","displayName","flagIcon","getLanguage","change","setLanguage","[class.alain-ms__topbar-item]","[class.alain-ms__topbar-dd]","ConfigStateService","SessionStateService","MSTopbarService","messagess","getNav","navLinks","get","tap","MSNoticeComponent","router","tokenService","msg","messages","l","messageUrl","id","logout","clear","navigateByUrl","login_url","[class.alain-ms__notice]","Router","DA_SERVICE_TOKEN","NzMessageService","MSRegionService","platList","selected","setSelected","MSRegionComponent","inited","[class.alain-ms__region]","MSSearchComponent","show","q","search$","debounceTime","distinctUntilChanged","switchMap","no","pi","ps","_click","ipt","focus","[class.mr-md]","MSUserComponent","authService","configStateService","currentUser$","getOne$","initLogin","navigate","redirectUrl","url","[class.alain-ms__user]","AuthService","RoutesProcessor","injector","AbpRoutesService","current_url","RouterState","split","decodeURI","formatParams","CurrentUrl","MergeRouteData","prop","defaultValue","targetRoutes","route","CurrentRoute","pushNode","stack","node","pop","hasOwnProperty","visible$","icon","iconClass","products","productId","GetPageNavs","routerState","pageNavs","apply","transMenu","first","recursive","second","root","regexp","match","parameter","substr","itemId","findRouter","params","replace","predicate","routers","acc","LayoutStateService","store","InternalStore","isFetching","categories","navConfig","sidebarConfig","routesProcessor","listenRoutes","getStore$","sliceState","getFetching$","_c","getCategories","getCategories$","getShortcuts","getShortcuts$","getNavConfig","getNavConfig$","getPageNavs$","getPageNavs","setStore","patch","setFetching","setNavConfig","fetchPageNavs","_b","parentName","Category$","Injector","MSProductService","layoutSateService","showAll","keywords","allProduct","hasResult","noResult","recent","search","oldList","deepCopy","includes","MockID","_id","findIndex","MSSidebarComponent","layoutStateService","brand","showProduct","searchCategories","i18n","scroll","searchList","setTimeout","categoryEl","scrollTop","ngAfterViewInit","[class.alain-ms__sidebar]","[class.alain-ms__sidebar-showproduct]","MSTopbarComponent","environment","getEnvironment","application","mergeLinks","links","finance","workorder","support","className","undefined","[class.alain-ms__topbar]","[class.alain-ms__topbar-single]","EnvironmentService","Input","[class.ms-help]","MSLinkToDirective","linkToChanged","EventEmitter","location","href","emit","then","Directive","Output","MSPageBarComponent","menuSrv","_menus","autoTitle","recursiveBreadcrumb","getPathByUrl","setTitle","menus","router$","merge","events","NavigationEnd","notify","[class.ms-page-bar]","MenuService","InputBoolean","MSPageNavComponent","titSrv","_config","val","backHref","titleI18n","docI18n","add","visit","to","preventDefault","toggle","ngOnChanges","TitleService","MSPageSingleComponent","wide","fixed","[class.ms-page-single]","[class.ms-panel]","MSServiceLayoutComponent","navList","hasConsoleCss","COMPONENTS","MSHelpComponent","MSPanelComponent","NgModule","imports","CommonModule","RouterModule","FormsModule","AlainThemeModule","forChild","NzPopoverModule","NzIconModule","NzOutletModule","LocalizationModule","declarations","exports","MSLayoutComponent","mediaMatcher","reuseTabSrv","el","renderer","routerData","snapshot","evt","RouteConfigLoadStart","scrollToTop","NavigationError","nzDuration","exists","query","screen-xs","screen-sm","screen-md","screen-lg","screen-xl","queryCls","keys","matchMedia","setClass","isMobile","querySelector","updateHostClass","setBodyClass","colorWeak","color-weak","remove","MediaMatcher","ActivatedRoute","ReuseTabService","ElementRef","Renderer2","LAYOUT_INIT_PROVIDERS","provide","APP_INITIALIZER","useFactory","init","deps","multi","event","ResolveEnd","listenRouter","MS_WIDGETS","MS_COMPONENTS","MS_SHARED_COMPONENTS","LayoutModule","forRoot","ngModule","providers","CoreModule","DragDropModule","MSSharedModule","NzSpinModule","NzAnchorModule","NzAutocompleteModule","NzAvatarModule","NzDividerModule","NzInputModule","ThemeBtnModule"],"mappings":"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","sourcesContent":["import { TemplateRef } from '@angular/core';\r\nimport { TreeNode } from '@abp/ng.core';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { MenuIcon } from '@delon/theme';\r\nimport { Layout as DelonLayout, Menu as DelonMenu } from '@delon/theme';\r\n\r\nexport namespace Layout {\r\n  export const defaultNavConfig:MSServiceNavConfig = {\r\n    title: '系統管理',\r\n    doc: '系統管理',\r\n  };\r\n\r\n  export const defaultSidebarConfig:SidebarConfig = {\r\n    hasSidebar: true,\r\n    hasAllNav: false,\r\n    hasPageNav: true,\r\n    hasProductNav: false,\r\n  };\r\n  export interface State {\r\n    isFetching: boolean;\r\n\r\n    //hasAllNav: boolean;\r\n    //hasSidebar: boolean;\r\n    categories: MSProductCategory[];\r\n\r\n    navConfig: MSServiceNavConfig;\r\n    sidebarConfig: SidebarConfig;\r\n    //hasPageNav: boolean;\r\n    pageNavs: MSMenu[];\r\n\r\n    //processor?: Processor;\r\n  }\r\n}\r\n\r\nexport interface MSLayout extends DelonLayout {\r\n  /**\r\n   * 是否有顶部\r\n   */\r\n  hasTopbar: boolean;\r\n  /**\r\n   * 是否有侧边栏\r\n   */\r\n  hasSidebar: boolean;\r\n}\r\nexport interface MSProductCategory {\r\n  [key: string]: any;\r\n\r\n  name: string;\r\n\r\n  id?: string;\r\n\r\n  products?: MSProduct[];\r\n}\r\nexport interface MSProduct extends MSLink {\r\n  [key: string]: any;\r\n\r\n  id: string;\r\n\r\n  name: string;\r\n\r\n  icon?: string | MenuIcon;\r\n\r\n  description?: string;\r\n\r\n  shortcut?: boolean;\r\n\r\n  /** Link for current product */\r\n  link?: string;\r\n}\r\nexport interface MSProductI18n {\r\n  [key: string]: any;\r\n  keywords?: string;\r\n  allProduct?: string;\r\n  hasResult?: string;\r\n  noResult?: string;\r\n  text?: string;\r\n  recent?: string;\r\n}\r\n\r\nexport interface MSLink {\r\n  /** 路由或外链地址，若外链务必指定 `target` 值 */\r\n  link?: string;\r\n  /** 指定目标打开方式，都视为外链 */\r\n  target?: '_blank' | '_self' | '_parent' | '_top';\r\n\r\n  text?: string;\r\n}\r\nexport interface SidebarConfig {\r\n  hasAllNav?: boolean;\r\n\r\n  hasSidebar?: boolean;\r\n\r\n  hasPageNav?: boolean;\r\n\r\n  hasProductNav?: boolean;\r\n}\r\nexport interface MSServiceNavConfig {\r\n  /** 服务导航标题 */\r\n  title?: string;\r\n  /** 服务导航标题（i18n） */\r\n  titleI18n?: string;\r\n  /** 次级导航上一级路径，若存在时，导航标题将被忽略为后退图标 */\r\n  backHref?: string;\r\n  /** 文档页面标题 */\r\n  doc?: string;\r\n  /** 文档页面标题（i18n） */\r\n  docI18n?: string;\r\n\r\n  /** PageNav node name set route name then display children node  */\r\n  name?: string;\r\n}\r\n\r\nexport interface MSMenu extends DelonMenu {\r\n  [key: string]: any;\r\n}\r\n\r\n\r\n","import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Layout, SettingsService, _HttpClient } from '@delon/theme';\r\n//import { environment } from '@env/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MSLayout } from '../models/layout';\r\n\r\n/**\r\n * 用于维护布局数据\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class BrandService implements OnDestroy {\r\n  private notify$ = new BehaviorSubject<string | null>(null);\r\n  private _isMobile = false;\r\n\r\n  /** 顶部高度，若变更需要同时重新指定 LESS 变量：`@alain-ms-topbar-height` 值 */\r\n  readonly topHeight = 50;\r\n\r\n  // #region fields\r\n\r\n  get notify(): Observable<string | null> {\r\n    return this.notify$.asObservable();\r\n  }\r\n\r\n  get isMobile(): boolean {\r\n    return this._isMobile;\r\n  }\r\n\r\n  get layout(): MSLayout {\r\n    return this.settings.layout as MSLayout;\r\n  }\r\n\r\n  hideNav = false;\r\n\r\n  // #endregion\r\n\r\n  constructor(bm: BreakpointObserver, private settings: SettingsService) {\r\n    // fix layout data\r\n    settings.setLayout({\r\n      //...(environment as any).ay,\r\n      ...settings.layout,\r\n      hasTopbar: true,\r\n      hasSidebar: false,\r\n      hasFixed: false,\r\n    });\r\n\r\n    const mobileMedia = 'only screen and (max-width: 767.99px)';\r\n    bm.observe(mobileMedia).subscribe((state) => this.checkMedia(state.matches));\r\n    this.checkMedia(bm.isMatched(mobileMedia));\r\n  }\r\n\r\n  private checkMedia(value: boolean): void {\r\n    this._isMobile = value;\r\n    this.layout.collapsed = this._isMobile;\r\n    this.notify$.next('mobile');\r\n  }\r\n\r\n  setLayout(name: string | Layout, value?: any): void {\r\n    this.settings.setLayout(name, value);\r\n    this.notify$.next('layout');\r\n  }\r\n\r\n  setTopbar(status: boolean): void {\r\n    this.setLayout('hasTopbar', status);\r\n  }\r\n\r\n  setSidebar(status: boolean): void {\r\n    this.setLayout('hasSidebar', status);\r\n  }\r\n\r\n  setFixed(status: boolean): void {\r\n    this.setLayout('hasFixed', status);\r\n  }\r\n\r\n  triggerNotify(type: string = 'custom'): void {\r\n    this.notify$.next(type);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ArrayService } from '@delon/util';\r\nimport { MSLink } from '../../../models/layout';\r\nimport { LayoutStateService } from '../../../services/layout-state.service';\r\nimport { RoutesService, LocalizationPipe } from '@abp/ng.core';\r\n\r\nexport interface MSAllNavData {\r\n  nav?: MSAllNav[];\r\n  navBottom?: MSAllNavItem[];\r\n  bottomText?: string;\r\n}\r\n\r\n// tslint:disable-next-line: no-use-before-declare\r\nexport interface MSAllNav extends MSAllNavItem {\r\n  /**\r\n   * 二级菜单\r\n   * - 若指定则 `left`、`right` 失效\r\n   * - 最多只支持一层\r\n   */\r\n  children?: MSAllNav[];\r\n  /**\r\n   * 左边分类\r\n   */\r\n  left?: MSAllNavCategory[];\r\n  /**\r\n   * 左边分类栏数，默认：`4`\r\n   */\r\n  leftColumn?: number;\r\n  /**\r\n   * 分栏后的左边分类，用于渲染\r\n   */\r\n  _left?: MSAllNavCategoryColumn[];\r\n  /**\r\n   * 右边分类\r\n   */\r\n  right?: MSAllNavCategory[];\r\n\r\n  level?: number;\r\n  parent?: MSAllNav;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface MSAllNavCategory {\r\n  text: string;\r\n  list?: MSAllNavItem[];\r\n}\r\n\r\nexport interface MSAllNavCategoryColumn {\r\n  list: MSAllNavCategory[];\r\n  count: number;\r\n  idx: number;\r\n}\r\n\r\nexport interface MSAllNavItem extends MSLink {\r\n  /** 提醒标识，红色字眼，例如：HOT,NEW */\r\n  tip?: string;\r\n}\r\n\r\n/**\r\n * 顶部菜单所有菜单数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/all-nav-en-US.json`\r\n * - 最终处理数据以 `all-nav.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSAllNavService {\r\n  private _data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this._data.nav!.filter((w) => w.children && w.children.length > 0);\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this._data.nav!.reduce(\r\n      (p: MSAllNav[], c: MSAllNav) =>\r\n        (p = p.concat(c.children ? c.children : c)),\r\n      []\r\n    );\r\n  }\r\n\r\n  getData(): Observable<MSAllNavData> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  constructor(\r\n    private routesService: RoutesService,\r\n    private localizationPipe: LocalizationPipe,\r\n    private http: _HttpClient,\r\n    private arrSrv: ArrayService //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n  ) {}\r\n\r\n  private fixData(data: MSAllNavData): MSAllNavData {\r\n    const splitColumn = (item: MSAllNav) => {\r\n      if (!item.left) {\r\n        return;\r\n      }\r\n      item.leftColumn = item.leftColumn || 2;\r\n      const columns: MSAllNavCategoryColumn[] = new Array(item.leftColumn)\r\n        .fill({})\r\n        .map((_, idx) => ({\r\n          list: [],\r\n          count: 0,\r\n          idx,\r\n        }));\r\n      item.left\r\n        .filter((w) => w.list)\r\n        .forEach((category) => {\r\n          const idx = [...columns].sort((a, b) => a.count - b.count)[0].idx;\r\n          columns[idx].list.push(category);\r\n          columns[idx].count += category.list!.length;\r\n        });\r\n      item._left = columns;\r\n    };\r\n    data.nav!.forEach((p1) => {\r\n      p1.level = 1;\r\n      if (p1.children) {\r\n        p1.children.forEach((p2) => {\r\n          p2.parent = p1;\r\n          p2.level = 2;\r\n          splitColumn(p2);\r\n        });\r\n      } else {\r\n        splitColumn(p1);\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n  private getByHttp(): Observable<MSAllNavData> {\r\n    return this.routesService.tree$.pipe(\r\n      map((r) => {\r\n        let result: MSAllNavData = {\r\n          navBottom: [],\r\n          bottomText: 'Further.',\r\n          nav: [],\r\n        };\r\n        result.nav = r\r\n          .filter((x) => !this.routesService.hide(x))\r\n          .map((x) => {\r\n            let allNav = {\r\n              text: this.localizationPipe.transform(x.name),\r\n              left: [],\r\n            };\r\n            x.children\r\n              .filter((y) => !this.routesService.hide(y))\r\n              .forEach((y) => {\r\n                if (y?.children?.length > 0) {\r\n                  allNav.left.push({\r\n                    text: this.localizationPipe.transform(y.name),\r\n                    list: y.children.map((z) => {\r\n                      return {\r\n                        text: this.localizationPipe.transform(z.name),\r\n                        link: z.path,\r\n                      };\r\n                    }),\r\n                  });\r\n                } else {\r\n                  result.navBottom.push({\r\n                    text: this.localizationPipe.transform(y.name),\r\n                    link: y.path,\r\n                  });\r\n                }\r\n              });\r\n            return allNav;\r\n          });\r\n        this._data = this.fixData(result);\r\n        return this._data;\r\n      })\r\n    );\r\n  }\r\n\r\n  refreshActive(i: MSAllNav): void {\r\n    this.arrSrv.visitTree(this._data.nav!, (item: MSAllNav) => {\r\n      item.active = false;\r\n    });\r\n    while (i) {\r\n      i.active = true;\r\n      i = i.parent!;\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { auditTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSAllNav, MSAllNavData, MSAllNavService } from './all-nav.service';\r\n\r\nconst ANT_TIMEOUT = 150;\r\n\r\n/**\r\n * 顶部所有菜单组件，当单页布局模式时渲染\r\n */\r\n@Component({\r\n  selector: 'ms-all-nav',\r\n  templateUrl: './all-nav.component.html',\r\n  host: {\r\n    '[class.alain-ms__an-active]': 'validOpen',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSAllNavComponent implements OnInit, OnDestroy {\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @ViewChild('dropdown', { static: true })\r\n  private dropdownEl!: ElementRef;\r\n  private loading = false;\r\n\r\n  $mouse = new Subject<{ i: MSAllNav; status: boolean }>();\r\n  open = false;\r\n  data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this.srv.allL2;\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this.srv.allPanel;\r\n  }\r\n\r\n  get validOpen(): boolean {\r\n    return this.data && this.open;\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSAllNavService,\r\n    private brandSrv: BrandService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Inject(DOCUMENT) private doc?: any,\r\n  ) {}\r\n\r\n  private handleOpen(status: boolean): void {\r\n    this.doc.body.classList[status ? 'add' : 'remove']('alain-ms__an-body');\r\n    this.open = status;\r\n    this.cdr.markForCheck();\r\n    this.updateHeight().load();\r\n  }\r\n\r\n  private load(): void {\r\n    if (this.loading || this.data) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.srv.getData().subscribe((res) => {\r\n      this.data = res;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private updateHeight(): this {\r\n    const height = window.innerHeight - this.brandSrv.topHeight;\r\n    (this.dropdownEl.nativeElement as HTMLElement).style.height = `${height}px`;\r\n    return this;\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  _enter(): void {\r\n    if (!this.validOpen) {\r\n      this.handleOpen(true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  _leave(): void {\r\n    this.handleOpen(false);\r\n  }\r\n\r\n  mouseHandle(i: MSAllNav, status: boolean): void {\r\n    this.$mouse.next({ i, status });\r\n  }\r\n\r\n  private handleMouse(i: MSAllNav): void {\r\n    this.srv.refreshActive(i);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this._enter();\r\n    const { $mouse, unsubscribe$ } = this;\r\n    $mouse\r\n      .asObservable()\r\n      .pipe(takeUntil(unsubscribe$), auditTime(ANT_TIMEOUT))\r\n      .subscribe((res) => this.handleMouse(res.i));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    const { unsubscribe$ } = this;\r\n    unsubscribe$.next();\r\n    unsubscribe$.complete();\r\n  }\r\n}\r\n","import { ConfigStateService, SessionStateService, ApplicationConfiguration } from '@abp/ng.core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport snq from 'snq';\r\n\r\n@Component({\r\n  selector: 'ms-langs',\r\n  templateUrl: './langs.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSLangsComponent {\r\n\r\n  languages$ = this.configState.getDeep$('localization.languages');\r\n\r\n  get defaultLanguage$(): Observable<{ displayName: string; flagIcon: string }> {\r\n    return this.languages$.pipe(\r\n      map(languages => {\r\n        const lang: Partial<ApplicationConfiguration.Language> = snq(\r\n          () => languages.find(language => language.cultureName === this.selectedLangCulture),\r\n          {} as Partial<ApplicationConfiguration.Language>,\r\n        );\r\n        return {\r\n          displayName: lang.displayName || '',\r\n          flagIcon: lang.flagIcon,\r\n        };\r\n      }),\r\n    );\r\n  }\r\n\r\n  get dropdownLanguages$(): Observable<ApplicationConfiguration.Language[]> {\r\n    return this.languages$.pipe(\r\n      map(\r\n        languages =>\r\n          snq(() => languages.filter(lang => lang.cultureName !== this.selectedLangCulture)),\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n\r\n  get selectedLangCulture(): string {\r\n    return this.sessionState.getLanguage();\r\n  }\r\n\r\n  constructor(\r\n    private configState: ConfigStateService,\r\n    private sessionState: SessionStateService\r\n  ) {\r\n  }\r\n\r\n\r\n  change(cultureName: string): void {\r\n    this.sessionState.setLanguage(cultureName);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MSLink } from '../../models/layout';\r\n\r\nexport interface MSTopbar {\r\n  [key: string]: any;\r\n\r\n  messagess?: MSTopbarMessage[];\r\n\r\n  navLinks?: { [key: string]: MSTopbarNavLink };\r\n}\r\n\r\nexport interface MSTopbarMessage extends MSLink {\r\n  [key: string]: any;\r\n\r\n  className?: string;\r\n\r\n  title?: string;\r\n\r\n  createdTime?: string;\r\n}\r\n\r\nexport interface MSTopbarNavLink extends MSLink {\r\n  [key: string]: any;\r\n\r\n  id?: string;\r\n\r\n  text?: string;\r\n\r\n  className?: string;\r\n  /** 二级菜单，只支持一层 */\r\n  links?: MSTopbarNavLink[];\r\n}\r\n\r\n/**\r\n * 顶部菜单所有数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/topbar-en-US.json`\r\n * - 最终处理数据以 `topbar.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSTopbarService {\r\n  private _data!: MSTopbar;\r\n\r\n  get data(): MSTopbar {\r\n    return this._data;\r\n  }\r\n\r\n  get messages(): MSTopbarMessage[] {\r\n    return this._data.messagess!;\r\n  }\r\n\r\n  getData(): Observable<MSTopbar> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  getNav(key: string): MSTopbarNavLink {\r\n    return this._data.navLinks![key] || {};\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<any> {\r\n    return this.http.get(`./assets/tmp/topbar-zh-TW.json`).pipe(\r\n      tap((res: any) => {\r\n        this._data = res;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { MSTopbarMessage, MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-notice',\r\n  templateUrl: './notice.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__notice]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSNoticeComponent {\r\n  get list(): MSTopbarMessage[] {\r\n    return this.srv.messages.map((i) => {\r\n      i.link = this.l.messageUrl + i.id;\r\n      return i;\r\n    });\r\n  }\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('message');\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    private router: Router,\r\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\r\n    public settings: SettingsService,\r\n    public msg: NzMessageService,\r\n  ) {}\r\n\r\n  logout(): void {\r\n    this.tokenService.clear();\r\n    this.router.navigateByUrl(this.tokenService.login_url!);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport interface MSRegionDistrict {\r\n  name?: string;\r\n  list?: MSRegionItem[];\r\n}\r\n\r\nexport interface MSRegionItem {\r\n  id?: string;\r\n  country?: string;\r\n  name?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSRegionService {\r\n  private _data!: MSRegionDistrict[];\r\n\r\n  private get platList(): MSRegionItem[] {\r\n    return this._data.reduce((p, c) => p.concat(c.list!), [] as MSRegionItem[]);\r\n  }\r\n\r\n  get item(): MSRegionItem {\r\n    return this.platList.find((w) => w.selected)!;\r\n  }\r\n\r\n  get list(): MSRegionDistrict[] {\r\n    return this._data;\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<NzSafeAny[]> {\r\n    return this.http.get(`/region`).pipe(\r\n      tap((list: any[]) => {\r\n        //const zone = this.i18nSrv.zone;\r\n        //const key = `${list[0][`${zone}Name`] ? zone : 'cn'}Name`;\r\n        // const res = list.reduce((p: MSRegionDistrict[], c) => {\r\n        //   const districtName = `district_${key}`;\r\n        //   let item = p.find((w) => w.name === c[districtName]);\r\n        //   if (!item) {\r\n        //     item = { name: c[districtName], list: [] };\r\n        //     p.push(item);\r\n        //   }\r\n        //   item.list?.push({ id: c.id, country: c.country, name: c[key], selected: c.id === 'cn-shanghai' });\r\n        //   return p;\r\n        // }, []);\r\n        // this._data = res;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getData(): Observable<NzSafeAny[] | null> {\r\n    return this._data ? of(null) : this.getByHttp();\r\n  }\r\n\r\n  setSelected(item: MSRegionItem): void {\r\n    this.platList.find((w) => w.selected)!.selected = false;\r\n    item.selected = true;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MSRegionItem, MSRegionService } from './region.service';\r\n\r\n@Component({\r\n  selector: 'ms-region',\r\n  templateUrl: './region.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__region]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSRegionComponent implements OnInit {\r\n  inited = false;\r\n\r\n  constructor(public srv: MSRegionService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  selected(item: MSRegionItem): void {\r\n    this.srv.setSelected(item);\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, OnDestroy, ViewChild } from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-search',\r\n  templateUrl: './search.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.mr-md]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSearchComponent implements OnDestroy {\r\n  @ViewChild('ipt', { static: true }) private ipt!: ElementRef<any>;\r\n  show = false;\r\n  q = '';\r\n  search$ = new Subject<string>();\r\n  list: any[] = [];\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('search');\r\n  }\r\n\r\n  constructor(http: _HttpClient, private srv: MSTopbarService, private cdr: ChangeDetectorRef) {\r\n    this.search$\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        switchMap((q: string) => http.get('/user', { no: q, pi: 1, ps: 5 })),\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.list = res.list;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('click')\r\n  _click(): void {\r\n    this.ipt.nativeElement.focus();\r\n    this.show = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.search$.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { UserService } from '@core';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { MSTopbarService } from '../../services/topbar.service';\r\nimport { AuthService } from '@fs-tw/account';\r\nimport { ConfigStateService,CurrentUserDto } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ms-user',\r\n  templateUrl: './user.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__user]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSUserComponent {\r\n  currentUser$: Observable<CurrentUserDto> = this.configStateService.getOne$('currentUser');\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    srv: MSTopbarService,\r\n    public settings: SettingsService\r\n  ) {\r\n  }\r\n\r\n  initLogin() {\r\n    this.authService.initLogin();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/'], { state: { redirectUrl: this.router.url } });\r\n    });\r\n  }\r\n}\r\n","import {\r\n  RoutesService as AbpRoutesService,\r\n  LocalizationPipe,\r\n  ABP,\r\n  TreeNode,\r\n} from '@abp/ng.core';\r\n\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport {\r\n  MSMenu,\r\n  MSProduct,\r\n  MSProductCategory,\r\n  MSServiceNavConfig,\r\n} from '../models';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\n\r\nexport class RoutesProcessor {\r\n  private get routesService(): AbpRoutesService {\r\n    return this.injector.get(AbpRoutesService);\r\n  }\r\n\r\n  private get localizationPipe(): LocalizationPipe {\r\n    return this.injector.get(LocalizationPipe);\r\n  }\r\n\r\n  public RouterState: RouterStateSnapshot;\r\n\r\n  get CurrentUrl(): string {\r\n    var current_url = this.RouterState.url.split('?')[0];\r\n    return decodeURI(current_url);\r\n  }\r\n\r\n  get CurrentRoute(): TreeNode<ABP.Route> {\r\n    const result = this.routesService.find(\r\n      (x) => this.formatParams(x.path) === this.CurrentUrl\r\n    );\r\n    return result;\r\n  }\r\n\r\n  MergeRouteData(prop: string, defaultValue: any) {\r\n    let result = defaultValue;\r\n\r\n    let targetRoutes = [];\r\n    let route = this.CurrentRoute;\r\n    if (!route) return [];\r\n    pushNode(route);\r\n    while (!!route.parent) {\r\n      route = route.parent;\r\n      pushNode(route);\r\n    }\r\n\r\n    let stack = targetRoutes;\r\n    while (stack.length !== 0) {\r\n      let node = stack.pop();\r\n      result = { ...result, ...node[prop] };\r\n    }\r\n    return result;\r\n\r\n    function pushNode(node) {\r\n      if (!!node && node.hasOwnProperty(prop)) {\r\n        targetRoutes.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  public get Category$(): Observable<MSProductCategory[]> {\r\n    return this.routesService.visible$.pipe(\r\n      map((x) => {\r\n        if (x.length === 0) return;\r\n        return x\r\n          .filter(\r\n            (y) =>\r\n              y.name === eThemeSharedRouteNames.Administration &&\r\n              !this.routesService.hide(y)\r\n          )\r\n          .map((r) => r.children)\r\n          .reduce((a, b) => a.concat(b))\r\n          .map((r) => {\r\n            let category: MSProductCategory = {\r\n              id: r.name,\r\n              name: this.localizationPipe.transform(r.name),\r\n              icon: r.iconClass,\r\n              products: [],\r\n              link: r.path,\r\n            };\r\n\r\n            category.products = r.children\r\n              .filter((c) => !this.routesService.hide(c))\r\n              .map((c) => {\r\n                let product: MSProduct = {\r\n                  productId: c.name,\r\n                  name: this.localizationPipe.transform(c.name),\r\n                  link: c.path,\r\n                  icon: c.iconClass,\r\n                  id: c.name,\r\n                };\r\n                return product;\r\n              });\r\n            return category;\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  public GetPageNavs(\r\n    routerState: RouterStateSnapshot,\r\n    nav: MSServiceNavConfig\r\n  ) {\r\n    if (!this.CurrentRoute) return [];\r\n    let pageNavs: MSMenu[] = [];\r\n    this.RouterState = routerState;\r\n    let target: ABP.Route;\r\n\r\n    target = this.routesService.find((x) => x.name == nav.name);\r\n\r\n    if (!!target) {\r\n      pageNavs.push(...this.transMenu(target));\r\n    }\r\n\r\n    return pageNavs;\r\n  }\r\n\r\n  private transMenu(first: any,recursive:boolean=true) {\r\n    let result = [];\r\n    first.children\r\n      .filter((r) => !this.routesService.hide(r))\r\n      .forEach((second) => {\r\n        let left: MSMenu = {\r\n          text:\r\n            second.displayName || this.localizationPipe.transform(second.name),\r\n          link: this.formatParams(second.path), //(third.url || third.path),\r\n          icon: second.iconClass,\r\n          children: [],\r\n        };\r\n        if (second?.children?.length > 0 && recursive) {\r\n          left.children = this.transMenu(second,false);\r\n        }\r\n        result.push(left);\r\n      });\r\n    return result;\r\n  }\r\n\r\n  public formatParams(\r\n    text: string,\r\n    router: ActivatedRouteSnapshot = this.RouterState.root\r\n  ): string {\r\n    if (!text) return '';\r\n    let regexp = /:([^(:\\/\\-\\ )]+)/g;\r\n    let result = text;\r\n    let match = text.match(regexp);\r\n    if (!!match) {\r\n      text.match(regexp).forEach((i) => {\r\n        let parameter = i.substr(1);\r\n        let itemId = this.findRouter((x) => parameter in x.params, [router])\r\n          ?.params[parameter];\r\n        result = result.replace(':' + parameter, itemId);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private findRouter(\r\n    predicate: (item: ActivatedRouteSnapshot) => boolean,\r\n    routers: ActivatedRouteSnapshot[]\r\n  ): ActivatedRouteSnapshot {\r\n    return routers.reduce(\r\n      (acc, node) =>\r\n        acc\r\n          ? acc\r\n          : predicate(node)\r\n          ? node\r\n          : this.findRouter(predicate, node.children),\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { InternalStore, LocalizationPipe } from '@abp/ng.core';\r\nimport {\r\n  Layout,\r\n  MSProduct,\r\n  MSServiceNavConfig,\r\n  SidebarConfig,\r\n} from '../models';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router, RouterStateSnapshot } from '@angular/router';\r\nimport { RoutesProcessor } from './routes.processor';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\nimport { findRoute, getRoutePath, RoutesService } from '@abp/ng.core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutStateService {\r\n  private store = new InternalStore({\r\n    isFetching: false,\r\n\r\n    categories: [],\r\n\r\n    navConfig: Layout.defaultNavConfig,\r\n    sidebarConfig: Layout.defaultSidebarConfig,\r\n\r\n    pageNavs: [],\r\n  } as Layout.State);\r\n  //private routerState: RouterStateSnapshot;\r\n  ///必須等待Rouer完成後才能使用，需要當前路徑\r\n  public routesProcessor: RoutesProcessor;\r\n\r\n  getStore$() {\r\n    return this.store.sliceState((state) => state);\r\n  }\r\n\r\n  getFetching$() {\r\n    return this.store.sliceState(({ isFetching }) => isFetching);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.store.state.categories;\r\n  }\r\n\r\n  getCategories$() {\r\n    return this.store.sliceState((state) => state.categories);\r\n  }\r\n  getShortcuts() {\r\n    const categories = this.getCategories();\r\n    const result: MSProduct[] = [];\r\n    categories.forEach((p) => {\r\n      result.push(p as any);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getShortcuts$() {\r\n    return this.getCategories$().pipe(\r\n      map((x) => {\r\n        const result: MSProduct[] = [];\r\n        x.forEach((p) => {\r\n          result.push(p as any);\r\n        });\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  getNavConfig() {\r\n    return this.store.state.navConfig;\r\n  }\r\n\r\n  getNavConfig$() {\r\n    return this.store.sliceState((state) => state.navConfig);\r\n  }\r\n\r\n  getPageNavs$() {\r\n    return this.store.sliceState((state) => state.pageNavs);\r\n  }\r\n  getPageNavs() {\r\n    return this.store.state.pageNavs;\r\n  }\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    public localizationPipe: LocalizationPipe\r\n  ) {\r\n    this.routesProcessor = new RoutesProcessor(this.injector);\r\n    this.listenRoutes();\r\n  }\r\n\r\n  setStore(state: Partial<Layout.State>) {\r\n    this.store.patch({ ...state });\r\n  }\r\n\r\n  setFetching(isFetching: boolean) {\r\n    this.store.patch({ isFetching });\r\n  }\r\n\r\n  setNavConfig(navConfig: MSServiceNavConfig) {\r\n    this.store.patch({ navConfig });\r\n    let pageNavs: any;\r\n    if (navConfig.name !== eThemeSharedRouteNames.Administration) {\r\n      pageNavs = this.routesProcessor.GetPageNavs(\r\n        this.routesProcessor.RouterState,\r\n        navConfig\r\n      );\r\n      this.store.state.sidebarConfig.hasPageNav = true;\r\n    } else {\r\n      this.store.state.sidebarConfig.hasPageNav = false;\r\n    }\r\n    this.store.patch({\r\n      pageNavs,\r\n      sidebarConfig: this.store.state.sidebarConfig,\r\n    });\r\n  }\r\n\r\n  fetchPageNavs(routerState: RouterStateSnapshot) {\r\n    this.routesProcessor.RouterState = routerState;\r\n\r\n\r\n    let navConfig: MSServiceNavConfig = this.routesProcessor.MergeRouteData(\r\n      'navConfig',\r\n      {\r\n        ...Layout.defaultNavConfig,\r\n        name: this.routesProcessor.CurrentRoute?.parentName ?? \"\"//eTicketRouteNames.Ticket//\r\n      }\r\n    );\r\n\r\n    let sidebarConfig: SidebarConfig = this.routesProcessor.MergeRouteData(\r\n      'sidebarConfig',\r\n      Layout.defaultSidebarConfig\r\n    );\r\n\r\n    this.setStore({\r\n      sidebarConfig,\r\n    });\r\n\r\n    this.setNavConfig(navConfig);\r\n  }\r\n\r\n  private listenRoutes() {\r\n    this.routesProcessor.Category$.subscribe((categories) => {\r\n      if (!!this.routesProcessor.RouterState) {\r\n        this.fetchPageNavs(this.routesProcessor.RouterState);\r\n      }\r\n\r\n      this.store.patch({\r\n        categories,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, MenuIcon, _HttpClient } from '@delon/theme';\r\nimport { deepCopy } from '@delon/util';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { MSLink } from '../../models/layout';\r\n\r\nimport {\r\n  RoutesService,\r\n  PermissionService,\r\n  LocalizationPipe,\r\n} from '@abp/ng.core';\r\nimport { MSProduct, MSProductCategory, MSProductI18n } from '../../models';\r\nimport { LayoutStateService } from '../../services/layout-state.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSProductService {\r\n  private _data!: MSProductCategory[];\r\n\r\n  get data(): MSProductCategory[] {\r\n    return this._data;\r\n  }\r\n\r\n  get i18n(): MSProductI18n {\r\n    return {\r\n      showAll: true,\r\n      keywords: '請輸入關鍵詞',\r\n      allProduct: '查詢全部産品',\r\n      show: true,\r\n      hasResult: '以下是與“<strong>{filterTxt}</strong>”相關的産品：',\r\n      noResult: '未找到與“<strong>{filterTxt}</strong>”相關的産品。',\r\n      text: '産品與服務',\r\n      recent: '最近訪問',\r\n    };\r\n  }\r\n\r\n  getData(): Observable<MSProductCategory[]> {\r\n    return this.layoutSateService.getCategories$().pipe(\r\n      tap((x) => {\r\n        this._data = x;\r\n      })\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private layoutSateService: LayoutStateService\r\n  ) {}\r\n\r\n  search(\r\n    q: string\r\n  ): { list: MSProductCategory[][]; categories: MSProductCategory[] } {\r\n    const column = 3;\r\n    const list: MSProductCategory[][] = [[], [], []];\r\n\r\n    // Process search key\r\n    let oldList: MSProductCategory[] = deepCopy(this._data);\r\n    if (q) {\r\n      oldList = oldList.map((p) => {\r\n        p.products = p.products?.filter((w) => {\r\n          return w.name.includes(q) || w.id.includes(q);\r\n        });\r\n        return p;\r\n      });\r\n    }\r\n\r\n    // Clean empty children category\r\n    const categories: MSProductCategory[] = [];\r\n    let MockID = 0;\r\n    oldList\r\n      .filter((w) => w.products!.length > 0)\r\n      .forEach((i, idx) => {\r\n        i._id = ++MockID;\r\n        list[idx % column].push(i);\r\n        // Collecting category data\r\n        if (categories.findIndex((w) => w.name === i.name) === -1) {\r\n          categories.push({ _id: i._id, name: i.name });\r\n        }\r\n      });\r\n\r\n    return { list, categories };\r\n  }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Observable } from 'rxjs';\r\nimport { Layout, MSProduct, MSProductCategory, MSProductI18n } from '../../../models';\r\nimport { LayoutStateService } from '../../../services/layout-state.service';\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSProductService } from '../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'ms-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  host: {\r\n    '[class.alain-ms__sidebar]': 'true',\r\n    '[class.alain-ms__sidebar-showproduct]': 'showProduct',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSidebarComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('categoryEl', { static: false })\r\n  private categoryEl!: ElementRef;\r\n\r\n  showProduct = false;\r\n  inited = false;\r\n\r\n  get store$(): Observable<Layout.State> {\r\n    return this.layoutStateService.getStore$();\r\n  }\r\n\r\n  get shortcuts$(): Observable<MSProduct[]> {\r\n    return this.layoutStateService.getShortcuts$();\r\n  }\r\n\r\n  get l(): MSProductI18n {\r\n    return this.srv.i18n;\r\n  }\r\n\r\n  q = '';\r\n  searchList?: MSProductCategory[][];\r\n  searchCategories: MSProductCategory[] = [];\r\n\r\n  constructor(\r\n    private layoutStateService:LayoutStateService,\r\n    private brand: BrandService,\r\n    private srv: MSProductService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    brand.setSidebar(true);\r\n  }\r\n\r\n  search(scroll: boolean = true): void {\r\n    const res = this.srv.search(this.q);\r\n    this.searchList = res.list;\r\n    this.searchCategories = res.categories;\r\n\r\n    this.cdr.detectChanges();\r\n\r\n    if (scroll) {\r\n      // wait angular render\r\n      setTimeout(() => {\r\n        // 滚动至顶部\r\n        this.categoryEl.nativeElement.scrollTop = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.srv.getData().subscribe((x) => {\r\n      this.inited = true;\r\n      this.search();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setSidebar(false);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\n// import { UserService } from '@core';\r\nimport { _HttpClient } from '@delon/theme';\r\n\r\nimport {\r\n  MSTopbarNavLink,\r\n  MSTopbarService,\r\n} from '../../services/topbar.service';\r\nimport { ApplicationInfo, EnvironmentService } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'ms-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar]': 'true',\r\n    '[class.alain-ms__topbar-single]': 'allNav',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSTopbarComponent implements OnInit {\r\n  get appInfo(): ApplicationInfo {\r\n    return this.environment.getEnvironment().application;\r\n  }\r\n  inited = false;\r\n\r\n  links!: MSTopbarNavLink[];\r\n\r\n  @Input() allNav = false;\r\n  userSrv: any;\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    //  public userSrv: UserService,\r\n    private cdr: ChangeDetectorRef,\r\n    private environment: EnvironmentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.mergeLinks();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private mergeLinks(): void {\r\n    const res = this.srv.data.navLinks!;\r\n    this.links = [res.finance, res.workorder, res.support].map((i) => {\r\n      if (i.className == null) {\r\n        i.className = '';\r\n      }\r\n      if (!i.links || i.links.length === 0) {\r\n        i.links = undefined;\r\n      } else {\r\n        i.className += ' alain-ms__topbar-dd';\r\n      }\r\n      return i;\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'help',\r\n  templateUrl: './help.component.html',\r\n  host: {\r\n    '[class.ms-help]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSHelpComponent {}\r\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MSLink } from '../../../models/layout';\r\n\r\n@Directive({ selector: '[link-to]' })\r\nexport class MSLinkToDirective {\r\n  constructor(private router: Router) {}\r\n\r\n  @Input('link-to') i!: MSLink;\r\n\r\n  @Output() linkToChanged = new EventEmitter<MouseEvent>();\r\n\r\n  @HostListener('click', ['$event'])\r\n  _click(e: MouseEvent): void {\r\n    const { link, target } = this.i;\r\n    if (target != null) {\r\n      if (target === '_blank') {\r\n        window.open(link);\r\n      } else {\r\n        window.location.href = link!;\r\n      }\r\n      this.linkToChanged.emit(e);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(link!).then(() => this.linkToChanged.emit(e));\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Menu, MenuService } from '@delon/theme';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-bar',\r\n  templateUrl: './page-bar.component.html',\r\n  host: {\r\n    '[class.ms-page-bar]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageBarComponent implements AfterViewInit, OnDestroy {\r\n  private router$!: Subscription;\r\n  private _menus: Menu[] | null = null;\r\n  private get menus(): Menu[] {\r\n    if (this._menus) {\r\n      return this._menus;\r\n    }\r\n    this._menus = this.menuSrv.getPathByUrl(this.router.url.split('?')[0], this.recursiveBreadcrumb);\r\n\r\n    return this._menus;\r\n  }\r\n\r\n  // #region fields\r\n\r\n  /**\r\n   * 自动生成标题，以当前路由从主菜单中定位\r\n   */\r\n  @Input() @InputBoolean() autoTitle = true;\r\n  @Input() @InputBoolean() recursiveBreadcrumb = true;\r\n  @Input() title?: string; //| TemplateRef<any>;\r\n  @Input() subTitle?: string; //| TemplateRef<any>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private router: Router, private srv: BrandService, private menuSrv: MenuService, private cdr: ChangeDetectorRef) {}\r\n\r\n  private setTitle(): void {\r\n    if (typeof this.title === 'undefined' && this.autoTitle && this.menus.length > 0) {\r\n      const item = this.menus[this.menus.length - 1];\r\n      this.title = item.text;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router$ = merge(\r\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd)),\r\n      this.srv.notify,\r\n      this.menuSrv.change,\r\n    ).subscribe(() => {\r\n      this._menus = null;\r\n      this.setTitle();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.router$.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, OnChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ALAIN_I18N_TOKEN, MenuService, TitleService } from '@delon/theme';\r\n\r\n// import { I18NService } from '@core';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from '../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-nav',\r\n  templateUrl: './page-nav.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageNavComponent implements OnChanges {\r\n  private _config: MSServiceNavConfig = {};\r\n  @Input()\r\n  set config(val: MSServiceNavConfig) {\r\n    const { title, titleI18n, backHref, doc, docI18n } = val;\r\n    // this.titSrv.setTitle(docI18n ? this.i18n.fanyi(docI18n) : doc);\r\n    // this._config.title = titleI18n ? this.i18n.fanyi(titleI18n) : title;\r\n    this._config.title=title;\r\n    this._config.backHref = backHref || '';\r\n  }\r\n  get config(): MSServiceNavConfig {\r\n    return this._config;\r\n  }\r\n\r\n  private _menus: MSMenu[] = [];\r\n  @Input()\r\n  set list(list: MSMenu[]) {\r\n    this.menuSrv.add(list);\r\n    this.menuSrv.visit(list, (i) => (i.active = true));\r\n    this._menus = this.menuSrv.menus;\r\n  }\r\n  get list(): MSMenu[] {\r\n    return this._menus;\r\n  }\r\n\r\n  constructor(\r\n    private srv: BrandService,\r\n    private router: Router,\r\n    private titSrv: TitleService,\r\n    private menuSrv: MenuService,\r\n    //@Inject(ALAIN_I18N_TOKEN) private i18n: I18NService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  to(url: string, e: MouseEvent): void {\r\n    e.preventDefault();\r\n    if (!url) {\r\n      return;\r\n    }\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  toggle(): void {\r\n    this.srv.hideNav = !this.srv.hideNav;\r\n    this.srv.triggerNotify('page-nav');\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-single',\r\n  templateUrl: './page-single.component.html',\r\n  host: {\r\n    '[class.ms-page-single]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageSingleComponent implements OnInit, OnChanges, OnDestroy {\r\n  // #region fileds\r\n\r\n  @Input() @InputBoolean() wide = true;\r\n  @Input() @InputBoolean() fixed = false;\r\n  @Input() title?: string | TemplateRef<void>;\r\n  @Input() subTitle?: string | TemplateRef<void>;\r\n  @Input() extra?: string | TemplateRef<void>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private brand: BrandService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {\r\n    this.brand.setFixed(this.fixed);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setFixed(false);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  host: {\r\n    '[class.ms-panel]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPanelComponent {\r\n  // #region fields\r\n\r\n  @Input() title?: string | TemplateRef<any>;\r\n  @Input() extra?: string | TemplateRef<any>;\r\n\r\n  // #endregion\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from './../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'service-layout',\r\n  templateUrl: './service-layout.component.html',\r\n})\r\nexport class MSServiceLayoutComponent {\r\n  @Input() @InputBoolean() nav = false;\r\n  @Input() navConfig: MSServiceNavConfig = {};\r\n  @Input() navList: MSMenu[] = [];\r\n  @Input() hasConsoleCss:boolean = true;\r\n\r\n  get hideNav(): boolean {\r\n    return this.srv.hideNav;\r\n  }\r\n\r\n  constructor(private srv: BrandService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AlainThemeModule } from '@delon/theme';\r\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\nimport { MSHelpComponent } from './help/help.component';\r\nimport { MSLinkToDirective } from './link-to/link-to.directive';\r\nimport { MSPageBarComponent } from './page-bar/page-bar.component';\r\nimport { MSPageNavComponent } from './page-nav/page-nav.component';\r\nimport { MSPageSingleComponent } from './page-single/page-single.component';\r\nimport { MSPanelComponent } from './panel/panel.component';\r\nimport { MSServiceLayoutComponent } from './service-layout/service-layout.component';\r\nimport { LocalizationModule } from '@abp/ng.core';\r\n\r\nconst COMPONENTS = [\r\n  MSHelpComponent,\r\n  MSLinkToDirective,\r\n  MSPageBarComponent,\r\n  MSPageNavComponent,\r\n  MSPageSingleComponent,\r\n  MSPanelComponent,\r\n  MSServiceLayoutComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, FormsModule, AlainThemeModule.forChild(), NzPopoverModule, NzIconModule, NzOutletModule, LocalizationModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class MSSharedModule {}\r\n","import { BreakpointObserver, MediaMatcher } from '@angular/cdk/layout';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Component, ElementRef, Inject, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationError, RouteConfigLoadStart, Router } from '@angular/router';\r\nimport { ReuseTabService } from '@delon/abc/reuse-tab';\r\nimport { updateHostClass } from '@delon/util';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BrandService } from './ms.service';\r\n\r\n@Component({\r\n  selector: 'layout-ms',\r\n  templateUrl: './ms.component.html',\r\n})\r\nexport class MSLayoutComponent implements OnInit, OnDestroy {\r\n  private notify$!: Subscription;\r\n  private queryCls?: string;\r\n  isFetching = false;\r\n  // 是否单页，单页不显示侧边栏\r\n  hasAllNav = false;\r\n  hasSidebar = true;\r\n\r\n  get isMobile(): boolean {\r\n    return this.srv.isMobile;\r\n  }\r\n\r\n  private get body(): HTMLElement {\r\n    return this.doc.body;\r\n  }\r\n\r\n  constructor(\r\n    bm: BreakpointObserver,\r\n    mediaMatcher: MediaMatcher,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    msg: NzMessageService,\r\n    reuseTabSrv: ReuseTabService,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private srv: BrandService,\r\n    @Inject(DOCUMENT) private doc: any,\r\n  ) {\r\n    const routerData = {\r\n      hasAllNav: false,\r\n      hasSidebar: true,\r\n      ...route.snapshot.data,\r\n    };\r\n    this.hasAllNav = routerData.hasAllNav === true;\r\n    this.hasSidebar = routerData.hasSidebar === true;\r\n\r\n    // scroll to top in change page\r\n    router.events.subscribe((evt) => {\r\n      if (!this.isFetching && evt instanceof RouteConfigLoadStart) {\r\n        this.isFetching = true;\r\n        this.scrollToTop();\r\n      }\r\n      if (evt instanceof NavigationError) {\r\n        this.isFetching = false;\r\n        msg.error(`无法加载${evt.url}路由`, { nzDuration: 1000 * 3 });\r\n        return;\r\n      }\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n\r\n      this.isFetching = false;\r\n      // If have already cached router, should be don't need scroll to top\r\n      if (reuseTabSrv.exists(evt.url)) {\r\n        return;\r\n      }\r\n\r\n      this.scrollToTop();\r\n    });\r\n\r\n    // media\r\n    const query: { [key: string]: string } = {\r\n      'screen-xs': '(max-width: 575px)',\r\n      'screen-sm': '(min-width: 576px) and (max-width: 767px)',\r\n      'screen-md': '(min-width: 768px) and (max-width: 991px)',\r\n      'screen-lg': '(min-width: 992px) and (max-width: 1199px)',\r\n      'screen-xl': '(min-width: 1200px)',\r\n    };\r\n    bm.observe([\r\n      '(min-width: 1200px)',\r\n      '(min-width: 992px) and (max-width: 1199px)',\r\n      '(min-width: 768px) and (max-width: 991px)',\r\n      '(min-width: 576px) and (max-width: 767px)',\r\n      '(max-width: 575px)',\r\n    ]).subscribe(() => {\r\n      this.queryCls = Object.keys(query).find((key) => mediaMatcher.matchMedia(query[key]).matches);\r\n      this.setClass();\r\n    });\r\n  }\r\n\r\n  private scrollToTop(): void {\r\n    const el: HTMLElement = this.doc.querySelector('.alain-ms__product-body');\r\n    if (!el) {\r\n      return;\r\n    }\r\n    el.scrollTop = 0;\r\n  }\r\n\r\n  private setClass(): void {\r\n    const { el, renderer, queryCls } = this;\r\n    updateHostClass(\r\n      el.nativeElement,\r\n      renderer,\r\n      {\r\n        ['alain-ms']: true,\r\n        [queryCls!]: true,\r\n      },\r\n      true,\r\n    );\r\n  }\r\n\r\n  private setBodyClass(): void {\r\n    const { hasTopbar, hasSidebar, hasFixed, colorWeak } = this.srv.layout;\r\n    updateHostClass(this.body, this.renderer, {\r\n      'color-weak': colorWeak,\r\n      ['alain-ms__has-topbar']: hasTopbar,\r\n      ['alain-ms__has-sidebar']: hasSidebar,\r\n      ['alain-ms__has-fixed']: hasFixed,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notify$ = this.srv.notify.subscribe(() => {\r\n      this.setClass();\r\n      this.setBodyClass();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n    this.body.classList.remove('alain-ms__has-topbar', 'alain-ms__has-sidebar', 'alain-ms__has-fixed');\r\n  }\r\n}\r\n","import {\r\n  RoutesService,\r\n  LocalizationPipe,\r\n  PermissionService,\r\n} from '@abp/ng.core';\r\nimport { APP_INITIALIZER, inject, Injector } from '@angular/core';\r\nimport {\r\n  ResolveEnd,\r\n  Router\r\n} from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../services/layout-state.service';\r\n\r\nexport const LAYOUT_INIT_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: init,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function init(injector: Injector) {\r\n  return () => {\r\n    listenRouter(injector);\r\n  };\r\n}\r\n\r\nexport function listenRouter(injector: Injector) {\r\n  const router = injector.get(Router);\r\n  const layoutStateService = injector.get(LayoutStateService);\r\n\r\n  router.events\r\n    .pipe(filter((event): event is ResolveEnd => event instanceof ResolveEnd))\r\n    .subscribe((event) => {\r\n      //const currentUrl = decodeURI(event.state.url.split('?')[0]);\r\n      //layoutStateService.setStore({ currentUrl });\r\n      layoutStateService.fetchPageNavs(event.state);\r\n\r\n    });\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { Inject, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n// import { I18NService } from '@core';\r\nimport { AlainThemeModule, ALAIN_I18N_TOKEN } from '@delon/theme';\r\nimport { ThemeBtnModule } from '@delon/theme/theme-btn';\r\nimport { NzAnchorModule } from 'ng-zorro-antd/anchor';\r\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\n//import { MS_COMPONENTS, MS_SHARED_COMPONENTS } from './ms/index';\r\nimport { MSSharedModule } from './ms/shared/shared.module';\r\nimport { LAYOUT_INIT_PROVIDERS } from './providers/init.provider';\r\nimport { MSAllNavComponent } from './ms/_widgets/all-nav/all-nav.component';\r\nimport { MSSearchComponent } from './ms/_widgets/search/search.component';\r\nimport { MSLangsComponent } from './ms/_widgets/langs/langs.component';\r\nimport { MSUserComponent } from './ms/_widgets/user/user.component';\r\nimport { MSNoticeComponent } from './ms/_widgets/notice/notice.component';\r\nimport { MSRegionComponent } from './ms/_widgets/region/region.component';\r\nimport { MSLayoutComponent } from './ms/ms.component';\r\nimport { MSSidebarComponent } from './ms/components/sidebar/sidebar.component';\r\nimport { MSTopbarComponent } from './ms/components/topbar/topbar.component';\r\nimport { MSHelpComponent } from './ms/shared/help/help.component';\r\nimport { MSPageNavComponent } from './ms/shared/page-nav/page-nav.component';\r\nimport { MSPageBarComponent } from './ms/shared/page-bar/page-bar.component';\r\nimport { MSPageSingleComponent } from './ms/shared/page-single/page-single.component';\r\nimport { MSPanelComponent } from './ms/shared/panel/panel.component';\r\nimport { MSServiceLayoutComponent } from './ms/shared/service-layout/service-layout.component';\r\nimport { MSLinkToDirective } from './ms/shared/link-to/link-to.directive';\r\n// import { default as en_US } from './ms/_i18n/en-US';\r\n// import { default as zh_CN } from './ms/_i18n/zh-CN';\r\n// import { default as zh_TW } from './ms/_i18n/zh-TW';\r\n\r\n\r\nexport const MS_WIDGETS = [MSAllNavComponent, MSSearchComponent, MSLangsComponent, MSUserComponent, MSNoticeComponent, MSRegionComponent];\r\nexport const MS_COMPONENTS = [MSLayoutComponent, MSSidebarComponent, MSTopbarComponent, ...MS_WIDGETS];\r\nexport const MS_SHARED_COMPONENTS = [\r\n  MSHelpComponent,\r\n  MSPageNavComponent,\r\n  MSPageBarComponent,\r\n  MSPageSingleComponent,\r\n  MSPanelComponent,\r\n  MSServiceLayoutComponent,\r\n  MSLinkToDirective,\r\n];\r\n//const MS_COMPONENTS=[]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    DragDropModule,\r\n    MSSharedModule,\r\n    NzSpinModule,\r\n    NzAnchorModule,\r\n    NzAutocompleteModule,\r\n    NzAvatarModule,\r\n    NzDividerModule,\r\n    NzInputModule,\r\n    NzIconModule,\r\n    AlainThemeModule.forChild(),\r\n    ThemeBtnModule,\r\n  ],\r\n  declarations: [...MS_COMPONENTS],\r\n  exports: [...MS_COMPONENTS,MS_SHARED_COMPONENTS]\r\n})\r\nexport class LayoutModule {\r\n  static forRoot(): ModuleWithProviders<LayoutModule> {\r\n    return {\r\n      ngModule: LayoutModule,\r\n      providers: [\r\n        LAYOUT_INIT_PROVIDERS\r\n        //LAYOUT_MENU_PROVIDERS\r\n      ]\r\n    };\r\n  }\r\n  constructor(\r\n    //@Inject(ALAIN_I18N_TOKEN) i18n: I18NService\r\n    ) {\r\n    // i18n.load('zh-CN', zh_CN);\r\n    // i18n.load('zh-TW', zh_TW);\r\n    // i18n.load('en-US', en_US);\r\n  }\r\n}\r\n"]}