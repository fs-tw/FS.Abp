{"version":3,"sources":["../../../../libs/theme-alain-ms/layout/src/lib/models/layout.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/ms.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/link-to/link-to.directive.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/all-nav/all-nav.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/langs/langs.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/langs/langs.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/services/topbar.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/notice/notice.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/notice/notice.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/region/region.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/search/search.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/search/search.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/_widgets/user/user.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/services/routes.processor.ts","../../../../libs/theme-alain-ms/layout/src/lib/services/layout-state.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/services/product.service.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/sidebar/sidebar.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/sidebar/sidebar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/topbar/topbar.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/components/topbar/topbar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/help/help.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/help/help.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-bar/page-bar.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-bar/page-bar.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-nav/page-nav.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-nav/page-nav.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-single/page-single.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/page-single/page-single.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/panel/panel.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/panel/panel.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/service-layout/service-layout.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/service-layout/service-layout.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/shared/shared.module.ts","../../../../libs/theme-alain-ms/layout/src/lib/ms/ms.component.html","../../../../libs/theme-alain-ms/layout/src/lib/ms/ms.component.ts","../../../../libs/theme-alain-ms/layout/src/lib/providers/init.provider.ts","../../../../libs/theme-alain-ms/layout/src/lib/layout.module.ts"],"names":["Layout","defaultNavConfig","title","doc","defaultSidebarConfig","hasSidebar","hasAllNav","hasPageNav","hasProductNav","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","MSAllNavService","routesService","localizationPipe","http","arrSrv","this","prototype","_data","nav","filter","w","children","reduce","p","getData","of","getByHttp","fixData","data","splitColumn","item","left","leftColumn","columns","Array","fill","map","_","idx","list","count","forEach","category","sort","a","b","_left","p1","level","p2","parent","_this","tree$","pipe","result","navBottom","bottomText","x","hide","allNav","text","transform","name","y","_a","z","link","path","refreshActive","visitTree","active","i0","ɵɵinject","i1","RoutesService","LocalizationPipe","i3","_HttpClient","i3$1","ArrayService","factory","ɵfac","providedIn","Injectable","BrandService","bm","settings","notify$","BehaviorSubject","_isMobile","topHeight","hideNav","setLayout","assign","layout","hasTopbar","hasFixed","mobileMedia","observe","subscribe","state","checkMedia","matches","isMatched","asObservable","collapsed","setTopbar","status","setSidebar","setFixed","triggerNotify","type","ngOnDestroy","unsubscribe","i1$1","BreakpointObserver","SettingsService","MSLinkToDirective","router","linkToChanged","EventEmitter","_click","window","open","location","href","emit","setTimeout","navigateByUrl","then","ɵɵdirectiveInject","i2","Router","selectors","hostBindings","rf","ctx","$event","Directive","selector","Input","Output","HostListener","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵtextInterpolate","ɵɵpureFunction1","_c3","p_r30","col_r36","i_r32","right","i0.ɵɵclassMapInterpolate2","ctx_r6","MSAllNavComponent","srv","brandSrv","cdr","unsubscribe$","Subject","loading","$mouse","allL2","allPanel","handleOpen","body","classList","markForCheck","updateHeight","load","res","height","innerHeight","dropdownEl","nativeElement","style","_enter","validOpen","_leave","mouseHandle","handleMouse","detectChanges","ngOnInit","takeUntil","auditTime","complete","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","ChangeDetectorRef","DOCUMENT","viewQuery","Component","templateUrl","host","[class.alain-ms__an-active]","changeDetection","ChangeDetectionStrategy","OnPush","Inject","ViewChild","static","MSLangsComponent","configState","sessionState","languages$","getDeep$","languages","lang","snq","find","language","cultureName","selectedLangCulture","displayName","flagIcon","getLanguage","change","setLanguage","ConfigStateService","SessionStateService","hostVars","[class.alain-ms__topbar-item]","[class.alain-ms__topbar-dd]","MSTopbarService","messagess","getNav","navLinks","get","tap","MSNoticeComponent","tokenService","msg","messages","l","messageUrl","id","logout","clear","login_url","DA_SERVICE_TOKEN","i4$1","NzMessageService","[class.alain-ms__notice]","MSRegionService","platList","selected","setSelected","i0.ɵɵclassMapInterpolate1","MSRegionComponent","inited","[class.alain-ms__region]","MSSearchComponent","show","q","search$","debounceTime","distinctUntilChanged","switchMap","no","pi","ps","ipt","focus","_r0","i0.ɵɵpropertyInterpolate","_r1","[class.mr-md]","MSUserComponent","authService","configStateService","currentUser$","getOne$","initLogin","navigate","redirectUrl","url","i1$2","AuthService","[class.alain-ms__user]","RoutesProcessor","injector","AbpRoutesService","current_url","RouterState","split","decodeURI","formatParams","CurrentUrl","MergeRouteData","prop","defaultValue","targetRoutes","route","CurrentRoute","pushNode","stack","node","pop","hasOwnProperty","visible$","icon","iconClass","products","productId","GetPageNavs","routerState","pageNavs","apply","transMenu","first","recursive","second","root","regexp","match","parameter","substr","itemId","findRouter","params","replace","predicate","routers","acc","LayoutStateService","store","InternalStore","isFetching","categories","navConfig","sidebarConfig","routesProcessor","listenRoutes","getStore$","sliceState","getFetching$","_c","getCategories","getCategories$","getShortcuts","getShortcuts$","getNavConfig","getNavConfig$","getPageNavs$","getPageNavs","setStore","patch","setFetching","setNavConfig","fetchPageNavs","_b","parentName","Category$","Injector","MSProductService","layoutSateService","showAll","keywords","allProduct","hasResult","noResult","recent","search","oldList","deepCopy","includes","MockID","_id","findIndex","i0.ɵɵpropertyInterpolate1","MSSidebarComponent","layoutStateService","brand","showProduct","searchCategories","i18n","scroll","searchList","categoryEl","scrollTop","ngAfterViewInit","[class.alain-ms__sidebar]","[class.alain-ms__sidebar-showproduct]","MSTopbarComponent","environment","getEnvironment","application","mergeLinks","links","finance","workorder","support","className","undefined","EnvironmentService","[class.alain-ms__topbar]","[class.alain-ms__topbar-single]","MSHelpComponent","[class.ms-help]","MSPageBarComponent","menuSrv","_menus","autoTitle","recursiveBreadcrumb","getPathByUrl","setTitle","menus","router$","merge","events","NavigationEnd","notify","i_r7","i0.ɵɵelementContainer","MenuService","i0.ɵɵprojection","InputBoolean","[class.ms-page-bar]","subTitle","ɵɵpureFunction2","_c1$3","level_r5","MSPageNavComponent","titSrv","_config","val","backHref","titleI18n","docI18n","add","visit","to","preventDefault","toggle","ngOnChanges","TitleService","inputs","config","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","ɵɵpipeBind1","_c3$1","MSPageSingleComponent","wide","fixed","[class.ms-page-single]","extra","ctx_r0","navList","MSPanelComponent","[class.ms-panel]","MSServiceLayoutComponent","hasConsoleCss","ngContentSelectors","COMPONENTS","MSSharedModule","CommonModule","RouterModule","FormsModule","AlainThemeModule","forChild","NzPopoverModule","NzIconModule","NzOutletModule","LocalizationModule","declarations","imports","exports","NgModule","MSLayoutComponent","mediaMatcher","reuseTabSrv","el","renderer","routerData","snapshot","evt","RouteConfigLoadStart","scrollToTop","NavigationError","nzDuration","exists","query","screen-xs","screen-sm","screen-md","screen-lg","screen-xl","queryCls","keys","matchMedia","setClass","isMobile","querySelector","updateHostClass","setBodyClass","colorWeak","color-weak","remove","MediaMatcher","ActivatedRoute","i4$3","ReuseTabService","ElementRef","Renderer2","LAYOUT_INIT_PROVIDERS","provide","APP_INITIALIZER","useFactory","event","ResolveEnd","listenRouter","deps","multi","MS_WIDGETS","MS_COMPONENTS","MS_SHARED_COMPONENTS","LayoutModule","forRoot","ngModule","providers","CoreModule","DragDropModule","NzSpinModule","NzAnchorModule","NzAutocompleteModule","NzAvatarModule","NzDividerModule","NzInputModule","ThemeBtnModule"],"mappings":"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","sourcesContent":["import { TemplateRef } from '@angular/core';\r\nimport { TreeNode } from '@abp/ng.core';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { MenuIcon } from '@delon/theme';\r\nimport { Layout as DelonLayout, Menu as DelonMenu } from '@delon/theme';\r\n\r\nexport namespace Layout {\r\n  export const defaultNavConfig:MSServiceNavConfig = {\r\n    title: '系統管理',\r\n    doc: '系統管理',\r\n  };\r\n\r\n  export const defaultSidebarConfig:SidebarConfig = {\r\n    hasSidebar: true,\r\n    hasAllNav: false,\r\n    hasPageNav: true,\r\n    hasProductNav: false,\r\n  };\r\n  export interface State {\r\n    isFetching: boolean;\r\n\r\n    //hasAllNav: boolean;\r\n    //hasSidebar: boolean;\r\n    categories: MSProductCategory[];\r\n\r\n    navConfig: MSServiceNavConfig;\r\n    sidebarConfig: SidebarConfig;\r\n    //hasPageNav: boolean;\r\n    pageNavs: MSMenu[];\r\n\r\n    //processor?: Processor;\r\n  }\r\n}\r\n\r\nexport interface MSLayout extends DelonLayout {\r\n  /**\r\n   * 是否有顶部\r\n   */\r\n  hasTopbar: boolean;\r\n  /**\r\n   * 是否有侧边栏\r\n   */\r\n  hasSidebar: boolean;\r\n}\r\nexport interface MSProductCategory {\r\n  [key: string]: any;\r\n\r\n  name: string;\r\n\r\n  id?: string;\r\n\r\n  products?: MSProduct[];\r\n}\r\nexport interface MSProduct extends MSLink {\r\n  [key: string]: any;\r\n\r\n  id: string;\r\n\r\n  name: string;\r\n\r\n  icon?: string | MenuIcon;\r\n\r\n  description?: string;\r\n\r\n  shortcut?: boolean;\r\n\r\n  /** Link for current product */\r\n  link?: string;\r\n}\r\nexport interface MSProductI18n {\r\n  [key: string]: any;\r\n  keywords?: string;\r\n  allProduct?: string;\r\n  hasResult?: string;\r\n  noResult?: string;\r\n  text?: string;\r\n  recent?: string;\r\n}\r\n\r\nexport interface MSLink {\r\n  /** 路由或外链地址，若外链务必指定 `target` 值 */\r\n  link?: string;\r\n  /** 指定目标打开方式，都视为外链 */\r\n  target?: '_blank' | '_self' | '_parent' | '_top';\r\n\r\n  text?: string;\r\n}\r\nexport interface SidebarConfig {\r\n  hasAllNav?: boolean;\r\n\r\n  hasSidebar?: boolean;\r\n\r\n  hasPageNav?: boolean;\r\n\r\n  hasProductNav?: boolean;\r\n}\r\nexport interface MSServiceNavConfig {\r\n  /** 服务导航标题 */\r\n  title?: string;\r\n  /** 服务导航标题（i18n） */\r\n  titleI18n?: string;\r\n  /** 次级导航上一级路径，若存在时，导航标题将被忽略为后退图标 */\r\n  backHref?: string;\r\n  /** 文档页面标题 */\r\n  doc?: string;\r\n  /** 文档页面标题（i18n） */\r\n  docI18n?: string;\r\n\r\n  /** PageNav node name set route name then display children node  */\r\n  name?: string;\r\n}\r\n\r\nexport interface MSMenu extends DelonMenu {\r\n  [key: string]: any;\r\n}\r\n\r\n\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ArrayService } from '@delon/util';\r\nimport { MSLink } from '../../../models/layout';\r\nimport { LayoutStateService } from '../../../services/layout-state.service';\r\nimport { RoutesService, LocalizationPipe } from '@abp/ng.core';\r\n\r\nexport interface MSAllNavData {\r\n  nav?: MSAllNav[];\r\n  navBottom?: MSAllNavItem[];\r\n  bottomText?: string;\r\n}\r\n\r\n// tslint:disable-next-line: no-use-before-declare\r\nexport interface MSAllNav extends MSAllNavItem {\r\n  /**\r\n   * 二级菜单\r\n   * - 若指定则 `left`、`right` 失效\r\n   * - 最多只支持一层\r\n   */\r\n  children?: MSAllNav[];\r\n  /**\r\n   * 左边分类\r\n   */\r\n  left?: MSAllNavCategory[];\r\n  /**\r\n   * 左边分类栏数，默认：`4`\r\n   */\r\n  leftColumn?: number;\r\n  /**\r\n   * 分栏后的左边分类，用于渲染\r\n   */\r\n  _left?: MSAllNavCategoryColumn[];\r\n  /**\r\n   * 右边分类\r\n   */\r\n  right?: MSAllNavCategory[];\r\n\r\n  level?: number;\r\n  parent?: MSAllNav;\r\n  active?: boolean;\r\n}\r\n\r\nexport interface MSAllNavCategory {\r\n  text: string;\r\n  list?: MSAllNavItem[];\r\n}\r\n\r\nexport interface MSAllNavCategoryColumn {\r\n  list: MSAllNavCategory[];\r\n  count: number;\r\n  idx: number;\r\n}\r\n\r\nexport interface MSAllNavItem extends MSLink {\r\n  /** 提醒标识，红色字眼，例如：HOT,NEW */\r\n  tip?: string;\r\n}\r\n\r\n/**\r\n * 顶部菜单所有菜单数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/all-nav-en-US.json`\r\n * - 最终处理数据以 `all-nav.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSAllNavService {\r\n  private _data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this._data.nav!.filter((w) => w.children && w.children.length > 0);\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this._data.nav!.reduce(\r\n      (p: MSAllNav[], c: MSAllNav) =>\r\n        (p = p.concat(c.children ? c.children : c)),\r\n      []\r\n    );\r\n  }\r\n\r\n  getData(): Observable<MSAllNavData> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  constructor(\r\n    private routesService: RoutesService,\r\n    private localizationPipe: LocalizationPipe,\r\n    private http: _HttpClient,\r\n    private arrSrv: ArrayService //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n  ) {}\r\n\r\n  private fixData(data: MSAllNavData): MSAllNavData {\r\n    const splitColumn = (item: MSAllNav) => {\r\n      if (!item.left) {\r\n        return;\r\n      }\r\n      item.leftColumn = item.leftColumn || 2;\r\n      const columns: MSAllNavCategoryColumn[] = new Array(item.leftColumn)\r\n        .fill({})\r\n        .map((_, idx) => ({\r\n          list: [],\r\n          count: 0,\r\n          idx,\r\n        }));\r\n      item.left\r\n        .filter((w) => w.list)\r\n        .forEach((category) => {\r\n          const idx = [...columns].sort((a, b) => a.count - b.count)[0].idx;\r\n          columns[idx].list.push(category);\r\n          columns[idx].count += category.list!.length;\r\n        });\r\n      item._left = columns;\r\n    };\r\n    data.nav!.forEach((p1) => {\r\n      p1.level = 1;\r\n      if (p1.children) {\r\n        p1.children.forEach((p2) => {\r\n          p2.parent = p1;\r\n          p2.level = 2;\r\n          splitColumn(p2);\r\n        });\r\n      } else {\r\n        splitColumn(p1);\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n  private getByHttp(): Observable<MSAllNavData> {\r\n    return this.routesService.tree$.pipe(\r\n      map((r) => {\r\n        let result: MSAllNavData = {\r\n          navBottom: [],\r\n          bottomText: 'Further.',\r\n          nav: [],\r\n        };\r\n        result.nav = r\r\n          .filter((x) => !this.routesService.hide(x))\r\n          .map((x) => {\r\n            let allNav = {\r\n              text: this.localizationPipe.transform(x.name),\r\n              left: [],\r\n            };\r\n            x.children\r\n              .filter((y) => !this.routesService.hide(y))\r\n              .forEach((y) => {\r\n                if (y?.children?.length > 0) {\r\n                  allNav.left.push({\r\n                    text: this.localizationPipe.transform(y.name),\r\n                    list: y.children.map((z) => {\r\n                      return {\r\n                        text: this.localizationPipe.transform(z.name),\r\n                        link: z.path,\r\n                      };\r\n                    }),\r\n                  });\r\n                } else {\r\n                  result.navBottom.push({\r\n                    text: this.localizationPipe.transform(y.name),\r\n                    link: y.path,\r\n                  });\r\n                }\r\n              });\r\n            return allNav;\r\n          });\r\n        this._data = this.fixData(result);\r\n        return this._data;\r\n      })\r\n    );\r\n  }\r\n\r\n  refreshActive(i: MSAllNav): void {\r\n    this.arrSrv.visitTree(this._data.nav!, (item: MSAllNav) => {\r\n      item.active = false;\r\n    });\r\n    while (i) {\r\n      i.active = true;\r\n      i = i.parent!;\r\n    }\r\n  }\r\n}\r\n","import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Layout, SettingsService, _HttpClient } from '@delon/theme';\r\n//import { environment } from '@env/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MSLayout } from '../models/layout';\r\n\r\n/**\r\n * 用于维护布局数据\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class BrandService implements OnDestroy {\r\n  private notify$ = new BehaviorSubject<string | null>(null);\r\n  private _isMobile = false;\r\n\r\n  /** 顶部高度，若变更需要同时重新指定 LESS 变量：`@alain-ms-topbar-height` 值 */\r\n  readonly topHeight = 50;\r\n\r\n  // #region fields\r\n\r\n  get notify(): Observable<string | null> {\r\n    return this.notify$.asObservable();\r\n  }\r\n\r\n  get isMobile(): boolean {\r\n    return this._isMobile;\r\n  }\r\n\r\n  get layout(): MSLayout {\r\n    return this.settings.layout as MSLayout;\r\n  }\r\n\r\n  hideNav = false;\r\n\r\n  // #endregion\r\n\r\n  constructor(bm: BreakpointObserver, private settings: SettingsService) {\r\n    // fix layout data\r\n    settings.setLayout({\r\n      //...(environment as any).ay,\r\n      ...settings.layout,\r\n      hasTopbar: true,\r\n      hasSidebar: false,\r\n      hasFixed: false,\r\n    });\r\n\r\n    const mobileMedia = 'only screen and (max-width: 767.99px)';\r\n    bm.observe(mobileMedia).subscribe((state) => this.checkMedia(state.matches));\r\n    this.checkMedia(bm.isMatched(mobileMedia));\r\n  }\r\n\r\n  private checkMedia(value: boolean): void {\r\n    this._isMobile = value;\r\n    this.layout.collapsed = this._isMobile;\r\n    this.notify$.next('mobile');\r\n  }\r\n\r\n  setLayout(name: string | Layout, value?: any): void {\r\n    this.settings.setLayout(name, value);\r\n    this.notify$.next('layout');\r\n  }\r\n\r\n  setTopbar(status: boolean): void {\r\n    this.setLayout('hasTopbar', status);\r\n  }\r\n\r\n  setSidebar(status: boolean): void {\r\n    this.setLayout('hasSidebar', status);\r\n  }\r\n\r\n  setFixed(status: boolean): void {\r\n    this.setLayout('hasFixed', status);\r\n  }\r\n\r\n  triggerNotify(type: string = 'custom'): void {\r\n    this.notify$.next(type);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MSLink } from '../../../models/layout';\r\n\r\n@Directive({ selector: '[link-to]' })\r\nexport class MSLinkToDirective {\r\n  constructor(private router: Router) {}\r\n\r\n  @Input('link-to') i!: MSLink;\r\n\r\n  @Output() linkToChanged = new EventEmitter<MouseEvent>();\r\n\r\n  @HostListener('click', ['$event'])\r\n  _click(e: MouseEvent): void {\r\n    const { link, target } = this.i;\r\n    if (target != null) {\r\n      if (target === '_blank') {\r\n        window.open(link);\r\n      } else {\r\n        window.location.href = link!;\r\n      }\r\n      this.linkToChanged.emit(e);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(link!).then(() => this.linkToChanged.emit(e));\r\n    });\r\n  }\r\n}\r\n","<div class=\"alain-ms__an-trigger\">\r\n  <i nz-icon nzType=\"bars\"></i>\r\n  <nz-spin *ngIf=\"open && !data\"></nz-spin>\r\n</div>\r\n<ng-template #menuTpl let-ls>\r\n  <ul class=\"alain-ms__an-menu\">\r\n    <li\r\n      *ngFor=\"let i of ls\"\r\n      class=\"alain-ms__an-menu-item\"\r\n      [ngClass]=\"{ 'alain-ms__an-menu-item--active': i.active }\"\r\n      (mouseenter)=\"mouseHandle(i, true)\"\r\n    >\r\n      {{ i.text }}\r\n      <i nz-icon nzType=\"right\"></i>\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n<ng-template #categoryTpl let-ls>\r\n  <div *ngFor=\"let p of ls\" class=\"alain-ms__an-category\">\r\n    <h3 class=\"alain-ms__an-category-title\">{{ p.text }}</h3>\r\n    <div class=\"alain-ms__an-category-list\">\r\n      <a *ngFor=\"let i of p.list\" [link-to]=\"i\" (linkToChanged)=\"_leave()\" class=\"alain-ms__an-category-link\">\r\n        {{ i.text }}\r\n        <span *ngIf=\"i.tip\" class=\"alain-ms__an-category-tip\">{{ i.tip }}</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<div #dropdown class=\"alain-ms__an-dropdown\">\r\n  <div *ngIf=\"data\" class=\"alain-ms__an\">\r\n    <div class=\"alain-ms__an-panel alain-ms__an-panel-active alain-ms__an-level1\">\r\n      <div class=\"alain-ms__an-panel-inner\">\r\n        <ng-template [ngTemplateOutlet]=\"menuTpl\" [ngTemplateOutletContext]=\"{ $implicit: data.nav }\"></ng-template>\r\n        <div *ngIf=\"data.navBottom\" class=\"alain-ms__an-menu-bottom\">\r\n          <a *ngFor=\"let i of data.navBottom\" [link-to]=\"i\" (linkToChanged)=\"_leave()\">\r\n            {{ i.text }}\r\n            <i nz-icon nzType=\"share-alt\"></i>\r\n          </a>\r\n        </div>\r\n        <div *ngIf=\"data.bottomText\" class=\"alain-ms__an-bottom\">{{ data.bottomText }}</div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      *ngFor=\"let p of allL2\"\r\n      class=\"alain-ms__an-panel alain-ms__an-level2\"\r\n      [ngClass]=\"{ 'alain-ms__an-level2-active': p.active }\"\r\n    >\r\n      <div class=\"alain-ms__an-panel-inner\">\r\n        <ng-template [ngTemplateOutlet]=\"menuTpl\" [ngTemplateOutletContext]=\"{ $implicit: p.children }\"></ng-template>\r\n      </div>\r\n    </div>\r\n    <div\r\n      *ngFor=\"let i of allPanel\"\r\n      class=\"alain-ms__an-content alain-ms__an-level{{ i.level }}-content alain-ms__an-left-col-{{ i.leftColumn }}\"\r\n      [ngClass]=\"{ 'alain-ms__an-content-active': i.active }\"\r\n    >\r\n      <div *ngIf=\"i._left && i._left.length > 0\" class=\"alain-ms__an-left\">\r\n        <div *ngFor=\"let col of i._left\" class=\"alain-ms__an-left-col\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"categoryTpl\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: col.list }\"\r\n          ></ng-template>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"i.right && i.right.length > 0\" class=\"alain-ms__an-right\">\r\n        <ng-template [ngTemplateOutlet]=\"categoryTpl\" [ngTemplateOutletContext]=\"{ $implicit: i.right }\"></ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { auditTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSAllNav, MSAllNavData, MSAllNavService } from './all-nav.service';\r\n\r\nconst ANT_TIMEOUT = 150;\r\n\r\n/**\r\n * 顶部所有菜单组件，当单页布局模式时渲染\r\n */\r\n@Component({\r\n  selector: 'ms-all-nav',\r\n  templateUrl: './all-nav.component.html',\r\n  host: {\r\n    '[class.alain-ms__an-active]': 'validOpen',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSAllNavComponent implements OnInit, OnDestroy {\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  @ViewChild('dropdown', { static: true })\r\n  private dropdownEl!: ElementRef;\r\n  private loading = false;\r\n\r\n  $mouse = new Subject<{ i: MSAllNav; status: boolean }>();\r\n  open = false;\r\n  data!: MSAllNavData;\r\n\r\n  get allL2(): MSAllNav[] {\r\n    return this.srv.allL2;\r\n  }\r\n\r\n  get allPanel(): MSAllNav[] {\r\n    return this.srv.allPanel;\r\n  }\r\n\r\n  get validOpen(): boolean {\r\n    return this.data && this.open;\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSAllNavService,\r\n    private brandSrv: BrandService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Inject(DOCUMENT) private doc?: any,\r\n  ) {}\r\n\r\n  private handleOpen(status: boolean): void {\r\n    this.doc.body.classList[status ? 'add' : 'remove']('alain-ms__an-body');\r\n    this.open = status;\r\n    this.cdr.markForCheck();\r\n    this.updateHeight().load();\r\n  }\r\n\r\n  private load(): void {\r\n    if (this.loading || this.data) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.srv.getData().subscribe((res) => {\r\n      this.data = res;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private updateHeight(): this {\r\n    const height = window.innerHeight - this.brandSrv.topHeight;\r\n    (this.dropdownEl.nativeElement as HTMLElement).style.height = `${height}px`;\r\n    return this;\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  _enter(): void {\r\n    if (!this.validOpen) {\r\n      this.handleOpen(true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  _leave(): void {\r\n    this.handleOpen(false);\r\n  }\r\n\r\n  mouseHandle(i: MSAllNav, status: boolean): void {\r\n    this.$mouse.next({ i, status });\r\n  }\r\n\r\n  private handleMouse(i: MSAllNav): void {\r\n    this.srv.refreshActive(i);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this._enter();\r\n    const { $mouse, unsubscribe$ } = this;\r\n    $mouse\r\n      .asObservable()\r\n      .pipe(takeUntil(unsubscribe$), auditTime(ANT_TIMEOUT))\r\n      .subscribe((res) => this.handleMouse(res.i));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    const { unsubscribe$ } = this;\r\n    unsubscribe$.next();\r\n    unsubscribe$.complete();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"defaultLanguage$ | async as defaultLang\">\r\n  <span class=\"alain-ms__topbar-item-btn\" >\r\n    <span >{{ defaultLang.displayName }}</span>\r\n  </span>\r\n  <ul class=\"alain-ms__topbar-dd-menu\">\r\n    <li *ngFor=\"let lang of (dropdownLanguages$ | async)\" (click)=\"change(lang.cultureName)\">\r\n      <a class=\"alain-ms__topbar-dd-item\">{{ lang?.displayName }}</a>\r\n    </li>\r\n  </ul>\r\n</ng-container>\r\n\r\n","import { ConfigStateService, SessionStateService, ApplicationConfiguration } from '@abp/ng.core';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport snq from 'snq';\r\n\r\n@Component({\r\n  selector: 'ms-langs',\r\n  templateUrl: './langs.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSLangsComponent {\r\n\r\n  languages$ = this.configState.getDeep$('localization.languages');\r\n\r\n  get defaultLanguage$(): Observable<{ displayName: string; flagIcon: string }> {\r\n    return this.languages$.pipe(\r\n      map(languages => {\r\n        const lang: Partial<ApplicationConfiguration.Language> = snq(\r\n          () => languages.find(language => language.cultureName === this.selectedLangCulture),\r\n          {} as Partial<ApplicationConfiguration.Language>,\r\n        );\r\n        return {\r\n          displayName: lang.displayName || '',\r\n          flagIcon: lang.flagIcon,\r\n        };\r\n      }),\r\n    );\r\n  }\r\n\r\n  get dropdownLanguages$(): Observable<ApplicationConfiguration.Language[]> {\r\n    return this.languages$.pipe(\r\n      map(\r\n        languages =>\r\n          snq(() => languages.filter(lang => lang.cultureName !== this.selectedLangCulture)),\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n\r\n  get selectedLangCulture(): string {\r\n    return this.sessionState.getLanguage();\r\n  }\r\n\r\n  constructor(\r\n    private configState: ConfigStateService,\r\n    private sessionState: SessionStateService\r\n  ) {\r\n  }\r\n\r\n\r\n  change(cultureName: string): void {\r\n    this.sessionState.setLanguage(cultureName);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MSLink } from '../../models/layout';\r\n\r\nexport interface MSTopbar {\r\n  [key: string]: any;\r\n\r\n  messagess?: MSTopbarMessage[];\r\n\r\n  navLinks?: { [key: string]: MSTopbarNavLink };\r\n}\r\n\r\nexport interface MSTopbarMessage extends MSLink {\r\n  [key: string]: any;\r\n\r\n  className?: string;\r\n\r\n  title?: string;\r\n\r\n  createdTime?: string;\r\n}\r\n\r\nexport interface MSTopbarNavLink extends MSLink {\r\n  [key: string]: any;\r\n\r\n  id?: string;\r\n\r\n  text?: string;\r\n\r\n  className?: string;\r\n  /** 二级菜单，只支持一层 */\r\n  links?: MSTopbarNavLink[];\r\n}\r\n\r\n/**\r\n * 顶部菜单所有数据，几个注意点：\r\n * - 当前处理的数据源格式为 `./assets/tmp/topbar-en-US.json`\r\n * - 最终处理数据以 `topbar.interface.ts` 系列接口为准\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSTopbarService {\r\n  private _data!: MSTopbar;\r\n\r\n  get data(): MSTopbar {\r\n    return this._data;\r\n  }\r\n\r\n  get messages(): MSTopbarMessage[] {\r\n    return this._data.messagess!;\r\n  }\r\n\r\n  getData(): Observable<MSTopbar> {\r\n    return this._data ? of(this._data) : this.getByHttp();\r\n  }\r\n\r\n  getNav(key: string): MSTopbarNavLink {\r\n    return this._data.navLinks![key] || {};\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<any> {\r\n    return this.http.get(`./assets/tmp/topbar-zh-TW.json`).pipe(\r\n      tap((res: any) => {\r\n        this._data = res;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<span class=\"alain-ms__topbar-item-btn\">\r\n  <span class=\"position-relative\">\r\n    {{ l.titleText }}<em *ngIf=\"list.length > 0\" class=\"alain-ms__topbar-item-num\">{{ list.length }}</em>\r\n  </span>\r\n</span>\r\n<div class=\"alain-ms__topbar-dd-menu\">\r\n  <div class=\"alain-ms__notice-hd\">\r\n    {{ l.title }}\r\n    <a class=\"brand-color\" [link-to]=\"l.subscribe\">{{ l.subscribe.title }}</a>\r\n  </div>\r\n  <a class=\"alain-ms__notice-item\" *ngFor=\"let i of list\" [link-to]=\"i\">\r\n    <div class=\"alain-ms__notice-item--title\">{{ i.title }}</div>\r\n    <span class=\"alain-ms__notice-item--time\">{{ i.time }}</span>\r\n  </a>\r\n  <div class=\"alain-ms__notice-fd\">\r\n    <a class=\"d-block pt-sm pb-xs text-center\" [link-to]=\"l\">{{ l.text }}</a>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { MSTopbarMessage, MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-notice',\r\n  templateUrl: './notice.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__notice]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSNoticeComponent {\r\n  get list(): MSTopbarMessage[] {\r\n    return this.srv.messages.map((i) => {\r\n      i.link = this.l.messageUrl + i.id;\r\n      return i;\r\n    });\r\n  }\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('message');\r\n  }\r\n\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    private router: Router,\r\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\r\n    public settings: SettingsService,\r\n    public msg: NzMessageService,\r\n  ) {}\r\n\r\n  logout(): void {\r\n    this.tokenService.clear();\r\n    this.router.navigateByUrl(this.tokenService.login_url!);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, _HttpClient } from '@delon/theme';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport interface MSRegionDistrict {\r\n  name?: string;\r\n  list?: MSRegionItem[];\r\n}\r\n\r\nexport interface MSRegionItem {\r\n  id?: string;\r\n  country?: string;\r\n  name?: string;\r\n  selected?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSRegionService {\r\n  private _data!: MSRegionDistrict[];\r\n\r\n  private get platList(): MSRegionItem[] {\r\n    return this._data.reduce((p, c) => p.concat(c.list!), [] as MSRegionItem[]);\r\n  }\r\n\r\n  get item(): MSRegionItem {\r\n    return this.platList.find((w) => w.selected)!;\r\n  }\r\n\r\n  get list(): MSRegionDistrict[] {\r\n    return this._data;\r\n  }\r\n\r\n  constructor(\r\n    private http: _HttpClient,\r\n    //  @Inject(ALAIN_I18N_TOKEN) private i18nSrv: I18NService\r\n     ) {}\r\n\r\n  private getByHttp(): Observable<NzSafeAny[]> {\r\n    return this.http.get(`/region`).pipe(\r\n      tap((list: any[]) => {\r\n        //const zone = this.i18nSrv.zone;\r\n        //const key = `${list[0][`${zone}Name`] ? zone : 'cn'}Name`;\r\n        // const res = list.reduce((p: MSRegionDistrict[], c) => {\r\n        //   const districtName = `district_${key}`;\r\n        //   let item = p.find((w) => w.name === c[districtName]);\r\n        //   if (!item) {\r\n        //     item = { name: c[districtName], list: [] };\r\n        //     p.push(item);\r\n        //   }\r\n        //   item.list?.push({ id: c.id, country: c.country, name: c[key], selected: c.id === 'cn-shanghai' });\r\n        //   return p;\r\n        // }, []);\r\n        // this._data = res;\r\n      }),\r\n    );\r\n  }\r\n\r\n  getData(): Observable<NzSafeAny[] | null> {\r\n    return this._data ? of(null) : this.getByHttp();\r\n  }\r\n\r\n  setSelected(item: MSRegionItem): void {\r\n    this.platList.find((w) => w.selected)!.selected = false;\r\n    item.selected = true;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"inited\">\r\n  <span class=\"alain-ms__topbar-item-btn\">\r\n    <i class=\"icon icon-{{ srv.item.country }}\"></i>\r\n    <span class=\"text-xs px-xs\">{{ srv.item.name }}</span>\r\n    <i nz-icon nzType=\"caret-up\" class=\"alain-ms__topbar-item-btn-arrow\"></i>\r\n  </span>\r\n  <div class=\"alain-ms__topbar-dd-menu alain-ms__topbar-dd-left alain-ms__region--wrap clearfix\">\r\n    <dl *ngFor=\"let p of srv.list\" class=\"alain-ms__region--list\">\r\n      <dt class=\"mb-sm\">{{ p.name }}</dt>\r\n      <dd *ngFor=\"let i of p.list\" (click)=\"selected(i)\">\r\n        <a class=\"d-block\" [ngClass]=\"{ 'brand-color': i.selected }\">\r\n          <i class=\"icon icon-{{ i.country }}\"></i>{{ i.name }}\r\n        </a>\r\n      </dd>\r\n    </dl>\r\n  </div>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MSRegionItem, MSRegionService } from './region.service';\r\n\r\n@Component({\r\n  selector: 'ms-region',\r\n  templateUrl: './region.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__region]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSRegionComponent implements OnInit {\r\n  inited = false;\r\n\r\n  constructor(public srv: MSRegionService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  selected(item: MSRegionItem): void {\r\n    this.srv.setSelected(item);\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<div class=\"alain-ms__search\" [ngClass]=\"{ 'alain-ms__search-active': show }\">\r\n  <input\r\n    class=\"alain-ms__search-ipt\"\r\n    #ipt\r\n    placeholder=\"{{ l.placeholder }}\"\r\n    nz-input\r\n    [(ngModel)]=\"q\"\r\n    (input)=\"search$.next($event.target?.value)\"\r\n    [nzAutocomplete]=\"searchAuto\"\r\n    (blur)=\"show = false\"\r\n  />\r\n  <i class=\"alain-ms__search-icon\" nz-icon nzType=\"search\"></i>\r\n  <i class=\"alain-ms__search-outline\"></i>\r\n  <nz-autocomplete #searchAuto class=\"asdlfkjlj\">\r\n    <nz-auto-option *ngFor=\"let item of list\" [nzValue]=\"item\">\r\n      {{ item }}\r\n    </nz-auto-option>\r\n  </nz-autocomplete>\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, OnDestroy, ViewChild } from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { MSTopbarNavLink, MSTopbarService } from '../../services/topbar.service';\r\n\r\n@Component({\r\n  selector: 'ms-search',\r\n  templateUrl: './search.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.mr-md]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSearchComponent implements OnDestroy {\r\n  @ViewChild('ipt', { static: true }) private ipt!: ElementRef<any>;\r\n  show = false;\r\n  q = '';\r\n  search$ = new Subject<string>();\r\n  list: any[] = [];\r\n\r\n  get l(): MSTopbarNavLink {\r\n    return this.srv.getNav('search');\r\n  }\r\n\r\n  constructor(http: _HttpClient, private srv: MSTopbarService, private cdr: ChangeDetectorRef) {\r\n    this.search$\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        switchMap((q: string) => http.get('/user', { no: q, pi: 1, ps: 5 })),\r\n      )\r\n      .subscribe((res: any) => {\r\n        this.list = res.list;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('click')\r\n  _click(): void {\r\n    this.ipt.nativeElement.focus();\r\n    this.show = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.search$.unsubscribe();\r\n  }\r\n}\r\n","<ng-template #loginBtnTpl>\r\n  <a (click)=\"initLogin()\"  class=\"alain-ms__topbar-item-btn\">{{'AbpAccount::Login' | abpLocalization}}</a>\r\n</ng-template>\r\n\r\n<div *ngIf=\"(currentUser$ | async) as currentUser\">\r\n  <div *ngIf=\"currentUser.isAuthenticated; else loginBtnTpl\">\r\n\r\n\r\n    <span class=\"alain-ms__topbar-item-btn\">\r\n      <!-- <nz-avatar [nzSrc]=\"settings.user.avatar\" nzSize=\"small\"></nz-avatar> -->\r\n      {{ currentUser.userName }}\r\n    </span>\r\n    <div class=\"alain-ms__topbar-dd-menu width-md\">\r\n      <div class=\"alain-ms__user-hd\">\r\n        <div class=\"d-flex\">\r\n          <!-- <nz-avatar [nzSrc]=\"settings.user.avatar\" nzSize=\"small\"></nz-avatar> -->\r\n          <span class=\"ml-md\">{{ currentUser.userName }}</span>\r\n        </div>\r\n        <!-- <div class=\"mt-sm\">\r\n          <ng-container *ngFor=\"let i of mainLinks; let last = last\">\r\n            <a [link-to]=\"i\">{{ i.text }}</a>\r\n            <nz-divider *ngIf=\"!last\" nzType=\"vertical\"></nz-divider>\r\n          </ng-container>\r\n        </div> -->\r\n      </div>\r\n      <div class=\"alain-ms__user-bd\">\r\n        <!-- <a *ngFor=\"let i of subLinks\" [link-to]=\"i\" class=\"alain-ms__user-bd-item\">\r\n          <i nz-icon nzType=\"safety\"></i>{{ i.text }}\r\n        </a> -->\r\n        <a routerLink=\"/account/manage-profile\" class=\"alain-ms__user-bd-item\">\r\n          <i nz-icon nzType=\"safety\"></i>{{ 'AbpAccount::ManageYourProfile' | abpLocalization }}\r\n        </a>\r\n      </div>\r\n      <div class=\"alain-ms__user-fd\">\r\n        <a (click)=\"logout()\" class=\"d-block pt-sm pb-xs text-center\">{{ 'AbpUi::Logout' | abpLocalization }}</a>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { UserService } from '@core';\r\nimport { SettingsService } from '@delon/theme';\r\nimport { MSTopbarService } from '../../services/topbar.service';\r\nimport { AuthService } from '@fs-tw/account';\r\nimport { ConfigStateService,CurrentUserDto } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ms-user',\r\n  templateUrl: './user.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar-item]': 'true',\r\n    '[class.alain-ms__topbar-dd]': 'true',\r\n    '[class.alain-ms__user]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSUserComponent {\r\n  currentUser$: Observable<CurrentUserDto> = this.configStateService.getOne$('currentUser');\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    srv: MSTopbarService,\r\n    public settings: SettingsService\r\n  ) {\r\n  }\r\n\r\n  initLogin() {\r\n    this.authService.initLogin();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/'], { state: { redirectUrl: this.router.url } });\r\n    });\r\n  }\r\n}\r\n","import {\r\n  RoutesService as AbpRoutesService,\r\n  LocalizationPipe,\r\n  ABP,\r\n  TreeNode,\r\n} from '@abp/ng.core';\r\n\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport {\r\n  MSMenu,\r\n  MSProduct,\r\n  MSProductCategory,\r\n  MSServiceNavConfig,\r\n} from '../models';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\n\r\nexport class RoutesProcessor {\r\n  private get routesService(): AbpRoutesService {\r\n    return this.injector.get(AbpRoutesService);\r\n  }\r\n\r\n  private get localizationPipe(): LocalizationPipe {\r\n    return this.injector.get(LocalizationPipe);\r\n  }\r\n\r\n  public RouterState: RouterStateSnapshot;\r\n\r\n  get CurrentUrl(): string {\r\n    var current_url = this.RouterState.url.split('?')[0];\r\n    return decodeURI(current_url);\r\n  }\r\n\r\n  get CurrentRoute(): TreeNode<ABP.Route> {\r\n    const result = this.routesService.find(\r\n      (x) => this.formatParams(x.path) === this.CurrentUrl\r\n    );\r\n    return result;\r\n  }\r\n\r\n  MergeRouteData(prop: string, defaultValue: any) {\r\n    let result = defaultValue;\r\n\r\n    let targetRoutes = [];\r\n    let route = this.CurrentRoute;\r\n    if (!route) return [];\r\n    pushNode(route);\r\n    while (!!route.parent) {\r\n      route = route.parent;\r\n      pushNode(route);\r\n    }\r\n\r\n    let stack = targetRoutes;\r\n    while (stack.length !== 0) {\r\n      let node = stack.pop();\r\n      result = { ...result, ...node[prop] };\r\n    }\r\n    return result;\r\n\r\n    function pushNode(node) {\r\n      if (!!node && node.hasOwnProperty(prop)) {\r\n        targetRoutes.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  public get Category$(): Observable<MSProductCategory[]> {\r\n    return this.routesService.visible$.pipe(\r\n      map((x) => {\r\n        if (x.length === 0) return;\r\n        return x\r\n          .filter(\r\n            (y) =>\r\n              y.name === eThemeSharedRouteNames.Administration &&\r\n              !this.routesService.hide(y)\r\n          )\r\n          .map((r) => r.children)\r\n          .reduce((a, b) => a.concat(b))\r\n          .map((r) => {\r\n            let category: MSProductCategory = {\r\n              id: r.name,\r\n              name: this.localizationPipe.transform(r.name),\r\n              icon: r.iconClass,\r\n              products: [],\r\n              link: r.path,\r\n            };\r\n\r\n            category.products = r.children\r\n              .filter((c) => !this.routesService.hide(c))\r\n              .map((c) => {\r\n                let product: MSProduct = {\r\n                  productId: c.name,\r\n                  name: this.localizationPipe.transform(c.name),\r\n                  link: c.path,\r\n                  icon: c.iconClass,\r\n                  id: c.name,\r\n                };\r\n                return product;\r\n              });\r\n            return category;\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  public GetPageNavs(\r\n    routerState: RouterStateSnapshot,\r\n    nav: MSServiceNavConfig\r\n  ) {\r\n    if (!this.CurrentRoute) return [];\r\n    let pageNavs: MSMenu[] = [];\r\n    this.RouterState = routerState;\r\n    let target: ABP.Route;\r\n\r\n    target = this.routesService.find((x) => x.name == nav.name);\r\n\r\n    if (!!target) {\r\n      pageNavs.push(...this.transMenu(target));\r\n    }\r\n\r\n    return pageNavs;\r\n  }\r\n\r\n  private transMenu(first: any,recursive:boolean=true) {\r\n    let result = [];\r\n    first.children\r\n      .filter((r) => !this.routesService.hide(r))\r\n      .forEach((second) => {\r\n        let left: MSMenu = {\r\n          text:\r\n            second.displayName || this.localizationPipe.transform(second.name),\r\n          link: this.formatParams(second.path), //(third.url || third.path),\r\n          icon: second.iconClass,\r\n          children: [],\r\n        };\r\n        if (second?.children?.length > 0 && recursive) {\r\n          left.children = this.transMenu(second,false);\r\n        }\r\n        result.push(left);\r\n      });\r\n    return result;\r\n  }\r\n\r\n  public formatParams(\r\n    text: string,\r\n    router: ActivatedRouteSnapshot = this.RouterState.root\r\n  ): string {\r\n    if (!text) return '';\r\n    let regexp = /:([^(:\\/\\-\\ )]+)/g;\r\n    let result = text;\r\n    let match = text.match(regexp);\r\n    if (!!match) {\r\n      text.match(regexp).forEach((i) => {\r\n        let parameter = i.substr(1);\r\n        let itemId = this.findRouter((x) => parameter in x.params, [router])\r\n          ?.params[parameter];\r\n        result = result.replace(':' + parameter, itemId);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private findRouter(\r\n    predicate: (item: ActivatedRouteSnapshot) => boolean,\r\n    routers: ActivatedRouteSnapshot[]\r\n  ): ActivatedRouteSnapshot {\r\n    return routers.reduce(\r\n      (acc, node) =>\r\n        acc\r\n          ? acc\r\n          : predicate(node)\r\n          ? node\r\n          : this.findRouter(predicate, node.children),\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { InternalStore, LocalizationPipe } from '@abp/ng.core';\r\nimport {\r\n  Layout,\r\n  MSProduct,\r\n  MSServiceNavConfig,\r\n  SidebarConfig,\r\n} from '../models';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router, RouterStateSnapshot } from '@angular/router';\r\nimport { RoutesProcessor } from './routes.processor';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\nimport { findRoute, getRoutePath, RoutesService } from '@abp/ng.core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutStateService {\r\n  private store = new InternalStore({\r\n    isFetching: false,\r\n\r\n    categories: [],\r\n\r\n    navConfig: Layout.defaultNavConfig,\r\n    sidebarConfig: Layout.defaultSidebarConfig,\r\n\r\n    pageNavs: [],\r\n  } as Layout.State);\r\n  //private routerState: RouterStateSnapshot;\r\n  ///必須等待Rouer完成後才能使用，需要當前路徑\r\n  public routesProcessor: RoutesProcessor;\r\n\r\n  getStore$() {\r\n    return this.store.sliceState((state) => state);\r\n  }\r\n\r\n  getFetching$() {\r\n    return this.store.sliceState(({ isFetching }) => isFetching);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.store.state.categories;\r\n  }\r\n\r\n  getCategories$() {\r\n    return this.store.sliceState((state) => state.categories);\r\n  }\r\n  getShortcuts() {\r\n    const categories = this.getCategories();\r\n    const result: MSProduct[] = [];\r\n    categories.forEach((p) => {\r\n      result.push(p as any);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getShortcuts$() {\r\n    return this.getCategories$().pipe(\r\n      map((x) => {\r\n        const result: MSProduct[] = [];\r\n        x.forEach((p) => {\r\n          result.push(p as any);\r\n        });\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  getNavConfig() {\r\n    return this.store.state.navConfig;\r\n  }\r\n\r\n  getNavConfig$() {\r\n    return this.store.sliceState((state) => state.navConfig);\r\n  }\r\n\r\n  getPageNavs$() {\r\n    return this.store.sliceState((state) => state.pageNavs);\r\n  }\r\n  getPageNavs() {\r\n    return this.store.state.pageNavs;\r\n  }\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    public localizationPipe: LocalizationPipe\r\n  ) {\r\n    this.routesProcessor = new RoutesProcessor(this.injector);\r\n    this.listenRoutes();\r\n  }\r\n\r\n  setStore(state: Partial<Layout.State>) {\r\n    this.store.patch({ ...state });\r\n  }\r\n\r\n  setFetching(isFetching: boolean) {\r\n    this.store.patch({ isFetching });\r\n  }\r\n\r\n  setNavConfig(navConfig: MSServiceNavConfig) {\r\n    this.store.patch({ navConfig });\r\n    let pageNavs: any;\r\n    if (navConfig.name !== eThemeSharedRouteNames.Administration) {\r\n      pageNavs = this.routesProcessor.GetPageNavs(\r\n        this.routesProcessor.RouterState,\r\n        navConfig\r\n      );\r\n      this.store.state.sidebarConfig.hasPageNav = true;\r\n    } else {\r\n      this.store.state.sidebarConfig.hasPageNav = false;\r\n    }\r\n    this.store.patch({\r\n      pageNavs,\r\n      sidebarConfig: this.store.state.sidebarConfig,\r\n    });\r\n  }\r\n\r\n  fetchPageNavs(routerState: RouterStateSnapshot) {\r\n    this.routesProcessor.RouterState = routerState;\r\n\r\n\r\n    let navConfig: MSServiceNavConfig = this.routesProcessor.MergeRouteData(\r\n      'navConfig',\r\n      {\r\n        ...Layout.defaultNavConfig,\r\n        name: this.routesProcessor.CurrentRoute?.parentName ?? \"\"//eTicketRouteNames.Ticket//\r\n      }\r\n    );\r\n\r\n    let sidebarConfig: SidebarConfig = this.routesProcessor.MergeRouteData(\r\n      'sidebarConfig',\r\n      Layout.defaultSidebarConfig\r\n    );\r\n\r\n    this.setStore({\r\n      sidebarConfig,\r\n    });\r\n\r\n    this.setNavConfig(navConfig);\r\n  }\r\n\r\n  private listenRoutes() {\r\n    this.routesProcessor.Category$.subscribe((categories) => {\r\n      if (!!this.routesProcessor.RouterState) {\r\n        this.fetchPageNavs(this.routesProcessor.RouterState);\r\n      }\r\n\r\n      this.store.patch({\r\n        categories,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n// import { I18NService } from '@core';\r\nimport { ALAIN_I18N_TOKEN, MenuIcon, _HttpClient } from '@delon/theme';\r\nimport { deepCopy } from '@delon/util';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { MSLink } from '../../models/layout';\r\n\r\nimport {\r\n  RoutesService,\r\n  PermissionService,\r\n  LocalizationPipe,\r\n} from '@abp/ng.core';\r\nimport { MSProduct, MSProductCategory, MSProductI18n } from '../../models';\r\nimport { LayoutStateService } from '../../services/layout-state.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MSProductService {\r\n  private _data!: MSProductCategory[];\r\n\r\n  get data(): MSProductCategory[] {\r\n    return this._data;\r\n  }\r\n\r\n  get i18n(): MSProductI18n {\r\n    return {\r\n      showAll: true,\r\n      keywords: '請輸入關鍵詞',\r\n      allProduct: '查詢全部産品',\r\n      show: true,\r\n      hasResult: '以下是與“<strong>{filterTxt}</strong>”相關的産品：',\r\n      noResult: '未找到與“<strong>{filterTxt}</strong>”相關的産品。',\r\n      text: '産品與服務',\r\n      recent: '最近訪問',\r\n    };\r\n  }\r\n\r\n  getData(): Observable<MSProductCategory[]> {\r\n    return this.layoutSateService.getCategories$().pipe(\r\n      tap((x) => {\r\n        this._data = x;\r\n      })\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private layoutSateService: LayoutStateService\r\n  ) {}\r\n\r\n  search(\r\n    q: string\r\n  ): { list: MSProductCategory[][]; categories: MSProductCategory[] } {\r\n    const column = 3;\r\n    const list: MSProductCategory[][] = [[], [], []];\r\n\r\n    // Process search key\r\n    let oldList: MSProductCategory[] = deepCopy(this._data);\r\n    if (q) {\r\n      oldList = oldList.map((p) => {\r\n        p.products = p.products?.filter((w) => {\r\n          return w.name.includes(q) || w.id.includes(q);\r\n        });\r\n        return p;\r\n      });\r\n    }\r\n\r\n    // Clean empty children category\r\n    const categories: MSProductCategory[] = [];\r\n    let MockID = 0;\r\n    oldList\r\n      .filter((w) => w.products!.length > 0)\r\n      .forEach((i, idx) => {\r\n        i._id = ++MockID;\r\n        list[idx % column].push(i);\r\n        // Collecting category data\r\n        if (categories.findIndex((w) => w.name === i.name) === -1) {\r\n          categories.push({ _id: i._id, name: i.name });\r\n        }\r\n      });\r\n\r\n    return { list, categories };\r\n  }\r\n}\r\n","<ng-container *ngIf=\"store$ | async as store\">\r\n  <div class=\"alain-ms__sidebar-wrap\">\r\n    <div\r\n      *ngIf=\"store.sidebarConfig.hasProductNav\"\r\n      class=\"alain-ms__sidebar-product-all\"\r\n      (click)=\"showProduct = !showProduct\"\r\n    >\r\n      <div class=\"alain-ms__sidebar-product alain-ms__sidebar-product-all-wrap\">\r\n        <i class=\"alain-ms__sidebar-product-icon\" nz-icon nzType=\"appstore\"></i>\r\n        <span class=\"alain-ms__sidebar-product-name\">{{ l.text }}</span>\r\n        <span class=\"alain-ms__sidebar-product-toolbar\">\r\n          <i nz-icon nzType=\"right\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <ul class=\"alain-ms__sidebar-product-quick\">\r\n      <li\r\n        class=\"alain-ms__sidebar-product\"\r\n        *ngFor=\"let i of shortcuts$ | async; let idx = index\"\r\n      >\r\n        <i\r\n          class=\"alain-ms__sidebar-product-icon {{ i.icon }} \"\r\n          [link-to]=\"i\"\r\n          (linkToChanged)=\"showProduct = false\"\r\n        ></i>\r\n        <a\r\n          class=\"alain-ms__sidebar-product-name\"\r\n          [link-to]=\"i\"\r\n          (linkToChanged)=\"showProduct = false\"\r\n        >\r\n          {{ i.name }}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"alain-ms__sidebar-products\">\r\n    <div class=\"alain-ms__products\">\r\n      <div class=\"alain-ms__products-close\" (click)=\"showProduct = false\">\r\n        <i nz-icon nzType=\"close\"></i>\r\n      </div>\r\n      <div class=\"alain-ms__products-left\">\r\n        <div class=\"alain-ms__products-category-wrap\" #categoryEl>\r\n          <div class=\"d-flex\">\r\n            <div\r\n              *ngFor=\"let c of searchList\"\r\n              class=\"alain-ms__products-category-column\"\r\n            >\r\n              <div *ngFor=\"let p of c\" class=\"alain-ms__products-category\">\r\n                <h3\r\n                  class=\"alain-ms__products-category-title\"\r\n                  id=\"product-cat-{{ p._id }}\"\r\n                >\r\n                  {{ p.name }}\r\n                </h3>\r\n                <ul class=\"list-unstyled\">\r\n                  <li\r\n                    *ngFor=\"let i of p.products\"\r\n                    class=\"alain-ms__products-category-item\"\r\n                    [ngClass]=\"{\r\n                      'alain-ms__products-category-item-active': i.shortcut\r\n                    }\"\r\n                  >\r\n                    <a\r\n                      [link-to]=\"i\"\r\n                      (linkToChanged)=\"showProduct = false\"\r\n                      class=\"alain-ms__products-category-item-link\"\r\n                      >{{ i.name }}</a\r\n                    >\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"alain-ms__products-right\">\r\n        <nz-anchor\r\n          nzAffix=\"false\"\r\n          nzContainer=\".alain-ms__products-category-wrap\"\r\n          nzOffsetTop=\"150\"\r\n          nzShowInkInFixed=\"false\"\r\n        >\r\n          <nz-link\r\n            *ngFor=\"let i of searchCategories\"\r\n            nzHref=\"#product-cat-{{ i._id }}\"\r\n            [nzTitle]=\"i.name\"\r\n          ></nz-link>\r\n        </nz-anchor>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Observable } from 'rxjs';\r\nimport { Layout, MSProduct, MSProductCategory, MSProductI18n } from '../../../models';\r\nimport { LayoutStateService } from '../../../services/layout-state.service';\r\nimport { BrandService } from '../../ms.service';\r\nimport { MSProductService } from '../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'ms-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  host: {\r\n    '[class.alain-ms__sidebar]': 'true',\r\n    '[class.alain-ms__sidebar-showproduct]': 'showProduct',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSSidebarComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('categoryEl', { static: false })\r\n  private categoryEl!: ElementRef;\r\n\r\n  showProduct = false;\r\n  inited = false;\r\n\r\n  get store$(): Observable<Layout.State> {\r\n    return this.layoutStateService.getStore$();\r\n  }\r\n\r\n  get shortcuts$(): Observable<MSProduct[]> {\r\n    return this.layoutStateService.getShortcuts$();\r\n  }\r\n\r\n  get l(): MSProductI18n {\r\n    return this.srv.i18n;\r\n  }\r\n\r\n  q = '';\r\n  searchList?: MSProductCategory[][];\r\n  searchCategories: MSProductCategory[] = [];\r\n\r\n  constructor(\r\n    private layoutStateService:LayoutStateService,\r\n    private brand: BrandService,\r\n    private srv: MSProductService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    brand.setSidebar(true);\r\n  }\r\n\r\n  search(scroll: boolean = true): void {\r\n    const res = this.srv.search(this.q);\r\n    this.searchList = res.list;\r\n    this.searchCategories = res.categories;\r\n\r\n    this.cdr.detectChanges();\r\n\r\n    if (scroll) {\r\n      // wait angular render\r\n      setTimeout(() => {\r\n        // 滚动至顶部\r\n        this.categoryEl.nativeElement.scrollTop = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.srv.getData().subscribe((x) => {\r\n      this.inited = true;\r\n      this.search();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setSidebar(false);\r\n  }\r\n}\r\n","<ng-template #defaultLogo>\r\n  <img src=\"./assets/logo-color.svg\" />\r\n</ng-template>\r\n<div class=\"alain-ms__topbar-main\">\r\n  <ms-all-nav *ngIf=\"allNav\"></ms-all-nav>\r\n  <div class=\"alain-ms__topbar-logo\">\r\n    <a routerLink=\"/\" class=\"alain-ms__topbar-logo-img\">\r\n      <img *ngIf=\"appInfo.logoUrl; else defaultLogo\" [src]=\"appInfo.logoUrl\"/>\r\n    </a>\r\n    <a routerLink=\"/\" class=\"alain-ms__topbar-logo-link\">\r\n      {{ appInfo.name }}\r\n    </a>\r\n  </div>\r\n  <!-- <ms-region *ngIf=\"userSrv?.isLogin\" class=\"hidden-md\"></ms-region> -->\r\n</div>\r\n<div class=\"alain-ms__topbar-widget\" *ngIf=\"inited\">\r\n  <!-- 搜索 -->\r\n  <!-- <ms-search class=\"hidden-xs\"></ms-search> -->\r\n  <!-- 消息 -->\r\n  <!-- <ms-notice></ms-notice> -->\r\n  <!-- 菜单 -->\r\n  <!-- <div *ngFor=\"let p of links\" class=\"alain-ms__topbar-item\" [ngClass]=\"p.className\">\r\n    <a class=\"alain-ms__topbar-item-btn\" [link-to]=\"p\">{{ p.text }}</a>\r\n    <ul class=\"alain-ms__topbar-dd-menu\" *ngIf=\"p.links\">\r\n      <li *ngFor=\"let i of p.links\">\r\n        <a class=\"alain-ms__topbar-dd-item\" [link-to]=\"i\">{{ i.text }}</a>\r\n      </li>\r\n    </ul>\r\n  </div> -->\r\n  <!-- 购物车 -->\r\n  <!-- <div class=\"alain-ms__topbar-item hidden-mobile\" class=\"hidden-xs\">\r\n    <a class=\"alain-ms__topbar-item-btn alain-ms__topbar-item-icon\" routerLink=\"/\">\r\n      <i nz-icon nzType=\"shopping-cart\"></i>\r\n    </a>\r\n  </div> -->\r\n  <!-- 语言 -->\r\n  <ms-langs></ms-langs>\r\n  <!-- 用户 -->\r\n  <ms-user></ms-user>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\n// import { UserService } from '@core';\r\nimport { _HttpClient } from '@delon/theme';\r\n\r\nimport {\r\n  MSTopbarNavLink,\r\n  MSTopbarService,\r\n} from '../../services/topbar.service';\r\nimport { ApplicationInfo, EnvironmentService } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'ms-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  host: {\r\n    '[class.alain-ms__topbar]': 'true',\r\n    '[class.alain-ms__topbar-single]': 'allNav',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSTopbarComponent implements OnInit {\r\n  get appInfo(): ApplicationInfo {\r\n    return this.environment.getEnvironment().application;\r\n  }\r\n  inited = false;\r\n\r\n  links!: MSTopbarNavLink[];\r\n\r\n  @Input() allNav = false;\r\n  userSrv: any;\r\n  constructor(\r\n    private srv: MSTopbarService,\r\n    //  public userSrv: UserService,\r\n    private cdr: ChangeDetectorRef,\r\n    private environment: EnvironmentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getData().subscribe(() => {\r\n      this.inited = true;\r\n      this.mergeLinks();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  private mergeLinks(): void {\r\n    const res = this.srv.data.navLinks!;\r\n    this.links = [res.finance, res.workorder, res.support].map((i) => {\r\n      if (i.className == null) {\r\n        i.className = '';\r\n      }\r\n      if (!i.links || i.links.length === 0) {\r\n        i.links = undefined;\r\n      } else {\r\n        i.className += ' alain-ms__topbar-dd';\r\n      }\r\n      return i;\r\n    });\r\n  }\r\n}\r\n","<div class=\"ms-help__wrap\" nz-popover nzPopoverTrigger=\"click\" [nzPopoverContent]=\"helpTpl\">\r\n  <span class=\"ms-help__text\">\r\n    咨询·建议\r\n  </span>\r\n</div>\r\n<ng-template #helpTpl>\r\n  <div class=\"d-flex align-items-center mb-sm\">\r\n    <i nz-icon nzType=\"phone\" class=\"mr-sm text-xl\"></i>\r\n    <a routerLink=\"/\">\r\n      售前咨询电话\r\n      <div class=\"text-orange text-xs\">xxxx 转 1</div>\r\n    </a>\r\n  </div>\r\n  <div class=\"d-flex align-items-center mb-sm\">\r\n    <i nz-icon nzType=\"customer-service\" class=\"mr-sm text-xl\"></i>\r\n    <a routerLink=\"/smart\">\r\n      智能顾问\r\n      <div class=\"text-grey text-xs\">智能诊断，秒级解答</div>\r\n    </a>\r\n  </div>\r\n  <div class=\"d-flex align-items-center\">\r\n    <i nz-icon nzType=\"edit\" class=\"mr-sm text-xl\"></i>\r\n    <a routerLink=\"/\">\r\n      建议反馈\r\n      <div class=\"text-grey text-xs\">XXX不是完美的，我们渴望您的建议</div>\r\n    </a>\r\n  </div>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'help',\r\n  templateUrl: './help.component.html',\r\n  host: {\r\n    '[class.ms-help]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSHelpComponent {}\r\n","<div class=\"ms-page-bar__title\">\r\n  <h2 *ngIf=\"title\" class=\"ms-page-bar__title-main\">\r\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title | abpLocalization }}</ng-container>\r\n  </h2>\r\n  <div *ngIf=\"subTitle\" class=\"ms-page-bar__title-sub\">\r\n    <ng-container *nzStringTemplateOutlet=\"subTitle\">{{ subTitle | abpLocalization }}</ng-container>\r\n  </div>\r\n</div>\r\n<div class=\"ms-page-bar__action\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Menu, MenuService } from '@delon/theme';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-bar',\r\n  templateUrl: './page-bar.component.html',\r\n  host: {\r\n    '[class.ms-page-bar]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageBarComponent implements AfterViewInit, OnDestroy {\r\n  private router$!: Subscription;\r\n  private _menus: Menu[] | null = null;\r\n  private get menus(): Menu[] {\r\n    if (this._menus) {\r\n      return this._menus;\r\n    }\r\n    this._menus = this.menuSrv.getPathByUrl(this.router.url.split('?')[0], this.recursiveBreadcrumb);\r\n\r\n    return this._menus;\r\n  }\r\n\r\n  // #region fields\r\n\r\n  /**\r\n   * 自动生成标题，以当前路由从主菜单中定位\r\n   */\r\n  @Input() @InputBoolean() autoTitle = true;\r\n  @Input() @InputBoolean() recursiveBreadcrumb = true;\r\n  @Input() title?: string; //| TemplateRef<any>;\r\n  @Input() subTitle?: string; //| TemplateRef<any>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private router: Router, private srv: BrandService, private menuSrv: MenuService, private cdr: ChangeDetectorRef) {}\r\n\r\n  private setTitle(): void {\r\n    if (typeof this.title === 'undefined' && this.autoTitle && this.menus.length > 0) {\r\n      const item = this.menus[this.menus.length - 1];\r\n      this.title = item.text;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router$ = merge(\r\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd)),\r\n      this.srv.notify,\r\n      this.menuSrv.change,\r\n    ).subscribe(() => {\r\n      this._menus = null;\r\n      this.setTitle();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.router$.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"ms-page-nav__body\">\r\n  <div class=\"ms-page-nav__stage\">\r\n    <div class=\"ms-page-nav__scene ms-page-nav__scene-main\">\r\n      <div\r\n        class=\"ms-page-nav__title\"\r\n        [ngClass]=\"{ 'ms-page-nav__back': config.backHref }\"\r\n        (click)=\"to(config.backHref!, $event)\"\r\n        [title]=\"config.backHref ? ('ms.page-nav.back' | i18n) : ''\"\r\n      >\r\n        <i *ngIf=\"config.backHref\" nz-icon nzType=\"left\"></i>\r\n        {{ config.title | abpLocalization }}\r\n      </div>\r\n      <div class=\"ms-page-nav__list scrollbar\">\r\n        <ng-template #treeTpl let-ls let-level=\"level\">\r\n          <li *ngFor=\"let i of ls\">\r\n            <ng-container *ngIf=\"i.children.length == 0\">\r\n              <div\r\n                *ngIf=\"i.link\"\r\n                class=\"ms-page-nav__item\"\r\n                role=\"treeitem\"\r\n                routerLink=\"{{ i.link }}\"\r\n                routerLinkActive=\"ms-page-nav__item-active\"\r\n              >\r\n                <span class=\"ms-page-nav__item-icon\"></span>\r\n                <span class=\"ms-page-nav__item-tit\">{{ i.text }}</span>\r\n                <span *ngIf=\"i.badge\" class=\"ms-page-nav__item-badge\">{{ i.badge }}</span>\r\n              </div>\r\n              <a *ngIf=\"!i.link\" [href]=\"i.externalLink\" [target]=\"i.target\" class=\"ms-page-nav__item\" role=\"treeitem\">\r\n                <span class=\"ms-page-nav__item-icon\"></span>\r\n                <span class=\"ms-page-nav__item-tit\">{{ i.text }}</span>\r\n                <span *ngIf=\"i.badge\" class=\"ms-page-nav__item-badge\">{{ i.badge }}</span>\r\n              </a>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"i.children.length > 0\">\r\n              <div class=\"ms-page-nav__item\" role=\"treeitem\" (click)=\"i.active = !i.active\">\r\n                <span class=\"ms-page-nav__item-icon\">\r\n                  <i nz-icon [nzType]=\"i.active ? 'caret-down' : 'caret-right'\"></i>\r\n                </span>\r\n                <span class=\"ms-page-nav__item-tit\">{{ i.text }}</span>\r\n              </div>\r\n              <ul role=\"tree\" class=\"list-unstyled\" [ngClass]=\"{ 'd-none': !i.active }\">\r\n                <ng-container *ngTemplateOutlet=\"treeTpl; context: { $implicit: i.children, level: level + 1 }\"></ng-container>\r\n              </ul>\r\n            </ng-container>\r\n          </li>\r\n        </ng-template>\r\n        <ul role=\"tree\" class=\"list-unstyled\">\r\n          <ng-container *ngTemplateOutlet=\"treeTpl; context: { $implicit: list, level: 1 }\"></ng-container>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"ms-page-nav__control\" (click)=\"toggle()\">\r\n  <div class=\"ms-page-nav__control-wrap\">\r\n    <div class=\"ms-page-nav__control-bg\"></div>\r\n    <div class=\"ms-page-nav__control-btn\">\r\n      <i nz-icon nzType=\"menu-fold\"></i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, OnChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ALAIN_I18N_TOKEN, MenuService, TitleService } from '@delon/theme';\r\n\r\n// import { I18NService } from '@core';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from '../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-nav',\r\n  templateUrl: './page-nav.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageNavComponent implements OnChanges {\r\n  private _config: MSServiceNavConfig = {};\r\n  @Input()\r\n  set config(val: MSServiceNavConfig) {\r\n    const { title, titleI18n, backHref, doc, docI18n } = val;\r\n    // this.titSrv.setTitle(docI18n ? this.i18n.fanyi(docI18n) : doc);\r\n    // this._config.title = titleI18n ? this.i18n.fanyi(titleI18n) : title;\r\n    this._config.title=title;\r\n    this._config.backHref = backHref || '';\r\n  }\r\n  get config(): MSServiceNavConfig {\r\n    return this._config;\r\n  }\r\n\r\n  private _menus: MSMenu[] = [];\r\n  @Input()\r\n  set list(list: MSMenu[]) {\r\n    this.menuSrv.add(list);\r\n    this.menuSrv.visit(list, (i) => (i.active = true));\r\n    this._menus = this.menuSrv.menus;\r\n  }\r\n  get list(): MSMenu[] {\r\n    return this._menus;\r\n  }\r\n\r\n  constructor(\r\n    private srv: BrandService,\r\n    private router: Router,\r\n    private titSrv: TitleService,\r\n    private menuSrv: MenuService,\r\n    //@Inject(ALAIN_I18N_TOKEN) private i18n: I18NService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  to(url: string, e: MouseEvent): void {\r\n    e.preventDefault();\r\n    if (!url) {\r\n      return;\r\n    }\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  toggle(): void {\r\n    this.srv.hideNav = !this.srv.hideNav;\r\n    this.srv.triggerNotify('page-nav');\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<div class=\"ms-page-single__bar\">\r\n  <div class=\"ms-page-single__wrap\" [ngClass]=\"{ 'ms-page-single__wide': wide }\">\r\n    <div class=\"ms-page-single__bar-desc\">\r\n      <div *ngIf=\"title\" class=\"ms-page-single__bar-title\">\r\n        <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\r\n      </div>\r\n      <div *ngIf=\"subTitle\" class=\"ms-page-single__bar-sub-title\">\r\n        <ng-container *nzStringTemplateOutlet=\"subTitle\">{{ subTitle }}</ng-container>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"extra\" class=\"ms-page-single__bar-extra\">\r\n      <ng-container *nzStringTemplateOutlet=\"extra\">{{ extra }}</ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"ms-page-single__wrap ms-page-single__body\" [ngClass]=\"{ 'ms-page-single__wide': wide }\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'page-single',\r\n  templateUrl: './page-single.component.html',\r\n  host: {\r\n    '[class.ms-page-single]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPageSingleComponent implements OnInit, OnChanges, OnDestroy {\r\n  // #region fileds\r\n\r\n  @Input() @InputBoolean() wide = true;\r\n  @Input() @InputBoolean() fixed = false;\r\n  @Input() title?: string | TemplateRef<void>;\r\n  @Input() subTitle?: string | TemplateRef<void>;\r\n  @Input() extra?: string | TemplateRef<void>;\r\n\r\n  // #endregion\r\n\r\n  constructor(private brand: BrandService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {\r\n    this.brand.setFixed(this.fixed);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.brand.setFixed(false);\r\n  }\r\n}\r\n","<div class=\"ms-panel__hd\">\r\n  <div *ngIf=\"title\" class=\"ms-panel__hd-title\">\r\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\r\n  </div>\r\n  <div *ngIf=\"extra\" class=\"ms-panel__hd-extra\">\r\n    <ng-container *nzStringTemplateOutlet=\"extra\">{{ extra }}</ng-container>\r\n  </div>\r\n</div>\r\n<div class=\"ms-panel__bd\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  host: {\r\n    '[class.ms-panel]': 'true',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MSPanelComponent {\r\n  // #region fields\r\n\r\n  @Input() title?: string | TemplateRef<any>;\r\n  @Input() extra?: string | TemplateRef<any>;\r\n\r\n  // #endregion\r\n}\r\n","<div class=\"alain-ms__product\" [ngClass]=\"{ 'alain-ms__product-col-1': nav && !hideNav }\">\r\n  <page-nav *ngIf=\"nav\" [config]=\"navConfig\" [list]=\"navList\"></page-nav>\r\n  <div class=\"alain-ms__product-body scrollbar\">\r\n    <div [ngClass]=\"{'alain-ms__console':hasConsoleCss}\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { InputBoolean } from '@delon/util';\r\n\r\nimport { MSMenu, MSServiceNavConfig } from './../../../models/layout';\r\nimport { BrandService } from '../../ms.service';\r\n\r\n@Component({\r\n  selector: 'service-layout',\r\n  templateUrl: './service-layout.component.html',\r\n})\r\nexport class MSServiceLayoutComponent {\r\n  @Input() @InputBoolean() nav = false;\r\n  @Input() navConfig: MSServiceNavConfig = {};\r\n  @Input() navList: MSMenu[] = [];\r\n  @Input() hasConsoleCss:boolean = true;\r\n\r\n  get hideNav(): boolean {\r\n    return this.srv.hideNav;\r\n  }\r\n\r\n  constructor(private srv: BrandService) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AlainThemeModule } from '@delon/theme';\r\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\nimport { MSHelpComponent } from './help/help.component';\r\nimport { MSLinkToDirective } from './link-to/link-to.directive';\r\nimport { MSPageBarComponent } from './page-bar/page-bar.component';\r\nimport { MSPageNavComponent } from './page-nav/page-nav.component';\r\nimport { MSPageSingleComponent } from './page-single/page-single.component';\r\nimport { MSPanelComponent } from './panel/panel.component';\r\nimport { MSServiceLayoutComponent } from './service-layout/service-layout.component';\r\nimport { LocalizationModule } from '@abp/ng.core';\r\n\r\nconst COMPONENTS = [\r\n  MSHelpComponent,\r\n  MSLinkToDirective,\r\n  MSPageBarComponent,\r\n  MSPageNavComponent,\r\n  MSPageSingleComponent,\r\n  MSPanelComponent,\r\n  MSServiceLayoutComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, FormsModule, AlainThemeModule.forChild(), NzPopoverModule, NzIconModule, NzOutletModule, LocalizationModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class MSSharedModule {}\r\n","<ms-topbar [allNav]=\"hasAllNav\"></ms-topbar>\r\n<ms-sidebar *ngIf=\"hasSidebar\"></ms-sidebar>\r\n<div class=\"brand-page-loading\" [hidden]=\"!isFetching\">\r\n  <nz-spin nzSpinning></nz-spin>\r\n</div>\r\n<div class=\"alain-ms__body\" [hidden]=\"isFetching\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<!-- <help></help>\r\n<theme-btn></theme-btn> -->\r\n","import { BreakpointObserver, MediaMatcher } from '@angular/cdk/layout';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Component, ElementRef, Inject, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, NavigationError, RouteConfigLoadStart, Router } from '@angular/router';\r\nimport { ReuseTabService } from '@delon/abc/reuse-tab';\r\nimport { updateHostClass } from '@delon/util';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { BrandService } from './ms.service';\r\n\r\n@Component({\r\n  selector: 'layout-ms',\r\n  templateUrl: './ms.component.html',\r\n})\r\nexport class MSLayoutComponent implements OnInit, OnDestroy {\r\n  private notify$!: Subscription;\r\n  private queryCls?: string;\r\n  isFetching = false;\r\n  // 是否单页，单页不显示侧边栏\r\n  hasAllNav = false;\r\n  hasSidebar = true;\r\n\r\n  get isMobile(): boolean {\r\n    return this.srv.isMobile;\r\n  }\r\n\r\n  private get body(): HTMLElement {\r\n    return this.doc.body;\r\n  }\r\n\r\n  constructor(\r\n    bm: BreakpointObserver,\r\n    mediaMatcher: MediaMatcher,\r\n    router: Router,\r\n    route: ActivatedRoute,\r\n    msg: NzMessageService,\r\n    reuseTabSrv: ReuseTabService,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private srv: BrandService,\r\n    @Inject(DOCUMENT) private doc: any,\r\n  ) {\r\n    const routerData = {\r\n      hasAllNav: false,\r\n      hasSidebar: true,\r\n      ...route.snapshot.data,\r\n    };\r\n    this.hasAllNav = routerData.hasAllNav === true;\r\n    this.hasSidebar = routerData.hasSidebar === true;\r\n\r\n    // scroll to top in change page\r\n    router.events.subscribe((evt) => {\r\n      if (!this.isFetching && evt instanceof RouteConfigLoadStart) {\r\n        this.isFetching = true;\r\n        this.scrollToTop();\r\n      }\r\n      if (evt instanceof NavigationError) {\r\n        this.isFetching = false;\r\n        msg.error(`无法加载${evt.url}路由`, { nzDuration: 1000 * 3 });\r\n        return;\r\n      }\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n\r\n      this.isFetching = false;\r\n      // If have already cached router, should be don't need scroll to top\r\n      if (reuseTabSrv.exists(evt.url)) {\r\n        return;\r\n      }\r\n\r\n      this.scrollToTop();\r\n    });\r\n\r\n    // media\r\n    const query: { [key: string]: string } = {\r\n      'screen-xs': '(max-width: 575px)',\r\n      'screen-sm': '(min-width: 576px) and (max-width: 767px)',\r\n      'screen-md': '(min-width: 768px) and (max-width: 991px)',\r\n      'screen-lg': '(min-width: 992px) and (max-width: 1199px)',\r\n      'screen-xl': '(min-width: 1200px)',\r\n    };\r\n    bm.observe([\r\n      '(min-width: 1200px)',\r\n      '(min-width: 992px) and (max-width: 1199px)',\r\n      '(min-width: 768px) and (max-width: 991px)',\r\n      '(min-width: 576px) and (max-width: 767px)',\r\n      '(max-width: 575px)',\r\n    ]).subscribe(() => {\r\n      this.queryCls = Object.keys(query).find((key) => mediaMatcher.matchMedia(query[key]).matches);\r\n      this.setClass();\r\n    });\r\n  }\r\n\r\n  private scrollToTop(): void {\r\n    const el: HTMLElement = this.doc.querySelector('.alain-ms__product-body');\r\n    if (!el) {\r\n      return;\r\n    }\r\n    el.scrollTop = 0;\r\n  }\r\n\r\n  private setClass(): void {\r\n    const { el, renderer, queryCls } = this;\r\n    updateHostClass(\r\n      el.nativeElement,\r\n      renderer,\r\n      {\r\n        ['alain-ms']: true,\r\n        [queryCls!]: true,\r\n      },\r\n      true,\r\n    );\r\n  }\r\n\r\n  private setBodyClass(): void {\r\n    const { hasTopbar, hasSidebar, hasFixed, colorWeak } = this.srv.layout;\r\n    updateHostClass(this.body, this.renderer, {\r\n      'color-weak': colorWeak,\r\n      ['alain-ms__has-topbar']: hasTopbar,\r\n      ['alain-ms__has-sidebar']: hasSidebar,\r\n      ['alain-ms__has-fixed']: hasFixed,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notify$ = this.srv.notify.subscribe(() => {\r\n      this.setClass();\r\n      this.setBodyClass();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notify$.unsubscribe();\r\n    this.body.classList.remove('alain-ms__has-topbar', 'alain-ms__has-sidebar', 'alain-ms__has-fixed');\r\n  }\r\n}\r\n","import {\r\n  RoutesService,\r\n  LocalizationPipe,\r\n  PermissionService,\r\n} from '@abp/ng.core';\r\nimport { APP_INITIALIZER, inject, Injector } from '@angular/core';\r\nimport {\r\n  ResolveEnd,\r\n  Router\r\n} from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../services/layout-state.service';\r\n\r\nexport const LAYOUT_INIT_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: init,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function init(injector: Injector) {\r\n  return () => {\r\n    listenRouter(injector);\r\n  };\r\n}\r\n\r\nexport function listenRouter(injector: Injector) {\r\n  const router = injector.get(Router);\r\n  const layoutStateService = injector.get(LayoutStateService);\r\n\r\n  router.events\r\n    .pipe(filter((event): event is ResolveEnd => event instanceof ResolveEnd))\r\n    .subscribe((event) => {\r\n      //const currentUrl = decodeURI(event.state.url.split('?')[0]);\r\n      //layoutStateService.setStore({ currentUrl });\r\n      layoutStateService.fetchPageNavs(event.state);\r\n\r\n    });\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { Inject, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n// import { I18NService } from '@core';\r\nimport { AlainThemeModule, ALAIN_I18N_TOKEN } from '@delon/theme';\r\nimport { ThemeBtnModule } from '@delon/theme/theme-btn';\r\nimport { NzAnchorModule } from 'ng-zorro-antd/anchor';\r\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\n//import { MS_COMPONENTS, MS_SHARED_COMPONENTS } from './ms/index';\r\nimport { MSSharedModule } from './ms/shared/shared.module';\r\nimport { LAYOUT_INIT_PROVIDERS } from './providers/init.provider';\r\nimport { MSAllNavComponent } from './ms/_widgets/all-nav/all-nav.component';\r\nimport { MSSearchComponent } from './ms/_widgets/search/search.component';\r\nimport { MSLangsComponent } from './ms/_widgets/langs/langs.component';\r\nimport { MSUserComponent } from './ms/_widgets/user/user.component';\r\nimport { MSNoticeComponent } from './ms/_widgets/notice/notice.component';\r\nimport { MSRegionComponent } from './ms/_widgets/region/region.component';\r\nimport { MSLayoutComponent } from './ms/ms.component';\r\nimport { MSSidebarComponent } from './ms/components/sidebar/sidebar.component';\r\nimport { MSTopbarComponent } from './ms/components/topbar/topbar.component';\r\nimport { MSHelpComponent } from './ms/shared/help/help.component';\r\nimport { MSPageNavComponent } from './ms/shared/page-nav/page-nav.component';\r\nimport { MSPageBarComponent } from './ms/shared/page-bar/page-bar.component';\r\nimport { MSPageSingleComponent } from './ms/shared/page-single/page-single.component';\r\nimport { MSPanelComponent } from './ms/shared/panel/panel.component';\r\nimport { MSServiceLayoutComponent } from './ms/shared/service-layout/service-layout.component';\r\nimport { MSLinkToDirective } from './ms/shared/link-to/link-to.directive';\r\n// import { default as en_US } from './ms/_i18n/en-US';\r\n// import { default as zh_CN } from './ms/_i18n/zh-CN';\r\n// import { default as zh_TW } from './ms/_i18n/zh-TW';\r\n\r\n\r\nexport const MS_WIDGETS = [MSAllNavComponent, MSSearchComponent, MSLangsComponent, MSUserComponent, MSNoticeComponent, MSRegionComponent];\r\nexport const MS_COMPONENTS = [MSLayoutComponent, MSSidebarComponent, MSTopbarComponent, ...MS_WIDGETS];\r\nexport const MS_SHARED_COMPONENTS = [\r\n  MSHelpComponent,\r\n  MSPageNavComponent,\r\n  MSPageBarComponent,\r\n  MSPageSingleComponent,\r\n  MSPanelComponent,\r\n  MSServiceLayoutComponent,\r\n  MSLinkToDirective,\r\n];\r\n//const MS_COMPONENTS=[]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    DragDropModule,\r\n    MSSharedModule,\r\n    NzSpinModule,\r\n    NzAnchorModule,\r\n    NzAutocompleteModule,\r\n    NzAvatarModule,\r\n    NzDividerModule,\r\n    NzInputModule,\r\n    NzIconModule,\r\n    AlainThemeModule.forChild(),\r\n    ThemeBtnModule,\r\n  ],\r\n  declarations: [...MS_COMPONENTS],\r\n  exports: [...MS_COMPONENTS,MS_SHARED_COMPONENTS]\r\n})\r\nexport class LayoutModule {\r\n  static forRoot(): ModuleWithProviders<LayoutModule> {\r\n    return {\r\n      ngModule: LayoutModule,\r\n      providers: [\r\n        LAYOUT_INIT_PROVIDERS\r\n        //LAYOUT_MENU_PROVIDERS\r\n      ]\r\n    };\r\n  }\r\n  constructor(\r\n    //@Inject(ALAIN_I18N_TOKEN) i18n: I18NService\r\n    ) {\r\n    // i18n.load('zh-CN', zh_CN);\r\n    // i18n.load('zh-TW', zh_TW);\r\n    // i18n.load('en-US', en_US);\r\n  }\r\n}\r\n"]}