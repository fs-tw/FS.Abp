{"version":3,"sources":["../../../../libs/emailing/proxy/src/lib/fs/abp/emailing/emailing-api.service.ts","../../../../libs/emailing/proxy/src/lib/pages/abp/multi-tenancy/abp-tenant.service.ts","../../../../libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/api-exploring/abp-api-definition.service.ts","../../../../libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/application-configurations/abp-application-configuration.service.ts"],"names":["EmailingApiService","restService","_this","this","apiName","getByEmailSettingsGet","EmailSettingsGet","request","method","url","params","providerName","providerKey","updateByEmailSettingsAndProviderNameAndProviderKey","EmailSettings","body","Injectable","args","providedIn","RestService","AbpTenantService","findTenantByIdById","id","findTenantByNameByName","name","AbpApiDefinitionService","getByModel","model","includeTypes","AbpApplicationConfigurationService","get"],"mappings":"weAOAA,EAoBE,SAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EAnBpBE,KAAAC,QAAU,UAEVD,KAAAE,sBAAwB,SAACC,GACvB,OAAAJ,EAAKD,YAAYM,QAA+B,CAC9CC,OAAQ,MACRC,IAAK,mCACLC,OAAQ,CAAEC,aAAcL,EAAiBK,aAAcC,YAAaN,EAAiBM,cAEvF,CAAER,QAASF,EAAKE,WAElBD,KAAAU,mDAAqD,SAACC,EAAiCH,EAAuBC,GAC5G,OAAAV,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,mCACLC,OAAQ,CAAEC,aAAcA,EAAcC,YAAaA,GACnDG,KAAMD,GAER,CAAEV,QAASF,EAAKE,sJArBnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLC,EAAAA,sKCMTC,EAiBE,SAAoBnB,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EAhBpBE,KAAAC,QAAU,UAEVD,KAAAkB,mBAAqB,SAACC,GACpB,OAAApB,EAAKD,YAAYM,QAAkC,CACjDC,OAAQ,MACRC,IAAK,wCAAwCa,GAE/C,CAAElB,QAASF,EAAKE,WAElBD,KAAAoB,uBAAyB,SAACC,GACxB,OAAAtB,EAAKD,YAAYM,QAAkC,CACjDC,OAAQ,MACRC,IAAK,0CAA0Ce,GAEjD,CAAEpB,QAASF,EAAKE,sJAlBnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,iKCOTM,EAWE,SAAoBxB,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EAVpBE,KAAAC,QAAU,UAEVD,KAAAuB,WAAa,SAACC,GACZ,OAAAzB,EAAKD,YAAYM,QAA6C,CAC5DC,OAAQ,MACRC,IAAK,0BACLC,OAAQ,CAAEkB,aAAcD,EAAMC,eAEhC,CAAExB,QAASF,EAAKE,sJAZnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,iHCOTU,EAUE,SAAoB5B,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EATpBE,KAAAC,QAAU,UAEVD,KAAA2B,IAAM,WACJ,OAAA5B,EAAKD,YAAYM,QAA0C,CACzDC,OAAQ,MACRC,IAAK,sCAEP,CAAEL,QAASF,EAAKE,sJAXnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLC,EAAAA","sourcesContent":["import type { EmailSettingsDto, EmailSettingsGetDto } from './dtos/models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmailingApiService {\r\n  apiName = 'Default';\r\n\r\n  getByEmailSettingsGet = (EmailSettingsGet?: EmailSettingsGetDto) =>\r\n    this.restService.request<any, EmailSettingsDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: EmailSettingsGet.providerName, providerKey: EmailSettingsGet.providerKey },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateByEmailSettingsAndProviderNameAndProviderKey = (EmailSettings: EmailSettingsDto, providerName?: string, providerKey?: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: providerName, providerKey: providerKey },\r\n      body: EmailSettings,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { FindTenantResultDto } from '../../../volo/abp/asp-net-core/mvc/multi-tenancy/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpTenantService {\r\n  apiName = 'Default';\r\n\r\n  findTenantByIdById = (id: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-id/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findTenantByNameByName = (name: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { ApplicationApiDescriptionModel, ApplicationApiDescriptionModelRequestDto } from '../../../http/modeling/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApiDefinitionService {\r\n  apiName = 'Default';\r\n\r\n  getByModel = (model: ApplicationApiDescriptionModelRequestDto) =>\r\n    this.restService.request<any, ApplicationApiDescriptionModel>({\r\n      method: 'GET',\r\n      url: `/api/abp/api-definition`,\r\n      params: { includeTypes: model.includeTypes },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { ApplicationConfigurationDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApplicationConfigurationService {\r\n  apiName = 'Default';\r\n\r\n  get = () =>\r\n    this.restService.request<any, ApplicationConfigurationDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/application-configuration`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n"]}