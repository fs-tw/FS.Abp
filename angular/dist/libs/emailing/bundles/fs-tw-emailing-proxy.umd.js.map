{"version":3,"file":"fs-tw-emailing-proxy.umd.js","sources":["../../../../libs/emailing/proxy/src/lib/fs/abp/emailing/emailing-api.service.ts","../../../../libs/emailing/proxy/src/lib/pages/abp/multi-tenancy/abp-tenant.service.ts","../../../../libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/api-exploring/abp-api-definition.service.ts","../../../../libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/application-configurations/abp-application-configuration.service.ts","../../../../libs/emailing/proxy/src/fs-tw-emailing-proxy.ts"],"sourcesContent":["import type { EmailSettingsDto, EmailSettingsGetDto } from './dtos/models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmailingApiService {\r\n  apiName = 'Default';\r\n\r\n  getByEmailSettingsGet = (EmailSettingsGet?: EmailSettingsGetDto) =>\r\n    this.restService.request<any, EmailSettingsDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: EmailSettingsGet.providerName, providerKey: EmailSettingsGet.providerKey },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateByEmailSettingsAndProviderNameAndProviderKey = (EmailSettings: EmailSettingsDto, providerName?: string, providerKey?: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: providerName, providerKey: providerKey },\r\n      body: EmailSettings,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { FindTenantResultDto } from '../../../volo/abp/asp-net-core/mvc/multi-tenancy/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpTenantService {\r\n  apiName = 'Default';\r\n\r\n  findTenantByIdById = (id: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-id/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findTenantByNameByName = (name: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { ApplicationApiDescriptionModel, ApplicationApiDescriptionModelRequestDto } from '../../../http/modeling/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApiDefinitionService {\r\n  apiName = 'Default';\r\n\r\n  getByModel = (model: ApplicationApiDescriptionModelRequestDto) =>\r\n    this.restService.request<any, ApplicationApiDescriptionModel>({\r\n      method: 'GET',\r\n      url: `/api/abp/api-definition`,\r\n      params: { includeTypes: model.includeTypes },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { ApplicationConfigurationDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApplicationConfigurationService {\r\n  apiName = 'Default';\r\n\r\n  get = () =>\r\n    this.restService.request<any, ApplicationConfigurationDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/application-configuration`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","RestService"],"mappings":"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"}