{"version":3,"file":"fs-tw-emailing-config.js","sources":["../../../../libs/emailing/config/src/components/emailing-settings/emailing-settings.component.html","../../../../libs/emailing/config/src/components/emailing-settings/emailing-settings.component.ts","../../../../libs/emailing/config/src/providers/setting-tab.provider.ts","../../../../libs/emailing/config/src/emailing-config.module.ts","../../../../libs/emailing/config/src/providers/route.provider.ts","../../../../libs/emailing/config/src/fs-tw-emailing-config.ts"],"sourcesContent":["<ng-container *ngIf=\"settings$ | async; let settings\">\r\n    <div (keyup.enter)=\"submit(settings)\">\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.DefaultFromAddress' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings.defaultFromAddress\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.DefaultFromDisplayName' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings.defaultFromDisplayName\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Host' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings?.smtp.host\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Port' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings?.smtp.port\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.Smtp.UserName' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings?.smtp.userName\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Password' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings?.smtp.password\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>{{ 'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Domain' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings?.smtp.domain\" />\r\n        </div>\r\n\r\n        <div class=\"custom-checkbox custom-control mb-2\">\r\n            <input type=\"checkbox\" id=\"EnableSsl\" name=\"EnableSsl\"\r\n                class=\"custom-control-input\" [(ngModel)]=\"settings?.smtp.enableSsl\" /><label\r\n                class=\"custom-control-label\" for=\"EnableSsl\">{{\r\n          'AbpEmailing::DisplayName:Abp.Mailing.Smtp.EnableSsl' | abpLocalization\r\n        }}</label>\r\n        </div>\r\n\r\n        <div class=\"custom-checkbox custom-control mb-2\">\r\n            <input type=\"checkbox\" id=\"UseDefaultCredentials\" name=\"UseDefaultCredentials\"\r\n                class=\"custom-control-input\" [(ngModel)]=\"settings?.smtp.useDefaultCredentials\" /><label\r\n                class=\"custom-control-label\" for=\"UseDefaultCredentials\">{{\r\n          'AbpEmailing::DisplayName:Abp.Mailing.Smtp.UseDefaultCredentials' | abpLocalization\r\n        }}</label>\r\n        </div>\r\n    </div>\r\n\r\n    <hr class=\"my-4\" />\r\n\r\n    <div>\r\n        <abp-button (click)=\"submit(settings)\" iconClass=\"fa fa-save\" [loading]=\"loading\">{{\r\n        'AbpAccount::Save' | abpLocalization\r\n      }}</abp-button>\r\n    </div>\r\n</ng-container>","import { AbpApplicationConfigurationService, ConfigStateService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, Injector, ChangeDetectorRef } from '@angular/core';\r\nimport { Fs } from '@fs-tw/emailing/proxy';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'lib-emailing-settings',\r\n  templateUrl: './emailing-settings.component.html'\r\n})\r\nexport class EmailingSettingsComponent implements OnInit {\r\n\r\n  service: Fs.Abp.Emailing.EmailingApiService;\r\n  settings$: Observable<Fs.Abp.Emailing.Dtos.EmailSettingsDto>;\r\n\r\n    // tslint:disable-next-line: variable-name\r\n    private _loading: boolean;\r\n    set loading(value: boolean) {\r\n      this._loading = value;\r\n      this.cdr.markForCheck();\r\n    }\r\n  \r\n    get loading() {\r\n      return this._loading;\r\n    }\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    protected cdr: ChangeDetectorRef,\r\n    protected toaster: ToasterService,\r\n    private configState: ConfigStateService,\r\n    private appConfigService: AbpApplicationConfigurationService,\r\n  ) {\r\n    this.service = this.injector.get(Fs.Abp.Emailing.EmailingApiService);\r\n    this.settings$=this.service.getByEmailSettingsGet({});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  submit(newSettings: any) {\r\n    this.loading = true;\r\n    this.service\r\n      .updateByEmailSettingsAndProviderNameAndProviderKey(newSettings)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(() => {\r\n        this.toaster.success('AbpSettingManagement::SuccessfullySaved', null);\r\n        this.appConfigService.get().subscribe(res => this.configState.setState(res));\r\n      });\r\n  }\r\n}\r\n","import { SettingTabsService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { EmailingSettingsComponent } from '../components/emailing-settings/emailing-settings.component';\r\nimport { eEmailingSettingTabNames } from '../enums/setting-tab-names';\r\n\r\nexport const EMAILING_SETTING_TAB_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureSettingTabs,\r\n    deps: [SettingTabsService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureSettingTabs(settingtabs: SettingTabsService) {\r\n  return () => {\r\n    settingtabs.add([\r\n      {\r\n        name: eEmailingSettingTabNames.Emailing,\r\n        order: 3,\r\n        requiredPolicy: 'AbpEmailing.SettingManagement',\r\n        component: EmailingSettingsComponent,\r\n      },\r\n    ]);\r\n  };\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { EmailingSettingsComponent } from './components/emailing-settings/emailing-settings.component';\r\nimport { EMAILING_ROUTE_PROVIDERS } from './providers/route.provider';\r\nimport { EMAILING_SETTING_TAB_PROVIDERS } from './providers/setting-tab.provider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    ThemeSharedModule\r\n  ],\r\n  declarations: [\r\n    EmailingSettingsComponent\r\n  ]\r\n}\r\n)\r\nexport class EmailingConfigModule {\r\n  static forRoot(): ModuleWithProviders<EmailingConfigModule> {\r\n    return {\r\n      ngModule: EmailingConfigModule,\r\n      providers: [\r\n        //EMAILING_ROUTE_PROVIDERS,\r\n        EMAILING_SETTING_TAB_PROVIDERS\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { eLayoutType, RoutesService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { eEmailingRouteNames } from '../enums/route-names';\r\n\r\nexport const EMAILING_ROUTE_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureRoutes,\r\n    deps: [RoutesService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureRoutes(routesService: RoutesService) {\r\n  return () => {\r\n    routesService.add([\r\n      {\r\n        path: '/emailing',\r\n        name: eEmailingRouteNames.Emailing,\r\n        iconClass: 'fas fa-book',\r\n        layout: eLayoutType.application,\r\n        order: 3,\r\n      },\r\n    ]);\r\n  };\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","i0.ɵɵtemplate"],"mappings":"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"}