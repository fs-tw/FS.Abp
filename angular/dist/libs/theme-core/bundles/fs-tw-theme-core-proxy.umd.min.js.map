{"version":3,"sources":["../esm2015/libs/theme-core/proxy/src/lib/theme/core/files/file.service.ts","../esm2015/libs/theme-core/proxy/src/lib/theme/core/definitions/definitions.service.ts"],"names":["restService","_this","this","apiName","delete","name","request","method","url","getBase64ByName","getByName","put","body","putByNameAndBase64","base64","Injectable","args","providedIn","RestService","createThemeBannerByThemeNoAndInput","themeNo","input","createThemeMenuByThemeNoAndInput","deleteThemeCodeById","id","getThemeByThemeNo","getThemeDefinitionChildren","putBannersForSortByThemeNoAndInput","putThemeMenuByThemeNoAndInput","putThemeSettingByThemeNoAndInput"],"mappings":"ydAgDE,SAAoBA,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EAvCpBE,KAAAC,QAAU,UAEVD,KAAAE,OAAS,SAACC,GACR,OAAAJ,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,SACRC,IAAK,wBAAwBH,GAE/B,CAAEF,QAASF,EAAKE,WAElBD,KAAAO,gBAAkB,SAACJ,GACjB,OAAAJ,EAAKD,YAAYM,QAAqB,CACpCC,OAAQ,MACRC,IAAK,+BAA+BH,GAEtC,CAAEF,QAASF,EAAKE,WAElBD,KAAAQ,UAAY,SAACL,GACX,OAAAJ,EAAKD,YAAYM,QAA4B,CAC3CC,OAAQ,MACRC,IAAK,wBAAwBH,GAE/B,CAAEF,QAASF,EAAKE,WAElBD,KAAAS,IAAM,SAACC,GACL,OAAAX,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,uBACLI,KAAIA,GAEN,CAAET,QAASF,EAAKE,WAElBD,KAAAW,mBAAqB,SAACR,EAAcS,GAClC,OAAAb,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,wBAAwBH,EAC7BO,KAAME,GAER,CAAEX,QAASF,EAAKE,sJAzCnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,qBCsEP,SAAoBlB,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,YAAAA,EA/DpBE,KAAAC,QAAU,UAEVD,KAAAiB,mCAAqC,SAACC,EAAiBC,GACrD,OAAApB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,OACRC,IAAK,0BAA0BY,EAC/BR,KAAMS,GAER,CAAElB,QAASF,EAAKE,WAElBD,KAAAoB,iCAAmC,SAACF,EAAiBC,GACnD,OAAApB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,OACRC,IAAK,wBAAwBY,EAC7BR,KAAMS,GAER,CAAElB,QAASF,EAAKE,WAElBD,KAAAqB,oBAAsB,SAACC,GACrB,OAAAvB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,SACRC,IAAK,mBAAmBgB,GAE1B,CAAErB,QAASF,EAAKE,WAElBD,KAAAuB,kBAAoB,SAACL,GACnB,OAAAnB,EAAKD,YAAYM,QAAuB,CACtCC,OAAQ,MACRC,IAAK,mBAAmBY,GAE1B,CAAEjB,QAASF,EAAKE,WAElBD,KAAAwB,2BAA6B,WAC3B,OAAAzB,EAAKD,YAAYM,QAAuB,CACtCC,OAAQ,MACRC,IAAK,4BAEP,CAAEL,QAASF,EAAKE,WAElBD,KAAAyB,mCAAqC,SAACP,EAAiBC,GACrD,OAAApB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,oCAAoCY,EACzCR,KAAMS,GAER,CAAElB,QAASF,EAAKE,WAElBD,KAAA0B,8BAAgC,SAACR,EAAiBC,GAChD,OAAApB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,wBAAwBY,EAC7BR,KAAMS,GAER,CAAElB,QAASF,EAAKE,WAElBD,KAAA2B,iCAAmC,SAACT,EAAiBC,GACnD,OAAApB,EAAKD,YAAYM,QAAmB,CAClCC,OAAQ,MACRC,IAAK,iCAAiCY,EACtCR,KAAMS,GAER,CAAElB,QAASF,EAAKE,sJAjEnBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLC,EAAAA","sourcesContent":["import type { FilePutDto } from './dtos/models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { IActionResult } from '../../../microsoft/asp-net-core/mvc/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileService {\r\n  apiName = 'Default';\r\n\r\n  delete = (name: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/theme-core/file/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getBase64ByName = (name: string) =>\r\n    this.restService.request<any, string>({\r\n      method: 'GET',\r\n      url: `/api/theme-core/file/base64/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getByName = (name: string) =>\r\n    this.restService.request<any, IActionResult>({\r\n      method: 'GET',\r\n      url: `/api/theme-core/file/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  put = (body: FormData) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/theme-core/file`,\r\n      body\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  putByNameAndBase64 = (name: string, base64: FilePutDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/theme-core/file/${name}`,\r\n      body: base64,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { BannerForCreateDto, BannerForSort, MenuForCreateDto, MenuForUpdateDto, ThemeDto, ThemeForUpdateDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DefinitionsService {\r\n  apiName = 'Default';\r\n\r\n  createThemeBannerByThemeNoAndInput = (themeNo: string, input: BannerForCreateDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'POST',\r\n      url: `/api/theme-core/banner/${themeNo}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  createThemeMenuByThemeNoAndInput = (themeNo: string, input: MenuForCreateDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'POST',\r\n      url: `/api/theme-core/menu/${themeNo}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  deleteThemeCodeById = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/theme-core/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getThemeByThemeNo = (themeNo: string) =>\r\n    this.restService.request<any, ThemeDto>({\r\n      method: 'GET',\r\n      url: `/api/theme-core/${themeNo}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getThemeDefinitionChildren = () =>\r\n    this.restService.request<any, string[]>({\r\n      method: 'GET',\r\n      url: `/api/theme-core/themeNos`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  putBannersForSortByThemeNoAndInput = (themeNo: string, input: BannerForSort) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/theme-core/banners-for-sort/${themeNo}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  putThemeMenuByThemeNoAndInput = (themeNo: string, input: MenuForUpdateDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/theme-core/menu/${themeNo}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  putThemeSettingByThemeNoAndInput = (themeNo: string, input: ThemeForUpdateDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/theme-core/theme-setting/${themeNo}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n"]}