{"version":3,"sources":["../../../../libs/theme/config/src/providers/route.provider.ts","../../../../libs/theme/config/src/default/banner/default-banner-create-form-props.ts","../../../../libs/theme/config/src/default/banner/default-banner-edit-form-props.ts","../../../../libs/theme/config/src/default/banner/default-banner-entity-props.ts","../../../../libs/theme/config/src/services/extensions.service.ts","../../../../libs/theme/config/src/default/banner/default-banner-entity-actions.ts","../../../../libs/theme/config/src/default/banner/default-banner-toolbar-actions.ts","../../../../libs/theme/config/src/default/bannerdefinition/default-bannerdefinition-create-form-props.ts","../../../../libs/theme/config/src/default/bannerdefinition/default-bannerdefinition-edit-form-props.ts","../../../../libs/theme/config/src/default/bannerdefinition/default-bannerdefinition-entity-props.ts","../../../../libs/theme/config/src/default/bannerdefinition/default-bannerdefinition-entity-actions.ts","../../../../libs/theme/config/src/default/bannerdefinition/default-bannerdefinition-toolbar-actions.ts","../../../../libs/theme/config/src/default/route/default-route-create-form-props.ts","../../../../libs/theme/config/src/default/route/default-route-edit-form-props.ts","../../../../libs/theme/config/src/default/route/default-route-entity-props.ts","../../../../libs/theme/config/src/default/route/default-route-entity-actions.ts","../../../../libs/theme/config/src/default/route/default-route-toolbar-actions.ts","../../../../libs/theme/config/src/default/routedefinition/default-routedefinition-create-form-props.ts","../../../../libs/theme/config/src/default/routedefinition/default-routedefinition-edit-form-props.ts","../../../../libs/theme/config/src/default/routedefinition/default-routedefinition-entity-props.ts","../../../../libs/theme/config/src/default/routedefinition/default-routedefinition-entity-actions.ts","../../../../libs/theme/config/src/default/routedefinition/default-routedefinition-toolbar-actions.ts","../../../../libs/theme/config/src/default/websitedefinition/default-websitedefinition-create-form-props.ts","../../../../libs/theme/config/src/default/websitedefinition/default-websitedefinition-edit-form-props.ts","../../../../libs/theme/config/src/default/websitedefinition/default-websitedefinition-entity-props.ts","../../../../libs/theme/config/src/default/websitedefinition/default-websitedefinition-entity-actions.ts","../../../../libs/theme/config/src/default/websitedefinition/default-websitedefinition-toolbar-actions.ts","../../../../libs/theme/config/src/providers/extensions.provider.ts","../../../../libs/theme/config/src/theme-config.module.ts"],"names":["THEME_ROUTE_PROVIDERS","provide","APP_INITIALIZER","useFactory","configureRoutes","deps","RoutesService","multi","routes","shortcut","path","name","layout","parentName","iconClass","order","add","DEFAULT_BANNER_CREATE_FORM_PROPS","FormProp","createMany","type","displayName","id","defaultValue","DEFAULT_BANNER_EDIT_FORM_PROPS","DEFAULT_BANNER_ENTITY_PROPS","EntityProp","sortable","columnWidth","ExtensionsService","this","Actions$","_a","Subject","prototype","action","data","next","Injectable","args","providedIn","DEFAULT_BANNER_ENTITY_ACTIONS","EntityAction","text","getInjected","record","DEFAULT_BANNER_TOOLBAR_ACTIONS","ToolbarAction","icon","DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS","DEFAULT_BANNERDEFINITION_EDIT_FORM_PROPS","DEFAULT_BANNERDEFINITION_ENTITY_PROPS","DEFAULT_BANNERDEFINITION_ENTITY_ACTIONS","DEFAULT_BANNERDEFINITION_TOOLBAR_ACTIONS","DEFAULT_ROUTE_CREATE_FORM_PROPS","DEFAULT_ROUTE_EDIT_FORM_PROPS","DEFAULT_ROUTE_ENTITY_PROPS","DEFAULT_ROUTE_ENTITY_ACTIONS","DEFAULT_ROUTE_TOOLBAR_ACTIONS","DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS","DEFAULT_ROUTEDEFINITION_EDIT_FORM_PROPS","DEFAULT_ROUTEDEFINITION_ENTITY_PROPS","DEFAULT_ROUTEDEFINITION_ENTITY_ACTIONS","DEFAULT_ROUTEDEFINITION_TOOLBAR_ACTIONS","DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS","DEFAULT_WEBSITEDEFINITION_EDIT_FORM_PROPS","DEFAULT_WEBSITEDEFINITION_ENTITY_PROPS","DEFAULT_WEBSITEDEFINITION_ENTITY_ACTIONS","DEFAULT_WEBSITEDEFINITION_TOOLBAR_ACTIONS","EXTENSIONS_PROVIDERS","injector","extensions","get","configState","ConfigStateService","getObjectExtensionEntitiesFromStore","pipe","map","entities","mapEntitiesToContributors","tap","objectExtensionContributors","mergeWithDefaultActions","toolbarActions","entityActions","_b","mergeWithDefaultProps","entityProps","_c","createFormProps","_d","editFormProps","_e","mapTo","toPromise","Injector","ThemeConfigModule","forRoot","ngModule","providers","NgModule"],"mappings":"2nBAMaA,EAAwB,CACnC,CACEC,QAASC,EAAAA,gBACTC,WAAYC,EACZC,KAAM,CAACC,EAAAA,eACPC,OAAO,aAIKH,EAAgBI,GAC9B,IAAIC,EAAW,CACbC,KAAM,SACNC,KAAI,oBACJC,OAAM,cACNC,WAAU,uCACVC,UAAW,oBACXC,MAAO,GAGT,OAAO,WACLP,EAAOQ,IAAI,CACTP,KCxBC,IAAMQ,EAAmCC,EAAAA,SAASC,WAA4C,CAElG,CACCC,KAAI,SACJT,KAAM,KACNU,YAAa,sBACbC,GAAI,KACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAa,+BACbC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,+BACZC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,UACNU,YAAY,2BACZC,GAAI,UACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,eACNU,YAAY,gCACZC,GAAI,eACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,qBACNU,YAAY,sCACZC,GAAI,qBACJC,aAAc,MC3CLC,EAAiCP,ECEjCQ,EAA8BC,EAAAA,WAAWP,WAA4C,CAE9F,CACIC,KAAI,SACJT,KAAM,KACNU,YAAa,sBACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,+BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,+BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,UACNU,YAAa,2BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,eACNU,YAAa,gCACbM,UAAU,EACVC,YAAa,KAGjB,CACIR,KAAI,SACJT,KAAM,qBACNU,YAAa,sCACbM,UAAU,EACVC,YAAa,SC3CrB,0BA0BE,SAAAC,UAlBOC,KAAAC,WAAQC,EAAA,IACb,0BAA2B,IAAIC,EAAAA,QAG/BD,EAAA,oCAAqC,IAAIC,EAAAA,QAGzCD,EAAA,yBAA0B,IAAIC,EAAAA,QAG9BD,EAAA,mCAAoC,IAAIC,EAAAA,QAGxCD,EAAA,qCAAsC,IAAIC,EAAAA,kBAO5CJ,EAAAK,UAAAC,OAAA,SAAUf,EAAwBgB,GAChCN,KAAKC,SAASX,GAAMiB,KAAKD,wHAzB5BE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,qDCJDC,EAAgCC,EAAAA,aAAavB,WAExD,CACA,CACEwB,KAAM,oBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,yBAA0B,CACtCxB,KAAM,OACNkC,OAAQT,EAAKS,WAKnB,CACEF,KAAM,sBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,yBAA0B,CACtCxB,KAAM,SACNkC,OAAQT,EAAKS,aCpBRC,EAAiCC,EAAAA,cAAc5B,WACzB,CACjC,CACEwB,KAAM,KACNR,OAAQ,SAAAC,GACUA,EAAKQ,YAAYf,GACzBM,OAAM,yBAA0B,CACtCxB,KAAM,SAMVqC,KAAM,gBCfGC,EAA6C/B,EAAAA,SAASC,WAAsD,CAEtH,CACCC,KAAI,SACJT,KAAM,KACNU,YAAa,gCACbC,GAAI,KACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAa,yCACbC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,yCACZC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,UACNU,YAAY,qCACZC,GAAI,UACJC,aAAc,MC7BL2B,EAA2CD,ECE3CE,EAAwCzB,EAAAA,WAAWP,WAAsD,CAElH,CACIC,KAAI,SACJT,KAAM,KACNU,YAAa,gCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,yCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,yCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,UACNU,YAAa,qCACbM,UAAU,EACVC,YAAa,OC3BRwB,EAA0CV,EAAAA,aAAavB,WAElE,CACA,CACEwB,KAAM,oBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,mCAAoC,CAChDxB,KAAM,OACNkC,OAAQT,EAAKS,WAKnB,CACEF,KAAM,sBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,mCAAoC,CAChDxB,KAAM,SACNkC,OAAQT,EAAKS,aCpBRQ,EAA2CN,EAAAA,cAAc5B,WACzB,CAC3C,CACEwB,KAAM,KACNR,OAAQ,SAAAC,GACUA,EAAKQ,YAAYf,GACzBM,OAAM,mCAAoC,CAChDxB,KAAM,SAMVqC,KAAM,gBCfGM,EAAkCpC,EAAAA,SAASC,WAA0C,CAE/F,CACCC,KAAI,SACJT,KAAM,KACNU,YAAa,qBACbC,GAAI,KACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAa,8BACbC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,8BACZC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,UACNU,YAAY,0BACZC,GAAI,UACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,8BACZC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,oBACNU,YAAY,oCACZC,GAAI,oBACJC,aAAc,MC3CLgC,EAAgCD,ECEhCE,EAA6B9B,EAAAA,WAAWP,WAA0C,CAE3F,CACIC,KAAI,SACJT,KAAM,KACNU,YAAa,qBACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,8BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,8BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,UACNU,YAAa,0BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,8BACbM,UAAU,EACVC,YAAa,KAGjB,CACIR,KAAI,SACJT,KAAM,oBACNU,YAAa,oCACbM,UAAU,EACVC,YAAa,OC1CR6B,EAA+Bf,EAAAA,aAAavB,WAEvD,CACA,CACEwB,KAAM,oBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,wBAAyB,CACrCxB,KAAM,OACNkC,OAAQT,EAAKS,WAKnB,CACEF,KAAM,sBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,wBAAyB,CACrCxB,KAAM,SACNkC,OAAQT,EAAKS,aCpBRa,EAAgCX,EAAAA,cAAc5B,WAC1B,CAC/B,CACEwB,KAAM,KACNR,OAAQ,SAAAC,GACUA,EAAKQ,YAAYf,GACzBM,OAAM,wBAAyB,CACrCxB,KAAM,SAMVqC,KAAM,gBCfGW,EAA4CzC,EAAAA,SAASC,WAAoD,CAEnH,CACCC,KAAI,SACJT,KAAM,KACNU,YAAa,+BACbC,GAAI,KACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAa,wCACbC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,wCACZC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,UACNU,YAAY,oCACZC,GAAI,UACJC,aAAc,MC7BLqC,EAA0CD,ECE1CE,EAAuCnC,EAAAA,WAAWP,WAAoD,CAE/G,CACIC,KAAI,SACJT,KAAM,KACNU,YAAa,+BACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,wCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,wCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,UACNU,YAAa,oCACbM,UAAU,EACVC,YAAa,OC3BRkC,EAAyCpB,EAAAA,aAAavB,WAEjE,CACA,CACEwB,KAAM,oBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,kCAAmC,CAC/CxB,KAAM,OACNkC,OAAQT,EAAKS,WAKnB,CACEF,KAAM,sBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,kCAAmC,CAC/CxB,KAAM,SACNkC,OAAQT,EAAKS,aCpBRkB,EAA0ChB,EAAAA,cAAc5B,WAC1B,CACzC,CACEwB,KAAM,KACNR,OAAQ,SAAAC,GACUA,EAAKQ,YAAYf,GACzBM,OAAM,kCAAmC,CAC/CxB,KAAM,SAMVqC,KAAM,gBCfGgB,EAA8C9C,EAAAA,SAASC,WAAwD,CAEzH,CACCC,KAAI,SACJT,KAAM,KACNU,YAAa,iCACbC,GAAI,KACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAa,0CACbC,GAAI,cACJC,aAAc,IAEhB,CACEH,KAAI,SACJT,KAAM,cACNU,YAAY,0CACZC,GAAI,cACJC,aAAc,MCtBL0C,EAA4CD,ECE5CE,EAAyCxC,EAAAA,WAAWP,WAAwD,CAErH,CACIC,KAAI,SACJT,KAAM,KACNU,YAAa,iCACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,0CACbM,UAAU,EACVC,YAAa,KAEjB,CACIR,KAAI,SACJT,KAAM,cACNU,YAAa,0CACbM,UAAU,EACVC,YAAa,OCpBRuC,EAA2CzB,EAAAA,aAAavB,WAEnE,CACA,CACEwB,KAAM,oBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,oCAAqC,CACjDxB,KAAM,OACNkC,OAAQT,EAAKS,WAKnB,CACEF,KAAM,sBACNR,OAAQ,SAACC,GACSA,EAAKQ,YAAYf,GACzBM,OAAM,oCAAqC,CACjDxB,KAAM,SACNkC,OAAQT,EAAKS,aCpBRuB,EAA4CrB,EAAAA,cAAc5B,WACxB,CAC7C,CACEwB,KAAM,KACNR,OAAQ,SAAAC,GACUA,EAAKQ,YAAYf,GACzBM,OAAM,oCAAqC,CACjDxB,KAAM,SAMVqC,KAAM,gBCyBGqB,EAAuB,CAClC,CACEpE,QAASC,EAAAA,gBACTC,WAMJ,SAAmBmE,GACjB,OAAO,WACL,IAAMC,EAAgCD,EAASE,IAAI3C,EAAAA,mBAC7C4C,EAAcH,EAASE,IAAIE,EAAAA,oBAEjC,OAAOC,EAAAA,oCAAoCF,EAAa,SACrDG,KACCC,EAAAA,KAAI,SAACC,GAAa,MAAA,MAClBC,EAAAA,0BAA0BN,EAAa,SACvCO,EAAAA,KAAI,SAACC,iBACHC,EAAAA,wBAAwBX,EAAWY,iBAAcnD,EAAA,IAC/C,0BAA2Bc,EAC3Bd,EAAA,oCAAqCqB,EACrCrB,EAAA,yBAA0B0B,EAC1B1B,EAAA,mCAAoC+B,EACpC/B,EAAA,qCAAsCoC,MAIxCc,EAAAA,wBAAwBX,EAAWa,gBAAaC,EAAA,IAC9C,0BAA2B5C,EAC3B4C,EAAA,oCAAqCjC,EACrCiC,EAAA,yBAA0B5B,EAC1B4B,EAAA,mCAAoCvB,EACpCuB,EAAA,qCAAsClB,MAKxCmB,EAAAA,sBAAsBf,EAAWgB,cAAWC,EAAA,IAC1C,0BAA2B/D,EAC3B+D,EAAA,oCAAqCrC,EACrCqC,EAAA,yBAA0BhC,EAC1BgC,EAAA,mCAAoC3B,EACpC2B,EAAA,qCAAsCtB,MAIxCoB,EAAAA,sBAAsBf,EAAWkB,kBAAeC,EAAA,IAC9C,0BAA2BzE,EAC3ByE,EAAA,oCAAqCzC,EACrCyC,EAAA,yBAA0BpC,EAC1BoC,EAAA,mCAAoC/B,EACpC+B,EAAA,qCAAsC1B,MAIxCsB,EAAAA,sBAAsBf,EAAWoB,gBAAaC,EAAA,IAC5C,0BAA2BpE,EAC3BoE,EAAA,oCAAqC1C,EACrC0C,EAAA,yBAA0BrC,EAC1BqC,EAAA,mCAAoChC,EACpCgC,EAAA,qCAAsC3B,SAI1C4B,EAAAA,OAAM,IAEPC,cA/DHzF,KAAM,CAAC0F,EAAAA,UACPxF,OAAO,qBC5CX,SAAAyF,YACSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,CAACnG,EAAsBqE,8BALvC+B,EAAAA","sourcesContent":["import { eLayoutType, RoutesService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { eThemeSharedRouteNames } from '@abp/ng.theme.shared';\r\nimport { eThemeRouteNames } from '../enums/route-names';\r\n// import { eThemesPolicyNames } from '../enums/policy-names';\r\n\r\nexport const THEME_ROUTE_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureRoutes,\r\n    deps: [RoutesService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureRoutes(routes: RoutesService) {\r\n  let shortcut = {\r\n    path: '/theme',\r\n    name: eThemeRouteNames.Theme,\r\n    layout: eLayoutType.application,\r\n    parentName: eThemeSharedRouteNames.Administration,\r\n    iconClass: 'fa fa-folder-open',\r\n    order: 6,\r\n    //requiredPolicy: eThemePolicyNames.DirectoryDescriptor,\r\n  };\r\n  return () => {\r\n    routes.add([\r\n      shortcut\r\n    ]);\r\n  };\r\n}\r\n","import { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\n\r\nexport const DEFAULT_BANNER_CREATE_FORM_PROPS = FormProp.createMany<Fs.Theme.Banners.Dtos.BannerDto>([\r\n  \r\n   {\r\n    type: ePropType.String,\r\n    name: 'no',\r\n    displayName: 'Theme::FS.Banner.No',\r\n    id: 'no',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'displayName',\r\n    displayName: 'Theme::FS.Banner.DisplayName',\r\n    id: 'displayName',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'description',\r\n    displayName:'Theme::FS.Banner.Description',\r\n    id: 'description',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'disable',\r\n    displayName:'Theme::FS.Banner.Disable',\r\n    id: 'disable',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'bannerconfig',\r\n    displayName:'Theme::FS.Banner.BannerConfig',\r\n    id: 'bannerconfig',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'bannerdefinitionid',\r\n    displayName:'Theme::FS.Banner.BannerDefinitionId',\r\n    id: 'bannerdefinitionid',\r\n    defaultValue: \"\",\r\n  },\r\n]);","import { DEFAULT_BANNER_CREATE_FORM_PROPS } from './default-banner-create-form-props';\r\n\r\nexport const DEFAULT_BANNER_EDIT_FORM_PROPS = DEFAULT_BANNER_CREATE_FORM_PROPS;\r\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\nimport {Fs } from '@fs-tw/theme/proxy';\r\nimport { of } from 'rxjs';\r\n\r\nexport const DEFAULT_BANNER_ENTITY_PROPS = EntityProp.createMany<Fs.Theme.Banners.Dtos.BannerDto>([\r\n   \r\n    {\r\n        type: ePropType.String,\r\n        name: 'no',\r\n        displayName: 'Theme::FS.Banner.No',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'displayName',\r\n        displayName: 'Theme::FS.Banner.DisplayName',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'description',\r\n        displayName: 'Theme::FS.Banner.Description',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'disable',\r\n        displayName: 'Theme::FS.Banner.Disable',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'bannerconfig',\r\n        displayName: 'Theme::FS.Banner.BannerConfig',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n    ,\r\n    {\r\n        type: ePropType.String,\r\n        name: 'bannerdefinitionid',\r\n        displayName: 'Theme::FS.Banner.BannerDefinitionId',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n]);\r\n","import { Injectable } from '@angular/core';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../enums/route-names';\r\nimport { Subject } from 'rxjs';\r\nexport class ActionItem<T> {\r\n  name: 'Edit' | 'Delete' | 'Add';\r\n  record?: T;\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExtensionsService {\r\n  public Actions$ = {\r\n    [eThemeRouteNames.Banner]: new Subject<\r\n      ActionItem<Fs.Theme.Banners.Dtos.BannerDto>\r\n    >(),\r\n    [eThemeRouteNames.BannerDefinition]: new Subject<\r\n      ActionItem<Fs.Theme.Banners.Dtos.BannerDefinitionDto>\r\n    >(),\r\n    [eThemeRouteNames.Route]: new Subject<\r\n      ActionItem<Fs.Theme.Routes.Dtos.RouteDto>\r\n    >(),\r\n    [eThemeRouteNames.RouteDefinition]: new Subject<\r\n      ActionItem<Fs.Theme.Routes.Dtos.RouteDefinitionDto>\r\n    >(),\r\n    [eThemeRouteNames.WebSiteDefinition]: new Subject<\r\n      ActionItem<Fs.Theme.WebSites.Dtos.WebSiteDefinitionDto>\r\n    >(),\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  action<T>(type: eThemeRouteNames, data?: ActionItem<T>) {\r\n    this.Actions$[type].next(data);\r\n  }\r\n}\r\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\n\r\nexport const DEFAULT_BANNER_ENTITY_ACTIONS = EntityAction.createMany<\r\n  Fs.Theme.Banners.Dtos.BannerDto\r\n>([\r\n  {\r\n    text: 'AbpIdentity::Edit',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Banner, {\r\n        name: 'Edit',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Update',\r\n  },\r\n  {\r\n    text: 'AbpIdentity::Delete',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Banner, {\r\n        name: 'Delete',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Delete',\r\n  },\r\n]);\r\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport {Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\n\r\nexport const DEFAULT_BANNER_TOOLBAR_ACTIONS = ToolbarAction.createMany<\r\nFs.Theme.Banners.Dtos.BannerDto[]>([\r\n  {\r\n    text: '新增',\r\n    action: data => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Banner, {\r\n        name: 'Add'\r\n      });\r\n      //const component = data.getInjected(UsersComponent);\r\n      //component.add();\r\n    },\r\n    //permission: 'AbpIdentity.Users.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\n\r\nexport const DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS = FormProp.createMany<Fs.Theme.Banners.Dtos.BannerDefinitionDto>([\r\n  \r\n   {\r\n    type: ePropType.String,\r\n    name: 'no',\r\n    displayName: 'Theme::FS.BannerDefinition.No',\r\n    id: 'no',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'displayName',\r\n    displayName: 'Theme::FS.BannerDefinition.DisplayName',\r\n    id: 'displayName',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'description',\r\n    displayName:'Theme::FS.BannerDefinition.Description',\r\n    id: 'description',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'disable',\r\n    displayName:'Theme::FS.BannerDefinition.Disable',\r\n    id: 'disable',\r\n    defaultValue: \"\",\r\n  }\r\n]);","import { DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS } from './default-bannerdefinition-create-form-props';\r\n\r\nexport const DEFAULT_BANNERDEFINITION_EDIT_FORM_PROPS = DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS;\r\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { of } from 'rxjs';\r\n\r\nexport const DEFAULT_BANNERDEFINITION_ENTITY_PROPS = EntityProp.createMany<Fs.Theme.Banners.Dtos.BannerDefinitionDto>([\r\n   \r\n    {\r\n        type: ePropType.String,\r\n        name: 'no',\r\n        displayName: 'Theme::FS.BannerDefinition.No',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'displayName',\r\n        displayName: 'Theme::FS.BannerDefinition.DisplayName',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'description',\r\n        displayName: 'Theme::FS.BannerDefinition.Description',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'disable',\r\n        displayName: 'Theme::FS.BannerDefinition.Disable',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n]);\r\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\n\r\nexport const DEFAULT_BANNERDEFINITION_ENTITY_ACTIONS = EntityAction.createMany<\r\n  Fs.Theme.Banners.Dtos.BannerDefinitionDto\r\n>([\r\n  {\r\n    text: 'AbpIdentity::Edit',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.BannerDefinition, {\r\n        name: 'Edit',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Update',\r\n  },\r\n  {\r\n    text: 'AbpIdentity::Delete',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.BannerDefinition, {\r\n        name: 'Delete',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Delete',\r\n  },\r\n]);\r\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\n\r\nexport const DEFAULT_BANNERDEFINITION_TOOLBAR_ACTIONS = ToolbarAction.createMany<\r\nFs.Theme.Banners.Dtos.BannerDefinitionDto[]>([\r\n  {\r\n    text: '新增',\r\n    action: data => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.BannerDefinition, {\r\n        name: 'Add'\r\n      });\r\n      //const component = data.getInjected(UsersComponent);\r\n      //component.add();\r\n    },\r\n    //permission: 'AbpIdentity.Users.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\n\r\nexport const DEFAULT_ROUTE_CREATE_FORM_PROPS = FormProp.createMany<Fs.Theme.Routes.Dtos.RouteDto>([\r\n  \r\n   {\r\n    type: ePropType.String,\r\n    name: 'no',\r\n    displayName: 'Theme::FS.Route.No',\r\n    id: 'no',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'displayName',\r\n    displayName: 'Theme::FS.Route.DisplayName',\r\n    id: 'displayName',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'description',\r\n    displayName:'Theme::FS.Route.Description',\r\n    id: 'description',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'disable',\r\n    displayName:'Theme::FS.Route.Disable',\r\n    id: 'disable',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'routeconfig',\r\n    displayName:'Theme::FS.Route.RouteConfig',\r\n    id: 'routeconfig',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'routedefinitionid',\r\n    displayName:'Theme::FS.Route.RouteDefinitionId',\r\n    id: 'routedefinitionid',\r\n    defaultValue: \"\",\r\n  },\r\n]);","import { DEFAULT_ROUTE_CREATE_FORM_PROPS } from './default-route-create-form-props';\r\n\r\nexport const DEFAULT_ROUTE_EDIT_FORM_PROPS = DEFAULT_ROUTE_CREATE_FORM_PROPS;\r\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { of } from 'rxjs';\r\n\r\nexport const DEFAULT_ROUTE_ENTITY_PROPS = EntityProp.createMany<Fs.Theme.Routes.Dtos.RouteDto>([\r\n   \r\n    {\r\n        type: ePropType.String,\r\n        name: 'no',\r\n        displayName: 'Theme::FS.Route.No',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'displayName',\r\n        displayName: 'Theme::FS.Route.DisplayName',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'description',\r\n        displayName: 'Theme::FS.Route.Description',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'disable',\r\n        displayName: 'Theme::FS.Route.Disable',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'routeconfig',\r\n        displayName: 'Theme::FS.Route.RouteConfig',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n    ,\r\n    {\r\n        type: ePropType.String,\r\n        name: 'routedefinitionid',\r\n        displayName: 'Theme::FS.Route.RouteDefinitionId',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n]);\r\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\n\r\nexport const DEFAULT_ROUTE_ENTITY_ACTIONS = EntityAction.createMany<\r\n  Fs.Theme.Routes.Dtos.RouteDto\r\n>([\r\n  {\r\n    text: 'AbpIdentity::Edit',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Route, {\r\n        name: 'Edit',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Update',\r\n  },\r\n  {\r\n    text: 'AbpIdentity::Delete',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Route, {\r\n        name: 'Delete',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Delete',\r\n  },\r\n]);\r\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\n\r\nexport const DEFAULT_ROUTE_TOOLBAR_ACTIONS = ToolbarAction.createMany<\r\nFs.Theme.Routes.Dtos.RouteDto[]>([\r\n  {\r\n    text: '新增',\r\n    action: data => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.Route, {\r\n        name: 'Add'\r\n      });\r\n      //const component = data.getInjected(UsersComponent);\r\n      //component.add();\r\n    },\r\n    //permission: 'AbpIdentity.Users.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\n\r\nexport const DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS = FormProp.createMany<Fs.Theme.Routes.Dtos.RouteDefinitionDto>([\r\n  \r\n   {\r\n    type: ePropType.String,\r\n    name: 'no',\r\n    displayName: 'Theme::FS.RouteDefinition.No',\r\n    id: 'no',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'displayName',\r\n    displayName: 'Theme::FS.RouteDefinition.DisplayName',\r\n    id: 'displayName',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'description',\r\n    displayName:'Theme::FS.RouteDefinition.Description',\r\n    id: 'description',\r\n    defaultValue: \"\",\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'disable',\r\n    displayName:'Theme::FS.RouteDefinition.Disable',\r\n    id: 'disable',\r\n    defaultValue: \"\",\r\n  }\r\n]);","import { DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS } from './default-routedefinition-create-form-props';\r\n\r\nexport const DEFAULT_ROUTEDEFINITION_EDIT_FORM_PROPS = DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS;\r\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { of } from 'rxjs';\r\n\r\nexport const DEFAULT_ROUTEDEFINITION_ENTITY_PROPS = EntityProp.createMany<Fs.Theme.Routes.Dtos.RouteDefinitionDto>([\r\n   \r\n    {\r\n        type: ePropType.String,\r\n        name: 'no',\r\n        displayName: 'Theme::FS.RouteDefinition.No',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'displayName',\r\n        displayName: 'Theme::FS.RouteDefinition.DisplayName',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'description',\r\n        displayName: 'Theme::FS.RouteDefinition.Description',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'disable',\r\n        displayName: 'Theme::FS.RouteDefinition.Disable',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n]);\r\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\n\r\nexport const DEFAULT_ROUTEDEFINITION_ENTITY_ACTIONS = EntityAction.createMany<\r\n  Fs.Theme.Routes.Dtos.RouteDefinitionDto\r\n>([\r\n  {\r\n    text: 'AbpIdentity::Edit',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.RouteDefinition, {\r\n        name: 'Edit',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Update',\r\n  },\r\n  {\r\n    text: 'AbpIdentity::Delete',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.RouteDefinition, {\r\n        name: 'Delete',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Delete',\r\n  },\r\n]);\r\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\n\r\nexport const DEFAULT_ROUTEDEFINITION_TOOLBAR_ACTIONS = ToolbarAction.createMany<\r\nFs.Theme.Routes.Dtos.RouteDefinitionDto[]>([\r\n  {\r\n    text: '新增',\r\n    action: data => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.RouteDefinition, {\r\n        name: 'Add'\r\n      });\r\n      //const component = data.getInjected(UsersComponent);\r\n      //component.add();\r\n    },\r\n    //permission: 'AbpIdentity.Users.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\n\r\nexport const DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS = FormProp.createMany<Fs.Theme.WebSites.Dtos.WebSiteDefinitionDto>([\r\n  \r\n   {\r\n    type: ePropType.String,\r\n    name: 'no',\r\n    displayName: 'Theme::FS.WebSiteDefinition.No',\r\n    id: 'no',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'displayName',\r\n    displayName: 'Theme::FS.WebSiteDefinition.DisplayName',\r\n    id: 'displayName',\r\n    defaultValue: \"\"\r\n  },\r\n  {\r\n    type: ePropType.String,\r\n    name: 'description',\r\n    displayName:'Theme::FS.WebSiteDefinition.Description',\r\n    id: 'description',\r\n    defaultValue: \"\",\r\n  }\r\n]);","import { DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS } from './default-websitedefinition-create-form-props';\r\n\r\nexport const DEFAULT_WEBSITEDEFINITION_EDIT_FORM_PROPS = DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS;\r\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { of } from 'rxjs';\r\n\r\nexport const DEFAULT_WEBSITEDEFINITION_ENTITY_PROPS = EntityProp.createMany<Fs.Theme.WebSites.Dtos.WebSiteDefinitionDto>([\r\n   \r\n    {\r\n        type: ePropType.String,\r\n        name: 'no',\r\n        displayName: 'Theme::FS.WebSiteDefinition.No',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'displayName',\r\n        displayName: 'Theme::FS.WebSiteDefinition.DisplayName',\r\n        sortable: true,\r\n        columnWidth: 100,\r\n    },\r\n    {\r\n        type: ePropType.String,\r\n        name: 'description',\r\n        displayName: 'Theme::FS.WebSiteDefinition.Description',\r\n        sortable: true,\r\n        columnWidth: 150,\r\n    }\r\n]);\r\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\n\r\nexport const DEFAULT_WEBSITEDEFINITION_ENTITY_ACTIONS = EntityAction.createMany<\r\n  Fs.Theme.WebSites.Dtos.WebSiteDefinitionDto\r\n>([\r\n  {\r\n    text: 'AbpIdentity::Edit',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.WebSiteDefinition, {\r\n        name: 'Edit',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Update',\r\n  },\r\n  {\r\n    text: 'AbpIdentity::Delete',\r\n    action: (data) => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.WebSiteDefinition, {\r\n        name: 'Delete',\r\n        record: data.record,\r\n      });\r\n    },\r\n    //permission: 'AbpIdentity.Users.Delete',\r\n  },\r\n]);\r\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport { Fs } from '@fs-tw/theme/proxy';\r\nimport { eThemeRouteNames } from '../../enums/route-names';\r\nimport { ExtensionsService } from '../../services/extensions.service';\r\n\r\nexport const DEFAULT_WEBSITEDEFINITION_TOOLBAR_ACTIONS = ToolbarAction.createMany<\r\nFs.Theme.WebSites.Dtos.WebSiteDefinitionDto[]>([\r\n  {\r\n    text: '新增',\r\n    action: data => {\r\n      const service = data.getInjected(ExtensionsService);\r\n      service.action(eThemeRouteNames.WebSiteDefinition, {\r\n        name: 'Add'\r\n      });\r\n      //const component = data.getInjected(UsersComponent);\r\n      //component.add();\r\n    },\r\n    //permission: 'AbpIdentity.Users.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { ConfigStateService } from '@abp/ng.core';\r\nimport {\r\n  ExtensionsService,\r\n  getObjectExtensionEntitiesFromStore,\r\n  mapEntitiesToContributors,\r\n  mergeWithDefaultActions,\r\n  mergeWithDefaultProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { APP_INITIALIZER, Injector } from '@angular/core';\r\nimport { eThemeRouteNames } from '../enums/route-names';\r\nimport { map, mapTo, tap } from 'rxjs/operators';\r\n\r\nimport { DEFAULT_BANNER_CREATE_FORM_PROPS } from '../default/banner/default-banner-create-form-props';\r\nimport { DEFAULT_BANNER_EDIT_FORM_PROPS } from '../default/banner/default-banner-edit-form-props';\r\nimport { DEFAULT_BANNER_ENTITY_PROPS } from '../default/banner/default-banner-entity-props';\r\nimport { DEFAULT_BANNER_ENTITY_ACTIONS } from '../default/banner/default-banner-entity-actions';\r\nimport { DEFAULT_BANNER_TOOLBAR_ACTIONS } from '../default/banner/default-banner-toolbar-actions';\r\n\r\nimport { DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS } from '../default/bannerdefinition/default-bannerdefinition-create-form-props';\r\nimport { DEFAULT_BANNERDEFINITION_EDIT_FORM_PROPS } from '../default/bannerdefinition/default-bannerdefinition-edit-form-props';\r\nimport { DEFAULT_BANNERDEFINITION_ENTITY_PROPS } from '../default/bannerdefinition/default-bannerdefinition-entity-props';\r\nimport { DEFAULT_BANNERDEFINITION_ENTITY_ACTIONS } from '../default/bannerdefinition/default-bannerdefinition-entity-actions';\r\nimport { DEFAULT_BANNERDEFINITION_TOOLBAR_ACTIONS } from '../default/bannerdefinition/default-bannerdefinition-toolbar-actions';\r\n\r\nimport { DEFAULT_ROUTE_CREATE_FORM_PROPS } from '../default/route/default-route-create-form-props';\r\nimport { DEFAULT_ROUTE_EDIT_FORM_PROPS } from '../default/route/default-route-edit-form-props';\r\nimport { DEFAULT_ROUTE_ENTITY_PROPS } from '../default/route/default-route-entity-props';\r\nimport { DEFAULT_ROUTE_ENTITY_ACTIONS } from '../default/route/default-route-entity-actions';\r\nimport { DEFAULT_ROUTE_TOOLBAR_ACTIONS } from '../default/route/default-route-toolbar-actions';\r\n\r\nimport { DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS } from '../default/routedefinition/default-routedefinition-create-form-props';\r\nimport { DEFAULT_ROUTEDEFINITION_EDIT_FORM_PROPS } from '../default/routedefinition/default-routedefinition-edit-form-props';\r\nimport { DEFAULT_ROUTEDEFINITION_ENTITY_PROPS } from '../default/routedefinition/default-routedefinition-entity-props';\r\nimport { DEFAULT_ROUTEDEFINITION_ENTITY_ACTIONS } from '../default/routedefinition/default-routedefinition-entity-actions';\r\nimport { DEFAULT_ROUTEDEFINITION_TOOLBAR_ACTIONS } from '../default/routedefinition/default-routedefinition-toolbar-actions';\r\n\r\nimport { DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS } from '../default/websitedefinition/default-websitedefinition-create-form-props';\r\nimport { DEFAULT_WEBSITEDEFINITION_EDIT_FORM_PROPS } from '../default/websitedefinition/default-websitedefinition-edit-form-props';\r\nimport { DEFAULT_WEBSITEDEFINITION_ENTITY_PROPS } from '../default/websitedefinition/default-websitedefinition-entity-props';\r\nimport { DEFAULT_WEBSITEDEFINITION_ENTITY_ACTIONS } from '../default/websitedefinition/default-websitedefinition-entity-actions';\r\nimport { DEFAULT_WEBSITEDEFINITION_TOOLBAR_ACTIONS } from '../default/websitedefinition/default-websitedefinition-toolbar-actions';\r\n\r\n\r\nexport const EXTENSIONS_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configure,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nfunction configure(injector: Injector) {\r\n  return () => {\r\n    const extensions: ExtensionsService = injector.get(ExtensionsService);\r\n    const configState = injector.get(ConfigStateService);\r\n\r\n    return getObjectExtensionEntitiesFromStore(configState, 'Theme')\r\n      .pipe(\r\n        map((entities) => ({})),\r\n        mapEntitiesToContributors(configState, 'Theme'),\r\n        tap((objectExtensionContributors) => {\r\n          mergeWithDefaultActions(extensions.toolbarActions, {\r\n            [eThemeRouteNames.Banner]: DEFAULT_BANNER_TOOLBAR_ACTIONS,\r\n            [eThemeRouteNames.BannerDefinition]: DEFAULT_BANNERDEFINITION_TOOLBAR_ACTIONS,\r\n            [eThemeRouteNames.Route]: DEFAULT_ROUTE_TOOLBAR_ACTIONS,\r\n            [eThemeRouteNames.RouteDefinition]: DEFAULT_ROUTEDEFINITION_TOOLBAR_ACTIONS,\r\n            [eThemeRouteNames.WebSiteDefinition]: DEFAULT_WEBSITEDEFINITION_TOOLBAR_ACTIONS,\r\n            \r\n          });\r\n\r\n          mergeWithDefaultActions(extensions.entityActions, {\r\n            [eThemeRouteNames.Banner]: DEFAULT_BANNER_ENTITY_ACTIONS,\r\n            [eThemeRouteNames.BannerDefinition]: DEFAULT_BANNERDEFINITION_ENTITY_ACTIONS,\r\n            [eThemeRouteNames.Route]: DEFAULT_ROUTE_ENTITY_ACTIONS,\r\n            [eThemeRouteNames.RouteDefinition]: DEFAULT_ROUTEDEFINITION_ENTITY_ACTIONS,\r\n            [eThemeRouteNames.WebSiteDefinition]: DEFAULT_WEBSITEDEFINITION_ENTITY_ACTIONS,\r\n          \r\n           \r\n          });\r\n\r\n          mergeWithDefaultProps(extensions.entityProps, {\r\n            [eThemeRouteNames.Banner]: DEFAULT_BANNER_ENTITY_PROPS,\r\n            [eThemeRouteNames.BannerDefinition]: DEFAULT_BANNERDEFINITION_ENTITY_PROPS,\r\n            [eThemeRouteNames.Route]: DEFAULT_ROUTE_ENTITY_PROPS,\r\n            [eThemeRouteNames.RouteDefinition]: DEFAULT_ROUTEDEFINITION_ENTITY_PROPS,\r\n            [eThemeRouteNames.WebSiteDefinition]: DEFAULT_WEBSITEDEFINITION_ENTITY_PROPS,\r\n            \r\n          });\r\n\r\n          mergeWithDefaultProps(extensions.createFormProps, {\r\n            [eThemeRouteNames.Banner]: DEFAULT_BANNER_CREATE_FORM_PROPS,\r\n            [eThemeRouteNames.BannerDefinition]: DEFAULT_BANNERDEFINITION_CREATE_FORM_PROPS,\r\n            [eThemeRouteNames.Route]: DEFAULT_ROUTE_CREATE_FORM_PROPS,\r\n            [eThemeRouteNames.RouteDefinition]: DEFAULT_ROUTEDEFINITION_CREATE_FORM_PROPS,\r\n            [eThemeRouteNames.WebSiteDefinition]: DEFAULT_WEBSITEDEFINITION_CREATE_FORM_PROPS,\r\n           \r\n          });\r\n\r\n          mergeWithDefaultProps(extensions.editFormProps, {\r\n            [eThemeRouteNames.Banner]: DEFAULT_BANNER_EDIT_FORM_PROPS,\r\n            [eThemeRouteNames.BannerDefinition]: DEFAULT_BANNERDEFINITION_EDIT_FORM_PROPS,\r\n            [eThemeRouteNames.Route]: DEFAULT_ROUTE_EDIT_FORM_PROPS,\r\n            [eThemeRouteNames.RouteDefinition]: DEFAULT_ROUTEDEFINITION_EDIT_FORM_PROPS,\r\n            [eThemeRouteNames.WebSiteDefinition]: DEFAULT_WEBSITEDEFINITION_EDIT_FORM_PROPS,\r\n           \r\n          });\r\n        }),\r\n        mapTo(true)\r\n      )\r\n      .toPromise();\r\n  };\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { THEME_ROUTE_PROVIDERS } from './providers/route.provider';\r\nimport { EXTENSIONS_PROVIDERS } from './providers/extensions.provider';\r\n@NgModule()\r\nexport class ThemeConfigModule {\r\n  static forRoot(): ModuleWithProviders<ThemeConfigModule> {\r\n    return {\r\n      ngModule: ThemeConfigModule,\r\n      providers: [THEME_ROUTE_PROVIDERS,EXTENSIONS_PROVIDERS],\r\n    };\r\n  }\r\n}\r\n"]}