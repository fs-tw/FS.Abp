//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 4.2.2
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using FS.Customers.Dtos;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;

namespace FS.Customers
{
    public partial class CustomersApi //: ICustomerCrudAppService //auto-generated 
    {
        [HttpGet]
        [Route("customer/id")]
        [NonAction][RemoteService(false)]
        public Task<CustomerWithDetailsDto> GetAsync([FromQuery] CustomerPrimaryKeyDto CustomerPrimaryKey)
        {
            return this.CustomerCrudAppService.GetAsync(CustomerPrimaryKey);
        }

        [HttpGet]
        [Route("customer")]
        [RemoteService(true)]
        public Task<PagedResultDto<CustomerWithDetailsDto>> GetListAsync(CustomerGetListDto CustomerGetList)
        {
            return this.CustomerCrudAppService.GetListAsync(CustomerGetList);
        }

        [HttpPost]
        [Route("customer")]
        [NonAction][RemoteService(false)]
        public Task<CustomerWithDetailsDto> CreateAsync(CustomerCreateDto CustomerCreate)
        {
            return this.CustomerCrudAppService.CreateAsync(CustomerCreate);
        }

        [HttpPut]
        [Route("customer/id")]
        [NonAction][RemoteService(false)]
        public Task<CustomerWithDetailsDto> UpdateAsync([FromQuery] CustomerPrimaryKeyDto CustomerPrimaryKey, CustomerUpdateDto CustomerUpdate)
        {
            return this.CustomerCrudAppService.UpdateAsync(CustomerPrimaryKey,CustomerUpdate);
        }

        [HttpDelete]
        [Route("customer/id")]
        [NonAction][RemoteService(false)]
        public Task DeleteAsync([FromQuery] CustomerPrimaryKeyDto CustomerPrimaryKey)
        {
            return this.CustomerCrudAppService.DeleteAsync(CustomerPrimaryKey);
        }
    }
}
