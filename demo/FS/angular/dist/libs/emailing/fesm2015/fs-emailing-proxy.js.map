{"version":3,"file":"fs-emailing-proxy.js","sources":["../esm2015/libs/emailing/proxy/src/lib/fs/abp/emailing/emailing-api.service.ts","../esm2015/libs/emailing/proxy/src/lib/pages/abp/multi-tenancy/abp-tenant.service.ts","../esm2015/proxy/lib/libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/api-exploring/abp-api-definition.service.ts","../esm2015/proxy/lib/libs/emailing/proxy/src/lib/volo/abp/asp-net-core/mvc/application-configurations/abp-application-configuration.service.ts","../../../../libs/emailing/proxy/src/fs-emailing-proxy.ts"],"sourcesContent":["import type { EmailSettingsDto, EmailSettingsGetDto } from './dtos/models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmailingApiService {\r\n  apiName = 'Default';\r\n\r\n  getByEmailSettingsGet = (EmailSettingsGet?: EmailSettingsGetDto) =>\r\n    this.restService.request<any, EmailSettingsDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: EmailSettingsGet.providerName, providerKey: EmailSettingsGet.providerKey },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateByEmailSettingsAndProviderNameAndProviderKey = (EmailSettings: EmailSettingsDto, providerName?: string, providerKey?: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/abp/emailing/email-settings`,\r\n      params: { providerName: providerName, providerKey: providerKey },\r\n      body: EmailSettings,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { FindTenantResultDto } from '../../../volo/abp/asp-net-core/mvc/multi-tenancy/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpTenantService {\r\n  apiName = 'Default';\r\n\r\n  findTenantByIdById = (id: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-id/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findTenantByNameByName = (name: string) =>\r\n    this.restService.request<any, FindTenantResultDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${name}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { ApplicationApiDescriptionModel, ApplicationApiDescriptionModelRequestDto } from '../../../http/modeling/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApiDefinitionService {\r\n  apiName = 'Default';\r\n\r\n  getByModel = (model: ApplicationApiDescriptionModelRequestDto) =>\r\n    this.restService.request<any, ApplicationApiDescriptionModel>({\r\n      method: 'GET',\r\n      url: `/api/abp/api-definition`,\r\n      params: { includeTypes: model.includeTypes },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { ApplicationConfigurationDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AbpApplicationConfigurationService {\r\n  apiName = 'Default';\r\n\r\n  get = () =>\r\n    this.restService.request<any, ApplicationConfigurationDto>({\r\n      method: 'GET',\r\n      url: `/api/abp/application-configuration`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;MAOa,kBAAkB;IAoB7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAnB5C,YAAO,GAAG,SAAS,CAAC;QAEpB,0BAAqB,GAAG,CAAC,gBAAsC,KAC7D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAwB;YAC9C,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,MAAM,EAAE,EAAE,YAAY,EAAE,gBAAgB,CAAC,YAAY,EAAE,WAAW,EAAE,gBAAgB,CAAC,WAAW,EAAE;SACnG,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,uDAAkD,GAAG,CAAC,aAA+B,EAAE,YAAqB,EAAE,WAAoB,KAChI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY;YAClC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,MAAM,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE;YAChE,IAAI,EAAE,aAAa;SACpB,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAEmB;;;;YAvBjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YALQ,WAAW;;;;;;;;;;;;;;;;;;;MCMP,gBAAgB;IAiB3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAhB5C,YAAO,GAAG,SAAS,CAAC;QAEpB,uBAAkB,GAAG,CAAC,EAAU,KAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAA2B;YACjD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,wCAAwC,EAAE,EAAE;SAClD,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,2BAAsB,GAAG,CAAC,IAAY,KACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAA2B;YACjD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,0CAA0C,IAAI,EAAE;SACtD,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAEmB;;;;YApBjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW;;;;;;;;;;;;;;;;;;MCOP,uBAAuB;IAWlC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAV5C,YAAO,GAAG,SAAS,CAAC;QAEpB,eAAU,GAAG,CAAC,KAA+C,KAC3D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAsC;YAC5D,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,yBAAyB;YAC9B,MAAM,EAAE,EAAE,YAAY,EAAE,KAAK,CAAC,YAAY,EAAE;SAC7C,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAEmB;;;;YAdjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YANQ,WAAW;;;;;;;;;;;;MCOP,kCAAkC;IAU7C,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAT5C,YAAO,GAAG,SAAS,CAAC;QAEpB,QAAG,GAAG,MACJ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAmC;YACzD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,oCAAoC;SAC1C,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAEmB;;;;YAbjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YALQ,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDpB;;;;;;"}