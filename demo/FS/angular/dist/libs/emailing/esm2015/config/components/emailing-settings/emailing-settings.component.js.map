{"version":3,"file":"emailing-settings.component.js","sourceRoot":"../../../../../libs/emailing/config/src/","sources":["components/emailing-settings/emailing-settings.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kCAAkC,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AACtF,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAE,SAAS,EAAU,QAAQ,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,EAAE,EAAE,MAAM,uBAAuB,CAAC;AAE3C,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAM1C,MAAM,OAAO,yBAAyB;IAgBpC,YACY,QAAkB,EAClB,GAAsB,EACtB,OAAuB,EACzB,WAA+B,EAC/B,gBAAoD;QAJlD,aAAQ,GAAR,QAAQ,CAAU;QAClB,QAAG,GAAH,GAAG,CAAmB;QACtB,YAAO,GAAP,OAAO,CAAgB;QACzB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAoC;QAE5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAlBC,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAaH,QAAQ;IACR,CAAC;IACD,MAAM,CAAC,WAAgB;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO;aACT,kDAAkD,CAAC,WAAW,CAAC;aAC/D,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;aAC5C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,yCAAyC,EAAE,IAAI,CAAC,CAAC;YACtE,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;IACP,CAAC;;;YA1CF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,2oGAAiD;aAClD;;;YAR2B,QAAQ;YAAE,iBAAiB;YAD9C,cAAc;YADsB,kBAAkB;YAAtD,kCAAkC","sourcesContent":["import { AbpApplicationConfigurationService, ConfigStateService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, Injector, ChangeDetectorRef } from '@angular/core';\r\nimport { Fs } from '@fs-tw/emailing/proxy';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'lib-emailing-settings',\r\n  templateUrl: './emailing-settings.component.html'\r\n})\r\nexport class EmailingSettingsComponent implements OnInit {\r\n\r\n  service: Fs.Abp.Emailing.EmailingApiService;\r\n  settings$: Observable<Fs.Abp.Emailing.Dtos.EmailSettingsDto>;\r\n\r\n    // tslint:disable-next-line: variable-name\r\n    private _loading: boolean;\r\n    set loading(value: boolean) {\r\n      this._loading = value;\r\n      this.cdr.markForCheck();\r\n    }\r\n  \r\n    get loading() {\r\n      return this._loading;\r\n    }\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    protected cdr: ChangeDetectorRef,\r\n    protected toaster: ToasterService,\r\n    private configState: ConfigStateService,\r\n    private appConfigService: AbpApplicationConfigurationService,\r\n  ) {\r\n    this.service = this.injector.get(Fs.Abp.Emailing.EmailingApiService);\r\n    this.settings$=this.service.getByEmailSettingsGet({});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  submit(newSettings: any) {\r\n    this.loading = true;\r\n    this.service\r\n      .updateByEmailSettingsAndProviderNameAndProviderKey(newSettings)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(() => {\r\n        this.toaster.success('AbpSettingManagement::SuccessfullySaved', null);\r\n        this.appConfigService.get().subscribe(res => this.configState.setState(res));\r\n      });\r\n  }\r\n}\r\n"]}