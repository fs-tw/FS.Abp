{"version":3,"sources":["../../libs/emailing/config/src/components/emailing-settings/emailing-settings.component.ts","../config/src/providers/setting-tab.provider.ts","../../../../libs/emailing/config/src/emailing-config.module.ts","../config/src/providers/route.provider.ts"],"names":["EmailingSettingsComponent","injector","cdr","toaster","configState","appConfigService","this","service","get","Fs","Abp","Emailing","EmailingApiService","settings$","getByEmailSettingsGet","Object","defineProperty","prototype","_loading","value","markForCheck","ngOnInit","submit","newSettings","_this","loading","updateByEmailSettingsAndProviderNameAndProviderKey","pipe","finalize","subscribe","success","res","setState","Component","args","selector","template","Injector","ChangeDetectorRef","ToasterService","ConfigStateService","AbpApplicationConfigurationService","EMAILING_SETTING_TAB_PROVIDERS","provide","APP_INITIALIZER","useFactory","configureSettingTabs","deps","SettingTabsService","multi","settingtabs","add","name","order","requiredPolicy","component","EmailingConfigModule","forRoot","ngModule","providers","NgModule","imports","CoreModule","ThemeSharedModule","declarations","EMAILING_ROUTE_PROVIDERS","configureRoutes","RoutesService","routesService","path","iconClass","layout"],"mappings":"2oBA2BE,SAAAA,EACYC,EACAC,EACAC,EACFC,EACAC,GAJEC,KAAAL,SAAAA,EACAK,KAAAJ,IAAAA,EACAI,KAAAH,QAAAA,EACFG,KAAAF,YAAAA,EACAE,KAAAD,iBAAAA,EAERC,KAAKC,QAAUD,KAAKL,SAASO,IAAIC,EAAAA,GAAGC,IAAIC,SAASC,oBACjDN,KAAKO,UAAUP,KAAKC,QAAQO,sBAAsB,WAjBlDC,OAAAC,eAAIhB,EAAAiB,UAAA,UAAO,KAKX,WACE,OAAOX,KAAKY,cANd,SAAYC,GACVb,KAAKY,SAAWC,EAChBb,KAAKJ,IAAIkB,gDAkBbpB,EAAAiB,UAAAI,SAAA,aAEArB,EAAAiB,UAAAK,OAAA,SAAOC,GAAP,IAAAC,EAAAlB,KACEA,KAAKmB,SAAU,EACfnB,KAAKC,QACFmB,mDAAmDH,GACnDI,KAAKC,EAAAA,UAAS,WAAM,OAACJ,EAAKC,SAAU,MACpCI,WAAU,WACTL,EAAKrB,QAAQ2B,QAAQ,0CAA2C,MAChEN,EAAKnB,iBAAiBG,MAAMqB,WAAU,SAAAE,GAAO,OAAAP,EAAKpB,YAAY4B,SAASD,mCAxC9EE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,+lGAP0BC,EAAAA,gBAAUC,EAAAA,yBAD7BC,EAAAA,sBADoCC,EAAAA,0BAApCC,EAAAA,0CCKIC,EAAiC,CAC5C,CACEC,QAASC,EAAAA,gBACTC,WAAYC,EACZC,KAAM,CAACC,EAAAA,oBACPC,OAAO,aAIKH,EAAqBI,GACnC,OAAO,WACLA,EAAYC,IAAI,CACd,CACEC,KAAI,6BACJC,MAAO,EACPC,eAAgB,gCAChBC,UAAWvD,uBCJnB,SAAAwD,YACSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,CAETjB,8BAhBPkB,EAAAA,SAAQ1B,KAAA,CAAC,CACR2B,QAAS,CACPC,EAAAA,WACAC,EAAAA,mBAEFC,aAAc,CACZhE,WCTSiE,EAA2B,CACtC,CACEtB,QAASC,EAAAA,gBACTC,WAAYqB,EACZnB,KAAM,CAACoB,EAAAA,eACPlB,OAAO,aAIKiB,EAAgBE,GAC9B,OAAO,WACLA,EAAcjB,IAAI,CAChB,CACEkB,KAAM,YACNjB,KAAI,WACJkB,UAAW,cACXC,OAAM,cACNlB,MAAO","sourcesContent":["import { AbpApplicationConfigurationService, ConfigStateService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, Injector, ChangeDetectorRef } from '@angular/core';\r\nimport { Fs } from '@fs/emailing/proxy';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'lib-emailing-settings',\r\n  templateUrl: './emailing-settings.component.html'\r\n})\r\nexport class EmailingSettingsComponent implements OnInit {\r\n\r\n  service: Fs.Abp.Emailing.EmailingApiService;\r\n  settings$: Observable<Fs.Abp.Emailing.Dtos.EmailSettingsDto>;\r\n\r\n    // tslint:disable-next-line: variable-name\r\n    private _loading: boolean;\r\n    set loading(value: boolean) {\r\n      this._loading = value;\r\n      this.cdr.markForCheck();\r\n    }\r\n  \r\n    get loading() {\r\n      return this._loading;\r\n    }\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    protected cdr: ChangeDetectorRef,\r\n    protected toaster: ToasterService,\r\n    private configState: ConfigStateService,\r\n    private appConfigService: AbpApplicationConfigurationService,\r\n  ) {\r\n    this.service = this.injector.get(Fs.Abp.Emailing.EmailingApiService);\r\n    this.settings$=this.service.getByEmailSettingsGet({});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  submit(newSettings: any) {\r\n    this.loading = true;\r\n    this.service\r\n      .updateByEmailSettingsAndProviderNameAndProviderKey(newSettings)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(() => {\r\n        this.toaster.success('AbpSettingManagement::SuccessfullySaved', null);\r\n        this.appConfigService.get().subscribe(res => this.configState.setState(res));\r\n      });\r\n  }\r\n}\r\n","import { SettingTabsService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { EmailingSettingsComponent } from '../components/emailing-settings/emailing-settings.component';\r\nimport { eEmailingSettingTabNames } from '../enums/setting-tab-names';\r\n\r\nexport const EMAILING_SETTING_TAB_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureSettingTabs,\r\n    deps: [SettingTabsService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureSettingTabs(settingtabs: SettingTabsService) {\r\n  return () => {\r\n    settingtabs.add([\r\n      {\r\n        name: eEmailingSettingTabNames.Emailing,\r\n        order: 3,\r\n        requiredPolicy: 'AbpEmailing.SettingManagement',\r\n        component: EmailingSettingsComponent,\r\n      },\r\n    ]);\r\n  };\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { EmailingSettingsComponent } from './components/emailing-settings/emailing-settings.component';\r\nimport { EMAILING_ROUTE_PROVIDERS } from './providers/route.provider';\r\nimport { EMAILING_SETTING_TAB_PROVIDERS } from './providers/setting-tab.provider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    ThemeSharedModule\r\n  ],\r\n  declarations: [\r\n    EmailingSettingsComponent\r\n  ]\r\n}\r\n)\r\nexport class EmailingConfigModule {\r\n  static forRoot(): ModuleWithProviders<EmailingConfigModule> {\r\n    return {\r\n      ngModule: EmailingConfigModule,\r\n      providers: [\r\n        //EMAILING_ROUTE_PROVIDERS,\r\n        EMAILING_SETTING_TAB_PROVIDERS\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { eLayoutType, RoutesService } from '@abp/ng.core';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\nimport { eEmailingRouteNames } from '../enums/route-names';\r\n\r\nexport const EMAILING_ROUTE_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configureRoutes,\r\n    deps: [RoutesService],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function configureRoutes(routesService: RoutesService) {\r\n  return () => {\r\n    routesService.add([\r\n      {\r\n        path: '/emailing',\r\n        name: eEmailingRouteNames.Emailing,\r\n        iconClass: 'fas fa-book',\r\n        layout: eLayoutType.application,\r\n        order: 3,\r\n      },\r\n    ]);\r\n  };\r\n}\r\n"]}