//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating AbpSettings.
// 4.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using Microsoft.Extensions.Options;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Localization;
using Volo.Abp.Options;
using Volo.Abp.Settings;
using Volo.Abp.Threading;
using FS.Abp.Shared;
using FS.Abp.Settings;
using FS.Cms.Localization;


namespace FS.Cms.Core
{
    public partial class CmsSettingNames
    {
        public partial class StorageDefinitionSetting
        {
            private const string Prefix = "FS.Cms.Core.StorageDefinitionSetting";
            public const string UserId = Prefix + ".UserId";
            public const string IsLock = Prefix + ".IsLock";
        }
    }
    public partial class StorageDefinitionSettingSettingDefinitionProvider : SettingDefinitionProvider
    {
        public override void Define(ISettingDefinitionContext context)
        {
            context.Add(
                        new SettingDefinition(CmsSettingNames.StorageDefinitionSetting.UserId, @"", L("DisplayName:StorageDefinitionSetting.UserId"), L("Description:StorageDefinitionSetting.UserId"), false).WithProperty("Type","String"),
                        new SettingDefinition(CmsSettingNames.StorageDefinitionSetting.IsLock, @"", L("DisplayName:StorageDefinitionSetting.IsLock"), L("Description:StorageDefinitionSetting.IsLock"), false).WithProperty("Type","Boolean")
                        );
        }
        private static LocalizableString L(string name)
        {
            return LocalizableString.Create<CmsResource>(name);
        }
    }
    public partial interface IStorageDefinitionSettingFactory : IFactory<StorageDefinitionSetting>, ITransientDependency { }
    public partial class StorageDefinitionSettingFactory : Factory<StorageDefinitionSetting>, IStorageDefinitionSettingFactory
    {
        public StorageDefinitionSettingFactory(
            ISettingProvider settingProvider)
            : base(settingProvider)
        {
        }

        protected override async Task CreateAsync(StorageDefinitionSetting options)
        {
            options.UserId = await _settingProvider.GetOrNullAsync(CmsSettingNames.StorageDefinitionSetting.UserId);
            options.IsLock = await _settingProvider.TryGetAsync(CmsSettingNames.StorageDefinitionSetting.IsLock, options.IsLock);
        }
    }
}
