//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by YinChang.
// 1.102.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using System.Reflection;
using FluentValidation;

namespace FS.Cms.Posts.Dtos
{
    public partial class PostCreateInputValidator : AbstractValidator<PostCreateInput>
    {
        public PostCreateInputValidator()
        {
            RuleFor(p => p.Title)
                .NotNull()
                ;
            RuleFor(p => p.Subtitle)
                .NotNull()
                ;
            RuleFor(p => p.Url)
                .NotNull()
                ;
            RuleFor(p => p.Content)
                .NotNull()
                ;
            RuleFor(p => p.CoverImage)
                .NotNull()
                ;
            RuleFor(p => p.Published)
                .NotNull()
                ;
            RuleFor(p => p.Published_By)
                ;
            RuleFor(p => p.Published_At)
                .NotNull()
                ;
            RuleFor(p => p.ReadCount)
                .NotNull()
                ;
            RuleFor(p => p.BlogId)
                .NotNull()
                ;
            RuleFor(p => p.DisplayMode)
                .NotNull()
                ;
            CustomizeConfiguration();
        }
        partial void CustomizeConfiguration();
    }
    public partial class PostUpdateInputValidator : AbstractValidator<PostUpdateInput>
    {
        public PostUpdateInputValidator()
        {
            RuleFor(p => p.Title)
                .NotNull()
                ;
            RuleFor(p => p.Subtitle)
                .NotNull()
                ;
            RuleFor(p => p.Url)
                .NotNull()
                ;
            RuleFor(p => p.Content)
                .NotNull()
                ;
            RuleFor(p => p.CoverImage)
                .NotNull()
                ;
            RuleFor(p => p.Published)
                .NotNull()
                ;
            RuleFor(p => p.Published_By)
                ;
            RuleFor(p => p.Published_At)
                .NotNull()
                ;
            RuleFor(p => p.ReadCount)
                .NotNull()
                ;
            RuleFor(p => p.BlogId)
                .NotNull()
                ;
            RuleFor(p => p.DisplayMode)
                .NotNull()
                ;
            CustomizeConfiguration();
        }
        partial void CustomizeConfiguration();
    }
}
