//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating CrudApplication.
// 1.102.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;

namespace FS.Cms.Posts
{
    public partial class PostTagMapCrudAppService : 
        FS.Abp.Application.Services.CrudAppService<FS.Cms.Posts.PostTagMap, FS.Cms.Posts.Dtos.PostTagMapWithDetailsDto, Guid, FS.Cms.Posts.Dtos.PostTagMapGetListInput, FS.Cms.Posts.Dtos.PostTagMapCreateInput, FS.Cms.Posts.Dtos.PostTagMapUpdateInput>,
        IPostTagMapCrudAppService
    {
        private readonly IPostTagMapRepository _repository;

        public PostTagMapCrudAppService(IPostTagMapRepository repository) : base(repository)
        {
            this._repository = repository;
        }

        public async Task<PagedResultDto<FS.Cms.Posts.Dtos.PostTagMapWithDetailsDto>> GetPostAsync(FS.Cms.Posts.Dtos.PostTagMapDto.PostForeignKey foreignKey, FS.Abp.Application.Dtos.SearchResultRequestDto searchInput)
        {
            await CheckGetListPolicyAsync().ConfigureAwait(false);
            var query = this.CreatePropertiesEqualityQuery(foreignKey);
            var result = await this.SearchedAndPagedAndSortedOperation.ListAsync(query, searchInput).ConfigureAwait(false);
            return CreatePagedResultDto<FS.Cms.Posts.Dtos.PostTagMapWithDetailsDto>(result);
        }
        public async Task<PagedResultDto<FS.Cms.Posts.Dtos.PostTagMapWithDetailsDto>> GetTagAsync(FS.Cms.Posts.Dtos.PostTagMapDto.TagForeignKey foreignKey, FS.Abp.Application.Dtos.SearchResultRequestDto searchInput)
        {
            await CheckGetListPolicyAsync().ConfigureAwait(false);
            var query = this.CreatePropertiesEqualityQuery(foreignKey);
            var result = await this.SearchedAndPagedAndSortedOperation.ListAsync(query, searchInput).ConfigureAwait(false);
            return CreatePagedResultDto<FS.Cms.Posts.Dtos.PostTagMapWithDetailsDto>(result);
        }


    }
}
