//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// 1.102.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Volo.Abp.EntityFrameworkCore.Modeling;
using FS.Theme.EntityFrameworkCore;

namespace FS.Theme.Banners
{
    public partial class BannerConfiguration : IEntityTypeConfiguration<Banner>
    {
        private ThemeModelBuilderConfigurationOptions options;
        public BannerConfiguration(ThemeModelBuilderConfigurationOptions options)
        {
            this.options = options;
        }
        public void Configure(EntityTypeBuilder<Banner> builder)
        {
            builder.ToTable(options.TablePrefix + @"Banners", options.Schema);
            builder.Property<string>(x => x.No).HasColumnName(@"No").IsRequired().ValueGeneratedNever();
            builder.Property<string>(x => x.DisplayName).HasColumnName(@"DisplayName").IsRequired().ValueGeneratedNever();
            builder.Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever();
            builder.Property<bool>(x => x.Enable).HasColumnName(@"Enable").IsRequired().ValueGeneratedNever().HasDefaultValue(true);
            builder.Ignore(x => x.BannerConfig);
            builder.Property<System.Guid>(x => x.BannerDefinitionId).HasColumnName(@"BannerDefinitionId").ValueGeneratedNever();
            builder.Property<System.Guid?>(x => x.TenantId).HasColumnName(@"TenantId").ValueGeneratedNever();
            builder.HasKey(@"Id");
            builder.HasOne(x => x.BannerDefinition).WithMany(op => op.Banners).IsRequired(true).HasForeignKey(@"BannerDefinitionId");

            builder.ConfigureAuditedAggregateRoot();
            builder.HasIndex(x => x.CreationTime);

            CustomizeConfiguration(builder);
        }

        #region Partial Methods

        partial void CustomizeConfiguration(EntityTypeBuilder<Banner> builder);

        #endregion
    }

}
