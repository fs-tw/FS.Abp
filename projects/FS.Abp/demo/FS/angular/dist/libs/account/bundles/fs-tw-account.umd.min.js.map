{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../libs/account/src/lib/strategies/auth-flow.strategy.ts","../../libs/account/src/lib/services/auth.service.ts","../libs/account/src/lib/components/login/login.component.ts","../libs/account/src/lib/components/manage-profile/manage-profile.component.ts","../../libs/account/src/lib/services/account.service.ts","../libs/account/src/lib/components/register/register.component.ts","../../libs/account/src/lib/guards/authentication-flow.guard.ts","../src/lib/account-routing.module.ts","../libs/account/src/lib/components/auth-wrapper/auth-wrapper.component.ts","../libs/account/src/lib/components/change-password/change-password.component.ts","../libs/account/src/lib/components/personal-settings/personal-settings.component.ts","../libs/account/src/lib/components/tenant-box/tenant-box.component.ts","../../libs/account/src/lib/tokens/options.token.ts","../../libs/account/src/lib/utils/factory-utils.ts","../../libs/account/src/lib/guards/manage-profile.guard.ts","../src/lib/account.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","pop","length","push","create","__read","o","m","r","i","ar","error","__spread","arguments","concat","localStorage","AuthPasswordFlowStrategy","_super","_this","isInternalAuth","String","__","constructor","__extends","login","injector","get","Router","navigateByUrl","checkIfInternalAuth","logout","rest","RestService","configStateService","ConfigStateService","abpApplicationConfigurationService","AbpApplicationConfigurationService","issuer","getDeep","request","method","url","pipe","tap","oAuthService","logOut","switchMap","x","setState","destroy","AuthFlowStrategy","AuthService","environment","router","sessionStateService","options","setStrategy","flow","getEnvironment","oAuthConfig","responseType","strategy","AUTH_FLOW_STRATEGY","Code","listenToSetEnvironment","initLogin","defineProperty","createOnUpdateStream","state","subscribe","init","_a","username","password","tenant","getTenant","from","fetchTokenUsingPasswordFlow","HttpHeaders","assign","id","__tenant","redirectUrl","snq","window","history","take","Injectable","args","providedIn","Injector","EnvironmentService","OAuthService","SessionStateService","Optional","type","Inject","maxLength","Validators","required","minLength","LoginComponent","fb","oauthService","store","toasterService","authService","isSelfRegistrationEnabled","authWrapperKey","ngOnInit","getSetting","toLowerCase","form","group","remember","onSubmit","invalid","inProgress","catchError","err","error_description","message","life","throwError","finalize","Component","selector","template","FormBuilder","Store","ToasterService","ManageProfileComponent","selectedTab","changePasswordKey","personalSettingsKey","dispatch","GetProfile","isProfileLoaded","selectSnapshot","ProfileState","getProfile","isExternal","hideChangePasswordTab","animations","trigger","transition","useAnimation","fadeIn","AccountService","apiName","findTenant","tenantName","register","skipHandleError","email","RegisterComponent","accountService","getPasswordValidators","newUser","userName","emailAddress","appName","AuthenticationFlowGuard","canActivate","replaceableComponent","key","defaultComponent","ɵ1","ɵ2","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","ReplaceableRouteContainerComponent","data","ɵ0","AuthGuard","NgModule","imports","RouterModule","forChild","exports","AuthWrapperComponent","multiTenancy","subscription","enableLocalLogin","tenantBoxKey","isMultiTenancyEnabled$","getDeep$","addOne","getSetting$","exportAs","providers","SubscriptionService","MultiTenancyService","Input","PASSWORD_FIELDS","ChangePasswordComponent","mapErrorsFn","errors","groupErrors","control","indexOf","name","filter","hideCurrentPassword","hasPassword","passwordValidations","newPassword","validators","repeatNewPassword","comparePasswords","removeControl","ChangePassword","currentPassword","reset","success","addControl","FormControl","PersonalSettingsComponent","buildForm","profile","surname","phoneNumber","submit","UpdateProfile","TenantBoxComponent","subscriptionService","currentTenant$","getTenant$","onSwitch","isModalVisible","save","setTenant","modalBusy","tenantId","showError","messageLocalizationParams","ACCOUNT_OPTIONS","InjectionToken","accountOptionsFactory","ManageProfileGuard","environmentService","env","location","href","AccountModule","ngModule","provide","useValue","useFactory","deps","forLazy","LazyModuleFactory","declarations","CoreModule","AccountRoutingModule","ThemeSharedModule","NgbDropdownModule","NgxValidateCoreModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AbpApplicationConfigurationService, AuthFlowStrategy, ConfigStateService, RestService } from '@abp/ng.core';\r\nimport { Router } from '@angular/router';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nexport const oAuthStorage = localStorage;\r\n\r\nexport class AuthPasswordFlowStrategy extends AuthFlowStrategy {\r\n    readonly isInternalAuth = true;\r\n\r\n    login() {\r\n        const router = this.injector.get(Router);\r\n        router.navigateByUrl('/account/login');\r\n    }\r\n\r\n    checkIfInternalAuth() {\r\n        return true;\r\n    }\r\n\r\n    logout() {\r\n        const rest = this.injector.get(RestService);\r\n        const configStateService = this.injector.get(ConfigStateService);\r\n        const abpApplicationConfigurationService = this.injector.get(AbpApplicationConfigurationService);\r\n        const issuer: string = configStateService.getDeep('environment.oAuthConfig.issuer');\r\n\r\n        return rest\r\n            .request(\r\n                {\r\n                    method: 'GET',\r\n                    url: '/api/account/logout',\r\n                },\r\n                null,\r\n                issuer,\r\n            )\r\n            .pipe(\r\n                tap(() => this.oAuthService.logOut()),\r\n                switchMap(() => {\r\n                    return abpApplicationConfigurationService.get()\r\n                        .pipe(tap(x => configStateService.setState(x)))\r\n                }),\r\n            );\r\n    }\r\n\r\n    destroy() { }\r\n}","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Injector, Optional } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  EnvironmentService, ConfigStateService,\r\n  AbpApplicationConfigurationService, SessionStateService, AuthFlowStrategy,\r\n  AUTH_FLOW_STRATEGY\r\n} from '@abp/ng.core';\r\nimport { AuthPasswordFlowStrategy } from '../strategies/auth-flow.strategy'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private flow: string;\r\n  private strategy: AuthFlowStrategy;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private environment: EnvironmentService,\r\n    private oAuthService: OAuthService,\r\n    private abpApplicationConfigurationService: AbpApplicationConfigurationService,\r\n    private router: Router,\r\n    private sessionStateService: SessionStateService,\r\n    private configStateService: ConfigStateService,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {\r\n    this.setStrategy();\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n\r\n  initLogin() {\r\n    this.strategy.login();\r\n  }\r\n\r\n  private setStrategy = () => {\r\n    const flow = this.environment.getEnvironment().oAuthConfig.responseType || 'password';\r\n    if (this.flow === flow) return;\r\n    if (this.strategy) this.strategy.destroy();\r\n    this.flow = flow;\r\n    if (flow === 'password') {\r\n      this.strategy = new AuthPasswordFlowStrategy(this.injector);\r\n    }\r\n    else {\r\n      this.strategy = AUTH_FLOW_STRATEGY.Code(this.injector);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  get isInternalAuth() {\r\n    return this.strategy.isInternalAuth;\r\n  }\r\n\r\n  private listenToSetEnvironment() {\r\n    this.environment.createOnUpdateStream(state => state.oAuthConfig).subscribe(this.setStrategy);\r\n  }\r\n\r\n  async init() {\r\n    return await this.strategy.init();\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.strategy.logout()\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.sessionStateService.getTenant();\r\n\r\n    return from(\r\n      this.oAuthService.fetchTokenUsingPasswordFlow(\r\n        username,\r\n        password,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    ).pipe(\r\n      switchMap(() => {\r\n        return this.abpApplicationConfigurationService.get()\r\n          .pipe(tap(x => this.configStateService.setState(x)))\r\n      }),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.router.navigateByUrl(redirectUrl)\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","//import { AuthService, SetRemember, ConfigState } from '@abp/ng.core';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { eAccountComponents } from '../../enums/components';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n    private configStateService:ConfigStateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n    (this.configStateService.getSetting('Abp.Account.IsSelfRegistrationEnabled') as string ||'').toLowerCase()!=='false';\r\n\r\n      \r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(128)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n    this.authService\r\n      .login(this.form.get('username').value, this.form.get('password').value)\r\n      .pipe(\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe(() => {\r\n        //this.store.dispatch(new SetRemember(this.form.get('remember').value));\r\n      });\r\n  }\r\n}\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetProfile, ProfileState } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n  styles: [\r\n    `\r\n      .min-h-400 {\r\n        min-height: 400px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ManageProfileComponent implements OnInit {\r\n  selectedTab = 0;\r\n\r\n  changePasswordKey = eAccountComponents.ChangePassword;\r\n\r\n  personalSettingsKey = eAccountComponents.PersonalSettings;\r\n\r\n  isProfileLoaded: boolean;\r\n\r\n  hideChangePasswordTab: boolean;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetProfile()).subscribe(() => {\r\n      this.isProfileLoaded = true;\r\n      if (this.store.selectSnapshot(ProfileState.getProfile).isExternal) {\r\n        this.hideChangePasswordTab = true;\r\n        this.selectedTab = 1;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  apiName = 'AbpAccount';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, {\r\n      skipHandleError: true,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","//import { AuthService, ConfigState } from '@abp/ng.core';\r\nimport { AuthService } from '../../services/auth.service'\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { eAccountComponents } from '../../enums/components';\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n    private injector: Injector,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.isSelfRegistrationEnabled =\r\n    //   (\r\n    //     this.store.selectSnapshot(\r\n    //       ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n    //     ) || ''\r\n    //   ).toLowerCase() !== 'false';\r\n    // if (!this.isSelfRegistrationEnabled) {\r\n    //   this.toasterService.warn(\r\n    //     {\r\n    //       key: 'AbpAccount::SelfRegistrationDisabledMessage',\r\n    //       defaultValue: 'Self registration is disabled.',\r\n    //     },\r\n    //     null,\r\n    //     { life: 10000 },\r\n    //   );\r\n    //   return;\r\n    // }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, ...getPasswordValidators(this.injector)]],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() => this.authService.login(newUser.userName, newUser.password)),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","//import { AuthService } from '@abp/ng.core';\r\nimport { AuthService } from '../services/auth.service'\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationFlowGuard implements CanActivate {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  canActivate() {\r\n    if (this.authService.isInternalAuth) return true;\r\n\r\n    this.authService.initLogin();\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  DynamicLayoutComponent,\r\n  AuthGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { eAccountComponents } from './enums/components';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Login,\r\n            defaultComponent: LoginComponent,\r\n          } as ReplaceableComponents.RouteData<LoginComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Register,\r\n            defaultComponent: RegisterComponent,\r\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.ManageProfile,\r\n            defaultComponent: ManageProfileComponent,\r\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { ConfigState, SubscriptionService, MultiTenancyService, ConfigStateService } from '@abp/ng.core';\r\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  exportAs: 'abpAuthWrapper',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class AuthWrapperComponent\r\n  implements Account.AuthWrapperComponentInputs, Account.AuthWrapperComponentOutputs, OnInit {\r\n  @Input()\r\n  readonly mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  readonly cancelContentRef: TemplateRef<any>;\r\n\r\n  isMultiTenancyEnabled$: Observable<boolean>;\r\n\r\n  enableLocalLogin = true;\r\n\r\n  tenantBoxKey = eAccountComponents.TenantBox;\r\n\r\n  constructor(\r\n    public readonly multiTenancy: MultiTenancyService,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.isMultiTenancyEnabled$ = this.configStateService.getDeep$('multiTenancy.isEnabled');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription.addOne(\r\n      this.configStateService.getSetting$('Abp.Account.EnableLocalLogin'),\r\n      value => {\r\n        if (value) {\r\n          this.enableLocalLogin = value.toLowerCase() !== 'false';\r\n        }\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { ChangePassword, ProfileState } from '@abp/ng.core';\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { comparePasswords, Validation } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { required } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n  exportAs: 'abpChangePasswordForm',\r\n})\r\nexport class ChangePasswordComponent\r\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  hideCurrentPassword: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private injector: Injector,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.hideCurrentPassword = !this.store.selectSnapshot(ProfileState.getProfile).hasPassword;\r\n\r\n    const passwordValidations = getPasswordValidators(this.injector);\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n\r\n    if (this.hideCurrentPassword) this.form.removeControl('password');\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          ...(!this.hideCurrentPassword && { currentPassword: this.form.get('password').value }),\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', '', {\r\n            life: 5000,\r\n          });\r\n\r\n          if (this.hideCurrentPassword) {\r\n            this.hideCurrentPassword = false;\r\n            this.form.addControl('password', new FormControl('', [required]));\r\n          }\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n          );\r\n        },\r\n      });\r\n  }\r\n}\r\n","import { ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n  exportAs: 'abpPersonalSettingsForm',\r\n})\r\nexport class PersonalSettingsComponent\r\n  implements\r\n    OnInit,\r\n    Account.PersonalSettingsComponentInputs,\r\n    Account.PersonalSettingsComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    const profile = this.store.selectSnapshot(ProfileState.getProfile);\r\n\r\n    this.form = this.fb.group({\r\n      userName: [profile.userName, [required, maxLength(256)]],\r\n      email: [profile.email, [required, email, maxLength(256)]],\r\n      name: [profile.name || '', [maxLength(64)]],\r\n      surname: [profile.surname || '', [maxLength(64)]],\r\n      phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","// import { ABP, GetAppConfiguration, SessionState, SetTenant } from '@abp/ng.core';\r\nimport { ABP, SessionStateService, CurrentTenantDto, SubscriptionService, AbpApplicationConfigurationService,ConfigStateService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, take, tap } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent\r\n  implements Account.TenantBoxComponentInputs, Account.TenantBoxComponentOutputs {\r\n\r\n  currentTenant$: Observable<CurrentTenantDto>;\r\n\r\n  name: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  modalBusy: boolean;\r\n\r\n  constructor(\r\n    private toasterService: ToasterService,\r\n    private accountService: AccountService,\r\n    private sessionStateService: SessionStateService,\r\n    private subscriptionService: SubscriptionService,\r\n    private abpApplicationConfigurationService: AbpApplicationConfigurationService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.currentTenant$ = this.sessionStateService.getTenant$()\r\n  }\r\n\r\n  onSwitch() {\r\n    const tenant = this.sessionStateService.getTenant();//this.store.selectSnapshot(SessionState.getTenant);\r\n    this.name = (tenant || ({} as ABP.BasicItem)).name;\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (!this.name) {\r\n      this.setTenant(null);\r\n      this.isModalVisible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.accountService\r\n      .findTenant(this.name)\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(({ success, tenantId: id, name }) => {\r\n        if (!success) {\r\n          this.showError();\r\n          return;\r\n        }\r\n\r\n        this.setTenant({ id, name });\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  private setTenant(tenant: ABP.BasicItem) {\r\n    this.sessionStateService.setTenant(tenant as CurrentTenantDto);\r\n    this.subscriptionService.addOne(\r\n      this.sessionStateService.getTenant$(),\r\n      (x) => {\r\n        this.abpApplicationConfigurationService.get().pipe(tap(x => this.configStateService.setState(x))).subscribe();\r\n      });\r\n  }\r\n\r\n  private showError() {\r\n    this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\r\n      messageLocalizationParams: [this.name],\r\n    });\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken<Options>('ACCOUNT_OPTIONS');\r\n","import { Options } from '../models/options';\r\n\r\nexport function accountOptionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { EnvironmentService } from '@abp/ng.core';\r\n\r\n@Injectable()\r\nexport class ManageProfileGuard implements CanActivate {\r\n  constructor(private environmentService: EnvironmentService) {}\r\n\r\n  canActivate(_: ActivatedRouteSnapshot, __: RouterStateSnapshot) {\r\n    const env = this.environmentService.getEnvironment();\r\n    if (env.oAuthConfig.responseType === 'code') {\r\n      window.location.href = `${env.oAuthConfig.issuer}/Account/Manage?returnUrl=${window.location.href}`;\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS } from './tokens/options.token';\r\nimport { accountOptionsFactory } from './utils/factory-utils';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\nimport { ManageProfileGuard } from './guards/manage-profile.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    AccountRoutingModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AccountModule {\r\n  static forChild(options: Options): ModuleWithProviders<AccountModule> {\r\n    return {\r\n      ngModule: AccountModule,\r\n      providers: [\r\n        AuthenticationFlowGuard,\r\n        ManageProfileGuard,\r\n        { provide: ACCOUNT_OPTIONS, useValue: options },\r\n        {\r\n          provide: 'ACCOUNT_OPTIONS',\r\n          useFactory: accountOptionsFactory,\r\n          deps: [ACCOUNT_OPTIONS],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forLazy(options: Options): NgModuleFactory<AccountModule> {\r\n    return new LazyModuleFactory(AccountModule.forChild(options));\r\n  }\r\n}\r\n"]}