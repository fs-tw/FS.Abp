@page "/language-management/languages"
@attribute [Authorize(LanguageManagementPermissions.Languages.Default)]
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.LanguageManagement.Dto;
@using Microsoft.AspNetCore.Components.Forms;
@inherits AbpCrudPageBase<ILanguageAppService, LanguageDto, Guid, GetLanguagesTextsInput, CreateLanguageDto, UpdateLanguageDto>

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Languages"]" BreadcrumbItems="@BreadcrumbItems">
    @if (HasCreatePermission)
    {
        <Column ColumnSize="ColumnSize.IsAuto" Class="px-1 pt-2">
            <Button Color="Color.Primary" Clicked="OpenCreateModalAsync">
                <Icon Name="IconName.Add" Class="mr-1"></Icon>@L["CreateNewLanguage"]
            </Button>
        </Column>
    }
</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <EditForm Model="@GetListInput" OnValidSubmit="@GetEntitiesAsync">
            <Fields Horizontal="true">
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="@L["Search"]" @bind-Text="@GetListInput.Filter" />
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <Button Block="true"
                                Color="Color.Primary"
                                Clicked="GetEntitiesAsync">
                            <Icon Name="IconName.Search" />
                        </Button>
                    </Addon>
                </Addons>
            </Fields>
        </EditForm>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="LanguageDto"
          Data="Entities"
          ReadData="OnDataGridReadAsync"
          TotalItems="TotalCount"
          ShowPager="true"
          PageSize="PageSize">
    <DataGridColumns>
        <DataGridEntityActionsColumn TItem="LanguageDto" @ref="@EntityActionsColumn">
            <DisplayTemplate>
                <EntityActions TItem="LanguageDto" EntityActionsColumn="@EntityActionsColumn">
                    <EntityAction TItem="LanguageDto"
                                  RequiredPolicy="@UpdatePolicyName"
                                  Clicked="() => OpenEditModalAsync(context)"
                                  Text="@L["Edit"]" />
                    <EntityAction TItem="LanguageDto"
                                  RequiredPolicy="@DeletePolicyName"
                                  Clicked="() => DeleteEntityAsync(context)"
                                  ConfirmationMessage="()=>GetDeleteConfirmationMessage(context)"
                                  Text="@L["Delete"]" />
                    <EntityAction TItem="LanguageDto"
                                  RequiredPolicy="@ChangeDefaultPolicyName"
                                  Clicked="() => SetAsDefaultAsync(context)"
                                  Text="@L["SetAsDefaultLanguage"]" />
                </EntityActions>
            </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="LanguageDto" Field="@nameof(LanguageDto.DisplayName)" Sortable="false" Caption="@L["DisplayName"].Value">
            <DisplayTemplate>
                @if (context.IsDefaultLanguage)
                {
                    <strong>@(context.DisplayName)(@L["DefaultLanguage"])</strong>
                }
                else
                {
                    @(context.DisplayName)
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageDto" Field="@nameof(LanguageDto.CultureName)" Sortable="false" Caption="@L["CultureName"].Value">
            <DisplayTemplate>
                @(context.CultureName)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageDto" Field="@nameof(LanguageDto.UiCultureName)" Sortable="false" Caption="@L["UiCultureName"].Value">
            <DisplayTemplate>
                @(context.UiCultureName)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageDto" Field="@nameof(LanguageDto.IsEnabled)" Sortable="false" Caption="@L["IsEnabled"].Value">
            <DisplayTemplate>
                @if (context.IsEnabled)
                {
                    <Icon class="text-success" Name="@IconName.Check" />
                }
                else
                {
                    <Icon class="text-danger" Name="@IconName.Times" />
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="LanguageDto" Field="@nameof(LanguageDto.FlagIcon)" Sortable="false" Caption="@L["FlagIcon"].Value">
            <DisplayTemplate>
                <span class="flag-icon flag-icon-squared flag-icon-@(context.FlagIcon)" title="@(context.DisplayName)"></span>
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal @ref="@CreateModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>@L["CreateNewLanguage"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync" />
            </ModalHeader>
            <ModalBody>
                <EditForm Model="@NewEntity" OnValidSubmit="CreateEntityAsync">
                    <Field>
                        <FieldLabel>@L["CultureName"]</FieldLabel>
                        <InputSelect TValue="string" class="form-control" @bind-Value="@NewEntity.CultureName">
                            @foreach (var culture in Cultures)
                            {
                                <option value="@culture.Name">@culture.DisplayName</option>
                            }
                        </InputSelect>
                    </Field>
                    <Field>
                        <FieldLabel>@L["UiCultureName"]</FieldLabel>
                        <InputSelect TValue="string" class="form-control" @bind-Value="@NewEntity.UiCultureName">
                            @foreach (var uiCulture in Cultures)
                            {
                                <option value="@uiCulture.Name">@uiCulture.DisplayName</option>
                            }
                        </InputSelect>
                    </Field>
                    <Field>
                        <FieldLabel>@L["DisplayName"]</FieldLabel>
                        <TextEdit @bind-text="NewEntity.DisplayName" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["FlagIcon"]</FieldLabel>
                        <InputSelect TValue="string" class="form-control" @bind-Value="@NewEntity.FlagIcon">
                            @foreach (var flag in Flags)
                            {
                                <option value="@flag">@flag</option>
                            }
                        </InputSelect>
                    </Field>
                    <Field>
                        <Check TValue="bool" @bind-checked="NewEntity.IsEnabled">@L["IsEnabled"]</Check>
                    </Field>
                </EditForm>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button form="IdentityRoleCreateForm" Color="Color.Primary" Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal @ref="@EditModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>@L["Edit"]</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync" />
            </ModalHeader>
            <ModalBody>
                <EditForm Model="@EditingEntity" OnValidSubmit="UpdateEntityAsync">
                    <Field>
                        <FieldLabel>@L["DisplayName"]</FieldLabel>
                        <TextEdit @bind-text="EditingEntity.DisplayName" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["FlagIcon"]</FieldLabel>
                        <InputSelect TValue="string" class="form-control" @bind-Value="@EditingEntity.FlagIcon">
                            @foreach (var flag in Flags)
                            {
                                <option value="@flag">@flag</option>
                            }
                        </InputSelect>
                    </Field>
                    <Field>
                        <Check TValue="bool" @bind-checked="@EditingEntity.IsEnabled">@L["IsEnabled"]</Check>
                    </Field>
                </EditForm>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary" Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}
