!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@fs/emailing/proxy"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@fs/emailing/config",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@fs/emailing/proxy","rxjs/operators"],n):n(((e="undefined"!=typeof globalThis?globalThis:e||self).fs=e.fs||{},e.fs.emailing=e.fs.emailing||{},e.fs.emailing.config={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.fs.emailing.proxy,e.rxjs.operators)}(this,(function(e,n,t,i,a,r){"use strict";var o=function(){function e(e,n,t,i,r){this.injector=e,this.cdr=n,this.toaster=t,this.configState=i,this.appConfigService=r,this.service=this.injector.get(a.Fs.Abp.Emailing.EmailingApiService),this.settings$=this.service.getByEmailSettingsGet({})}return Object.defineProperty(e.prototype,"loading",{get:function(){return this._loading},set:function(e){this._loading=e,this.cdr.markForCheck()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.submit=function(e){var n=this;this.loading=!0,this.service.updateByEmailSettingsAndProviderNameAndProviderKey(e).pipe(r.finalize((function(){return n.loading=!1}))).subscribe((function(){n.toaster.success("AbpSettingManagement::SuccessfullySaved",null),n.appConfigService.get().subscribe((function(e){return n.configState.setState(e)}))}))},e}();o.decorators=[{type:i.Component,args:[{selector:"lib-emailing-settings",template:'<ng-container *ngIf="settings$ | async; let settings">\r\n    <div (keyup.enter)="submit(settings)">\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.DefaultFromAddress\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings.defaultFromAddress" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.DefaultFromDisplayName\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings.defaultFromDisplayName" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Host\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings?.smtp.host" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Port\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings?.smtp.port" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.UserName\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings?.smtp.userName" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Password\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings?.smtp.password" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n            <label>{{ \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.Domain\' | abpLocalization }}</label>\r\n            <input type="text" class="form-control" [(ngModel)]="settings?.smtp.domain" />\r\n        </div>\r\n\r\n        <div class="custom-checkbox custom-control mb-2">\r\n            <input type="checkbox" id="EnableSsl" name="EnableSsl"\r\n                class="custom-control-input" [(ngModel)]="settings?.smtp.enableSsl" /><label\r\n                class="custom-control-label" for="EnableSsl">{{\r\n          \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.EnableSsl\' | abpLocalization\r\n        }}</label>\r\n        </div>\r\n\r\n        <div class="custom-checkbox custom-control mb-2">\r\n            <input type="checkbox" id="UseDefaultCredentials" name="UseDefaultCredentials"\r\n                class="custom-control-input" [(ngModel)]="settings?.smtp.useDefaultCredentials" /><label\r\n                class="custom-control-label" for="UseDefaultCredentials">{{\r\n          \'AbpEmailing::DisplayName:Abp.Mailing.Smtp.UseDefaultCredentials\' | abpLocalization\r\n        }}</label>\r\n        </div>\r\n    </div>\r\n\r\n    <hr class="my-4" />\r\n\r\n    <div>\r\n        <abp-button (click)="submit(settings)" iconClass="fa fa-save" [loading]="loading">{{\r\n        \'AbpAccount::Save\' | abpLocalization\r\n      }}</abp-button>\r\n    </div>\r\n</ng-container>'}]}],o.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef},{type:t.ToasterService},{type:n.ConfigStateService},{type:n.AbpApplicationConfigurationService}]};var s=[{provide:i.APP_INITIALIZER,useFactory:l,deps:[n.SettingTabsService],multi:!0}];function l(e){return function(){e.add([{name:"AbpEmailing::Menu:Emailing",order:3,requiredPolicy:"AbpEmailing.SettingManagement",component:o}])}}var p=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[s]}},e}();p.decorators=[{type:i.NgModule,args:[{imports:[n.CoreModule,t.ThemeSharedModule],declarations:[o]}]}];var c=[{provide:i.APP_INITIALIZER,useFactory:g,deps:[n.RoutesService],multi:!0}];function g(e){return function(){e.add([{path:"/emailing",name:"Emailing",iconClass:"fas fa-book",layout:"application",order:3}])}}e.EMAILING_ROUTE_PROVIDERS=c,e.EMAILING_SETTING_TAB_PROVIDERS=s,e.EmailingConfigModule=p,e.configureRoutes=g,e.configureSettingTabs=l,e.ɵa=o,e.ɵb=s,e.ɵc=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=fs-emailing-config.umd.min.js.map