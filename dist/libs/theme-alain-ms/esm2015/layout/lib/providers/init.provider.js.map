{"version":3,"file":"init.provider.js","sourceRoot":"../../../../../libs/theme-alain-ms/layout/src/","sources":["lib/providers/init.provider.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,eAAe,EAAU,QAAQ,EAAE,MAAM,eAAe,CAAC;AAClE,OAAO,EACL,UAAU,EACV,MAAM,EACP,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AAEtE,MAAM,CAAC,MAAM,qBAAqB,GAAG;IACnC;QACE,OAAO,EAAE,eAAe;QACxB,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,CAAC,QAAQ,CAAC;QAChB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF,MAAM,UAAU,IAAI,CAAC,QAAkB;IACrC,OAAO,GAAG,EAAE;QACV,YAAY,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,QAAkB;IAC7C,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAE5D,MAAM,CAAC,MAAM;SACV,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAuB,EAAE,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC;SACzE,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;QACnB,8DAA8D;QAC9D,8CAA8C;QAC9C,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEhD,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import {\r\n  RoutesService,\r\n  LocalizationPipe,\r\n  PermissionService,\r\n} from '@abp/ng.core';\r\nimport { APP_INITIALIZER, inject, Injector } from '@angular/core';\r\nimport {\r\n  ResolveEnd,\r\n  Router\r\n} from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LayoutStateService } from '../services/layout-state.service';\r\n\r\nexport const LAYOUT_INIT_PROVIDERS = [\r\n  {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: init,\r\n    deps: [Injector],\r\n    multi: true,\r\n  },\r\n];\r\n\r\nexport function init(injector: Injector) {\r\n  return () => {\r\n    listenRouter(injector);\r\n  };\r\n}\r\n\r\nexport function listenRouter(injector: Injector) {\r\n  const router = injector.get(Router);\r\n  const layoutStateService = injector.get(LayoutStateService);\r\n\r\n  router.events\r\n    .pipe(filter((event): event is ResolveEnd => event instanceof ResolveEnd))\r\n    .subscribe((event) => {\r\n      //const currentUrl = decodeURI(event.state.url.split('?')[0]);\r\n      //layoutStateService.setStore({ currentUrl });\r\n      layoutStateService.fetchPageNavs(event.state);\r\n\r\n    });\r\n}\r\n"]}